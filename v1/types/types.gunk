package types

// Amount defines a transaction amount.
type Amount struct {
	// Cur is the currency of the amount.
	Cur string `pb:"1" json:"cur"`
	// Num is the value of the amount.
	Num string `pb:"2" json:"num"`
}

// MajorType describes the type of the account.
type MajorType int

const (
	UnknownMajorType MajorType = iota
	// Checking account.
	Checking
	// Saving account.
	Saving
	// TimeDeposit for a time deposit account.
	TimeDeposit
	// CommercialLoan for a business loan account.
	CommercialLoan
	// MortgageLoan for a home loan account.
	MortgageLoan
	// ConsumerLoan for a consumer loan account.
	ConsumerLoan
)

// MajorCategory describes the category of the account.
type MajorCategory int

const (
	UnknownMajorCategory MajorCategory = iota
	// Dep for deposit category.
	Dep
	// Loan for loan category.
	Loan
)

// DEPRECIATED: BankCode indicates which bank to use; these should be a list of banks
// that we are currently integrated with
// This is the updated list of banks per January 2018
type BankCode int

const (
	UnknownBankCode BankCode = iota
	Mandiri
	Bca
	Bni
	Bri
	DummyBank
	Bdo
	Bpi
	Aceh
	Agris
	Agroniaga
	AmarIndonesia
	Andara
	Antardaerah
	AnzIndonesia
	Arthagraha
	Artos
	BangkokIndonesia
	BarclaysIndonesia
	BcaSyariah
	Bi
	BisnisInternasional
	BniSyariah
	BriSyariah
	Btpn
	BtpnSyariah
	Bukopin
	BukopinSyariah
	BumiArta
	CapitalIndonesia
	CentratamaNasional
	CtbcIndonesia
	Danamon
	Danpac
	DinarIndonesia
	Dki
	DkiSyariah
	EkonomiRaharja
	Fama
	Ganesha
	Harda
	IcbcIndonesia
	InaPerdana
	IndexSelindo
	Jabar
	JabarSyariah
	JasaJakarta
	Jatim
	JatimSyariah
	KebHana
	KesejahteraanEkonomi
	MandiriSyariah
	MaspionIndonesia
	Mayapada
	Maybank
	MaybankSyariahIndonesia
	Mayora
	Mega
	MegaSyariah
	MestikaDharma
	MetroExpress
	Mitraniaga
	MizuhoIndonesia
	MncInternational
	MuamalatIndonesia
	MultiArta
	Mutiara
	NusantaraParahyangan
	OcbcNisp
	OcbcNispSyariah
	BankOfAmericaIndonesia
	BankOfChinaIndonesia
	BankOfIndiaIndonesia
	Pikko
	PrimaMaster
	PundiIndonesia
	QnbIndonesia
	RoyalIndonesia
	SahabatSampoerna
	SbiIndonesia
	SinarHarapan
	Sinarmas
	Btn
	BtnSyariah
	UobIndonesia
	Victoria
	VictoriaSyariah
	WinduKentjana
	WooriSaudaraIndonesia
	YudhaBakti
	BnpParibasIndonesia
	BpdAcehSyariah
	BpdBali
	BpdBengkulu
	BpdJambi
	BpdJawaTengah
	BpdKalimantanBarat
	BpdKalimantanBaratSyariah
	BpdKalimantanTengah
	BpdKalimantanTimur
	BpdKalimantanTimurSyariah
	BpdKalimantanSelatan
	BpdKalimantanSelatanSyariah
	BpdLampung
	BpdMaluku
	BpdNtb
	BpdNtt
	BpdPapua
	BpdRiauKepri
	BpdSulawesiSelatanBarat
	BpdSulawesiTengah
	BpdSulawesiTenggara
	BpdSulawesiUtara
	BpdSumateraBarat
	BpdSumateraBaratSyariah
	BpdSumateraSelatan
	BpdSumateraSelatanBabel
	BpdSumateraSelatanSyariah
	BpdSumateraSelatanUus
	BpdSumateraUtara
	BpdSumateraUtaraSyariah
	BpdYogyakarta
	BpdYogyakartaSyariah
	CimbNiaga
	CimbNiagaSyariah
	CitibankIndonesia
	CommonwealthIndonesia
	DanamonSyariah
	DbsIndonesia
	DeutscheAgIndonesia
	NobuIndonesia
	Panin
	PaninSyariah
	RaboIndonesia
	ResonaPerdania
	StandardCharteredIndonesia
	SumitomoMitsuiIndonesia
	BankOfTokyoIndonesia
	RoyalBankOfScotlandIndonesia
	Permata
	PermataSyariah
	SinarmasSyariah
	MandiriTaspen
	Banten
	Bei
	ChaseIndonesia
	CcbIndonesia
	JtrustIndonesia
	Transferwise
)

type CardStatus int

const (
	UnknownCardStatus CardStatus = iota

	// Lock is the lock status for a card.
	Lock

	// Unlock is the unlock status for a card.
	Unlock

	// Active is the active status for a card.
	Active
)

type CardAccessStatus int

const (
	UnknownCardAccessStatus CardAccessStatus = iota

	// Often indicates a card is used often.
	Often

	// Rare indicates a card is used rarely.
	Rare
)

// Address hold all details about Address
type Address struct {
	// CountryName holds the country name information.
	CountryName string `pb:"1" json:"country_name"`

	// CityName holds the city name information.
	CityName string `pb:"2" json:"city_name"`

	// State holds the state information.
	State string `pb:"3" json:"state"`

	// Street holds the street information.
	Street string `pb:"4" json:"line_1"`

	// PostalCode holds the postal code information.
	PostalCode string `pb:"5" json:"postal_code"`
}

// Location is An object representing a latitude/longitude pair. This is expressed as a pair
// of doubles representing degrees latitude and degrees longitude.
// Values must be within normalized ranges.
// Refer to https://godoc.org/google.golang.org/genproto/googleapis/type/latlng.
type Location struct {
	// The latitude in degrees. It must be in the range [-90.0, +90.0].
	Latitude float64 `pb:"1" json:"latitude"`

	// The longitude in degrees. It must be in the range [-180.0, +180.0]
	Longitude float64 `pb:"2" json:"longitude"`
}

type OfflineUserInfo struct {
	// UserID
	UserID string `pb:"1" json:"user_id"`

	// FirstName of the person
	FirstName string `pb:"2" json:"first_name"`

	// MiddleName or middle names (space separated) of the person
	MiddleName string `pb:"3" json:"middle_name"`

	// LastName or last names (space separated) of the person
	LastName string `pb:"4" json:"last_name"`

	// MobileNo contact of the person
	MobileNo string `pb:"5" json:"mobile_no"`

	// Location is the physical location of the interaction.
	Location Location `pb:"6" json:"location"`
}

// Structure of account information
type ProfileAccountInfo struct {

	// Bank code
	BankCode string `pb:"1" json:"bank_code"`

	// Account identifier
	AccountID string `pb:"2" json:"account_id"`

	// Account identifier
	ProfileID string `pb:"3" json:"profile_id"`
}

// Structure of customer profile information
type Profile struct {

	// ProfileID is the unique identifier of a profile.
	ProfileID string `pb:"1" json:"profile_id"`

	// Full name
	FullName string `pb:"2" json:"fullname"`

	// User name
	UserName string `pb:"3" json:"username"`

	// Birth date
	BirthDate string `pb:"4" json:"birthdate"`

	// Language code used
	Language string `pb:"5" json:"language"`

	// User country code (VN, US, ID, SG, ...).
	Country string `pb:"6" json:"country"`

	// User email address
	Email string `pb:"7" json:"email"`

	// True if email is verified, otherwise False
	EmailVefified bool `pb:"8" json:"email_verified"`

	// Mobile number
	Mobile string `pb:"9" json:"mobile"`

	// User profile photo url
	Photo string `pb:"10" json:"photo"`

	// Title
	Title string `pb:"11" json:"title"`

	// Permanent address
	PermanentAddress Address `pb:"12" json:"permanent_address"`

	// Contact address
	ContactAddress Address `pb:"13" json:"contact_address"`
}
