// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/card/all.proto

package card

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Card holds all details about a card.
type Card struct {
	// ID is a unique identifier of a card.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// Account is the account id who owns the card.
	Account string `protobuf:"bytes,2,opt,name=Account,json=account,proto3" json:"Account,omitempty"`
	// OwnerName is the owner name of the card.
	OwnerName string `protobuf:"bytes,3,opt,name=OwnerName,json=owner_name,proto3" json:"OwnerName,omitempty"`
	// ContactNumber is the contact number of the card owner.
	ContactNumber string `protobuf:"bytes,4,opt,name=ContactNumber,json=contact_number,proto3" json:"ContactNumber,omitempty"`
	// FirstName is the first name of card owner.
	FirstName string `protobuf:"bytes,5,opt,name=FirstName,json=first_name,proto3" json:"FirstName,omitempty"`
	// LastName is the last name of the card owner.
	LastName string `protobuf:"bytes,6,opt,name=LastName,json=last_name,proto3" json:"LastName,omitempty"`
	// Expiry is an expiry date of the card.
	Expiry *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Expiry,json=expiry,proto3" json:"Expiry,omitempty"`
	// Status is the status of the card, such as lock, unlock, active.
	Status types.CardStatus `protobuf:"varint,8,opt,name=Status,json=status,proto3,enum=types.CardStatus" json:"Status,omitempty"`
	// AccessStatus is the access status of the card, such as often and rare.
	AccessStatus         types.CardAccessStatus `protobuf:"varint,9,opt,name=AccessStatus,json=access_status,proto3,enum=types.CardAccessStatus" json:"AccessStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_41d7396a66589e9e, []int{0}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Card) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Card) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *Card) GetContactNumber() string {
	if m != nil {
		return m.ContactNumber
	}
	return ""
}

func (m *Card) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Card) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Card) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *Card) GetStatus() types.CardStatus {
	if m != nil {
		return m.Status
	}
	return types.CardStatus__
}

func (m *Card) GetAccessStatus() types.CardAccessStatus {
	if m != nil {
		return m.AccessStatus
	}
	return types.CardAccessStatus__
}

// GetCardRequest is a request to get card information.
type GetCardRequest struct {
	// CardToken is the identifier to get the card information.
	CardToken            string   `protobuf:"bytes,1,opt,name=CardToken,json=card_token,proto3" json:"CardToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCardRequest) Reset()         { *m = GetCardRequest{} }
func (m *GetCardRequest) String() string { return proto.CompactTextString(m) }
func (*GetCardRequest) ProtoMessage()    {}
func (*GetCardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41d7396a66589e9e, []int{1}
}

func (m *GetCardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCardRequest.Unmarshal(m, b)
}
func (m *GetCardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCardRequest.Marshal(b, m, deterministic)
}
func (m *GetCardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCardRequest.Merge(m, src)
}
func (m *GetCardRequest) XXX_Size() int {
	return xxx_messageInfo_GetCardRequest.Size(m)
}
func (m *GetCardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCardRequest proto.InternalMessageInfo

func (m *GetCardRequest) GetCardToken() string {
	if m != nil {
		return m.CardToken
	}
	return ""
}

// UpdateCardStatusRequest is a request to update card status.
type UpdateCardStatusRequest struct {
	// CardToken is the identifier to get the card information.
	CardToken string `protobuf:"bytes,1,opt,name=CardToken,json=card_token,proto3" json:"CardToken,omitempty"`
	// Status is the status to be updated.
	Status               types.CardStatus `protobuf:"varint,2,opt,name=Status,json=status,proto3,enum=types.CardStatus" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateCardStatusRequest) Reset()         { *m = UpdateCardStatusRequest{} }
func (m *UpdateCardStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCardStatusRequest) ProtoMessage()    {}
func (*UpdateCardStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41d7396a66589e9e, []int{2}
}

func (m *UpdateCardStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCardStatusRequest.Unmarshal(m, b)
}
func (m *UpdateCardStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCardStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCardStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCardStatusRequest.Merge(m, src)
}
func (m *UpdateCardStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCardStatusRequest.Size(m)
}
func (m *UpdateCardStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCardStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCardStatusRequest proto.InternalMessageInfo

func (m *UpdateCardStatusRequest) GetCardToken() string {
	if m != nil {
		return m.CardToken
	}
	return ""
}

func (m *UpdateCardStatusRequest) GetStatus() types.CardStatus {
	if m != nil {
		return m.Status
	}
	return types.CardStatus__
}

// UpdateCardAccessStatusRequest is a request to update card access status.
type UpdateCardAccessStatusRequest struct {
	// CardToken is the identifier to get the card information.
	CardToken string `protobuf:"bytes,1,opt,name=CardToken,json=card_token,proto3" json:"CardToken,omitempty"`
	// AccessStatus is the card access status to be updated.
	AccessStatus         types.CardAccessStatus `protobuf:"varint,2,opt,name=AccessStatus,json=access_status,proto3,enum=types.CardAccessStatus" json:"AccessStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateCardAccessStatusRequest) Reset()         { *m = UpdateCardAccessStatusRequest{} }
func (m *UpdateCardAccessStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCardAccessStatusRequest) ProtoMessage()    {}
func (*UpdateCardAccessStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41d7396a66589e9e, []int{3}
}

func (m *UpdateCardAccessStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCardAccessStatusRequest.Unmarshal(m, b)
}
func (m *UpdateCardAccessStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCardAccessStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCardAccessStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCardAccessStatusRequest.Merge(m, src)
}
func (m *UpdateCardAccessStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCardAccessStatusRequest.Size(m)
}
func (m *UpdateCardAccessStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCardAccessStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCardAccessStatusRequest proto.InternalMessageInfo

func (m *UpdateCardAccessStatusRequest) GetCardToken() string {
	if m != nil {
		return m.CardToken
	}
	return ""
}

func (m *UpdateCardAccessStatusRequest) GetAccessStatus() types.CardAccessStatus {
	if m != nil {
		return m.AccessStatus
	}
	return types.CardAccessStatus__
}

// Result is result for update operation.
type Result struct {
	// Success is the flag for success operation.
	Success bool `protobuf:"varint,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
	// ErrorCode is the code of the error.
	ErrorCode string `protobuf:"bytes,2,opt,name=ErrorCode,json=error_code,proto3" json:"ErrorCode,omitempty"`
	// ErrorMessage is the message of the error.
	ErrorMessage         string   `protobuf:"bytes,3,opt,name=ErrorMessage,json=error_message,proto3" json:"ErrorMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_41d7396a66589e9e, []int{4}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

func (m *Result) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*Card)(nil), "card.Card")
	proto.RegisterType((*GetCardRequest)(nil), "card.GetCardRequest")
	proto.RegisterType((*UpdateCardStatusRequest)(nil), "card.UpdateCardStatusRequest")
	proto.RegisterType((*UpdateCardAccessStatusRequest)(nil), "card.UpdateCardAccessStatusRequest")
	proto.RegisterType((*Result)(nil), "card.Result")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/card/all.proto", fileDescriptor_41d7396a66589e9e)
}

var fileDescriptor_41d7396a66589e9e = []byte{
	// 1227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x96, 0x4d, 0x8f, 0x1b, 0x45,
	0x13, 0xc7, 0x67, 0xc6, 0xbb, 0x5e, 0x6f, 0xe7, 0xe5, 0xd9, 0x74, 0xa2, 0xc4, 0xf2, 0x93, 0x40,
	0xcb, 0x20, 0x65, 0x89, 0x92, 0xb6, 0xd7, 0x49, 0x0e, 0xac, 0x04, 0xc8, 0x59, 0xf2, 0xaa, 0x90,
	0xac, 0x9c, 0x80, 0x50, 0x2e, 0xab, 0xf6, 0x4c, 0xd9, 0x1e, 0x32, 0xee, 0x1e, 0xba, 0x7b, 0xbc,
	0x59, 0x10, 0x12, 0x22, 0x12, 0xca, 0x05, 0x29, 0xda, 0x9c, 0x90, 0xf8, 0x08, 0x5c, 0x41, 0x1c,
	0xb8, 0x71, 0x46, 0x42, 0xe2, 0xc2, 0x05, 0x4e, 0xb9, 0x80, 0xf8, 0x00, 0x1c, 0x51, 0x77, 0x8f,
	0xdf, 0xd6, 0x0e, 0xb0, 0xe1, 0xc0, 0xc9, 0x9e, 0xae, 0x7f, 0x55, 0x57, 0xff, 0xaa, 0xaa, 0x67,
	0x10, 0xed, 0xc6, 0xba, 0x97, 0xb5, 0x69, 0x28, 0xfa, 0x35, 0x91, 0x02, 0x6f, 0x33, 0x7e, 0x7f,
	0xfc, 0x67, 0xb0, 0x56, 0x0b, 0x99, 0x8c, 0x6a, 0x2c, 0x49, 0x68, 0x2a, 0x85, 0x16, 0x78, 0xc1,
	0x3c, 0x57, 0x5e, 0xec, 0x0a, 0xd1, 0x4d, 0xa0, 0x66, 0xd7, 0xda, 0x59, 0xa7, 0xa6, 0xe3, 0x3e,
	0x28, 0xcd, 0xfa, 0xa9, 0x93, 0x55, 0x4e, 0xe6, 0x02, 0x96, 0xc6, 0x35, 0xc6, 0xb9, 0xd0, 0x4c,
	0xc7, 0x82, 0xab, 0xdc, 0x7a, 0xd6, 0xfe, 0x84, 0xe7, 0xba, 0xc0, 0xcf, 0xa9, 0x6d, 0xd6, 0xed,
	0x82, 0xac, 0x89, 0xd4, 0x2a, 0xe6, 0xa8, 0x6b, 0x7f, 0x97, 0xa2, 0xde, 0x49, 0x41, 0x8d, 0x73,
	0xac, 0x7e, 0x57, 0x40, 0x0b, 0x1b, 0x4c, 0x46, 0xb8, 0x82, 0x82, 0xeb, 0x6f, 0x96, 0x7d, 0xe2,
	0xaf, 0x2e, 0x5f, 0x42, 0x25, 0xaf, 0xec, 0xad, 0x7a, 0x75, 0x6f, 0xd3, 0x6b, 0x05, 0x71, 0x84,
	0x5f, 0x46, 0x4b, 0xcd, 0x30, 0x14, 0x19, 0xd7, 0xe5, 0x60, 0x46, 0xb0, 0xc4, 0x9c, 0x09, 0xbf,
	0x82, 0x96, 0x6f, 0x6f, 0x73, 0x90, 0xb7, 0x58, 0x1f, 0xca, 0x85, 0x19, 0x1d, 0x12, 0xc6, 0xb8,
	0xc5, 0x59, 0x1f, 0xf0, 0x1a, 0x3a, 0xb4, 0x21, 0xb8, 0x66, 0xa1, 0xbe, 0x95, 0xf5, 0xdb, 0x20,
	0xcb, 0x0b, 0x33, 0xf2, 0xc3, 0xa1, 0x13, 0x6c, 0x71, 0xab, 0x30, 0xd1, 0xaf, 0xc4, 0x52, 0x69,
	0x1b, 0x7d, 0x71, 0x36, 0x7a, 0xc7, 0x18, 0x5d, 0xf4, 0xd3, 0xa8, 0x74, 0x93, 0xe5, 0xca, 0xe2,
	0x8c, 0x72, 0x39, 0x61, 0x43, 0xe1, 0xeb, 0xa8, 0x78, 0xf9, 0x41, 0x1a, 0xcb, 0x9d, 0xf2, 0x12,
	0xf1, 0x57, 0x0f, 0x34, 0x2a, 0xd4, 0x95, 0x82, 0x0e, 0x6b, 0x45, 0xef, 0x0e, 0x6b, 0x35, 0x15,
	0xa2, 0x08, 0xd6, 0x0b, 0x5f, 0x44, 0xc5, 0x3b, 0x9a, 0xe9, 0x4c, 0x95, 0x4b, 0xc4, 0x5f, 0x3d,
	0xdc, 0x38, 0x42, 0x2d, 0x5e, 0x6a, 0x80, 0x3a, 0xc3, 0xb4, 0x9b, 0xb2, 0x6b, 0xf8, 0x1a, 0x3a,
	0xd8, 0x0c, 0x43, 0x50, 0x2a, 0x77, 0x5e, 0xb6, 0xce, 0x27, 0x26, 0x9c, 0x27, 0xcd, 0x53, 0x21,
	0x0e, 0x31, 0x6b, 0xd9, 0x72, 0x91, 0xd6, 0x8b, 0x25, 0x6f, 0xc5, 0x2b, 0x7b, 0xd5, 0x0d, 0x74,
	0xf8, 0x2a, 0x68, 0xe3, 0xd9, 0x82, 0xf7, 0x33, 0x50, 0xb6, 0x18, 0xe6, 0xf1, 0xae, 0xb8, 0x0f,
	0x7c, 0x4e, 0x55, 0x91, 0x69, 0xcd, 0x2d, 0x6d, 0xac, 0xa3, 0x20, 0x0f, 0x7d, 0x74, 0xe2, 0xed,
	0x34, 0x62, 0x1a, 0xc6, 0xf9, 0xef, 0x3f, 0xdc, 0x04, 0x94, 0x60, 0x1f, 0x50, 0x46, 0x59, 0x7c,
	0xe1, 0xa3, 0x53, 0xe3, 0x2c, 0x26, 0x41, 0x3c, 0x47, 0x2e, 0x7b, 0x49, 0x07, 0xff, 0x9a, 0xf4,
	0xae, 0x8f, 0x8a, 0x2d, 0x50, 0x59, 0xa2, 0xcd, 0x54, 0xdc, 0xc9, 0xac, 0xc8, 0x66, 0x51, 0x9a,
	0x9e, 0x0a, 0xe5, 0x4c, 0x26, 0xdb, 0xcb, 0x52, 0x0a, 0xb9, 0x21, 0x22, 0x98, 0x33, 0x3d, 0x08,
	0x8c, 0x71, 0x2b, 0x14, 0x11, 0xe0, 0x1a, 0x3a, 0x68, 0xa5, 0x6f, 0x81, 0x52, 0xac, 0x3b, 0x6f,
	0x86, 0x0e, 0x39, 0x75, 0xdf, 0x09, 0x86, 0x49, 0x35, 0x3e, 0x5f, 0x42, 0x07, 0x2c, 0x5e, 0x90,
	0x83, 0x38, 0x04, 0xfc, 0x55, 0x80, 0x96, 0xf2, 0x7e, 0xc0, 0xc7, 0xa8, 0xe1, 0x41, 0xa7, 0xdb,
	0xa3, 0x82, 0xdc, 0xaa, 0x59, 0xaa, 0x3e, 0x0c, 0x76, 0x9b, 0x3f, 0xfb, 0xf9, 0x35, 0xf0, 0xff,
	0x16, 0x68, 0x19, 0xc3, 0x00, 0x08, 0x23, 0x46, 0x42, 0x62, 0xde, 0x11, 0xb2, 0x6f, 0x2f, 0x99,
	0xca, 0xb5, 0xa1, 0x51, 0x11, 0x96, 0x24, 0x24, 0x62, 0x9a, 0x91, 0x8e, 0x14, 0xfd, 0x5c, 0x7b,
	0x96, 0x28, 0x48, 0x20, 0xd4, 0x10, 0x91, 0xf6, 0x0e, 0xd1, 0x3d, 0x20, 0xe3, 0x52, 0x90, 0x1d,
	0x91, 0x11, 0x95, 0xa5, 0x69, 0x12, 0x43, 0x44, 0x6f, 0x9c, 0x46, 0x85, 0x46, 0xbd, 0x8e, 0x09,
	0x7a, 0x21, 0xcf, 0x88, 0xc0, 0x03, 0x08, 0x33, 0xe3, 0x9a, 0x83, 0xeb, 0x64, 0x49, 0xb2, 0x43,
	0x6f, 0xac, 0xa1, 0xc2, 0x85, 0xfa, 0x05, 0x7c, 0x06, 0xad, 0xb6, 0x40, 0x67, 0x92, 0x43, 0x44,
	0xb6, 0x7b, 0xc0, 0x6d, 0x74, 0x09, 0x4a, 0x64, 0x32, 0x04, 0x12, 0x2b, 0xc2, 0x85, 0x26, 0x1d,
	0x91, 0xf1, 0x88, 0xb6, 0x31, 0x5a, 0x41, 0xc5, 0xdb, 0xcd, 0x4c, 0xf7, 0x1a, 0xb8, 0x88, 0x16,
	0x24, 0xb0, 0xe8, 0x93, 0x1f, 0x9f, 0x3e, 0x09, 0x8e, 0xe3, 0x63, 0xa3, 0x4b, 0xfa, 0xc3, 0x51,
	0x07, 0x7d, 0xf4, 0x28, 0xf0, 0x1e, 0x07, 0x16, 0x30, 0x7e, 0x12, 0xa0, 0x95, 0xbd, 0x13, 0x80,
	0x4f, 0x39, 0x54, 0xcf, 0x98, 0x8c, 0xca, 0x41, 0x67, 0x76, 0x3d, 0x51, 0xfd, 0xde, 0xdf, 0x6d,
	0x7e, 0x99, 0xb3, 0x44, 0x68, 0x22, 0xca, 0x51, 0xe7, 0x4f, 0xcc, 0x12, 0x71, 0x6b, 0xb4, 0x32,
	0xb5, 0xe8, 0x1a, 0xed, 0xbf, 0x41, 0x73, 0xa4, 0xfa, 0xbf, 0x11, 0x1a, 0x97, 0xc7, 0x04, 0x95,
	0xaf, 0x03, 0x74, 0x7c, 0xfe, 0x44, 0xe2, 0x97, 0xf6, 0xb2, 0x99, 0x33, 0xaf, 0x7b, 0x08, 0x3d,
	0xf5, 0x77, 0x9b, 0xdf, 0x0e, 0x09, 0x4d, 0x4d, 0x27, 0xae, 0xe4, 0x38, 0x6c, 0xdf, 0xb9, 0xf1,
	0x1b, 0x52, 0xa9, 0xfc, 0x85, 0xed, 0x39, 0x40, 0xfc, 0x63, 0xc8, 0xcf, 0x24, 0x56, 0xae, 0x1e,
	0x1f, 0xbf, 0xf1, 0x27, 0x6f, 0x8a, 0x31, 0xb8, 0x4a, 0xe1, 0x51, 0xe0, 0x5d, 0xfa, 0xac, 0xb8,
	0xdb, 0xfc, 0x6d, 0x11, 0x15, 0x1a, 0xb4, 0x8e, 0x6f, 0xa2, 0x92, 0x2d, 0x75, 0x73, 0xf3, 0x3a,
	0x7e, 0x75, 0x53, 0x8a, 0x41, 0x1c, 0x81, 0x22, 0xa1, 0x04, 0x73, 0x32, 0xc6, 0x23, 0x62, 0xc2,
	0x13, 0x91, 0x82, 0x74, 0x2f, 0x75, 0x22, 0xf8, 0x68, 0x8c, 0x46, 0x27, 0xa1, 0x8d, 0xc5, 0x35,
	0x5a, 0xa7, 0xf5, 0x6a, 0xa1, 0x36, 0x58, 0x3b, 0xe3, 0x07, 0x8d, 0x15, 0x66, 0xa6, 0x2a, 0xb4,
	0x2e, 0xb5, 0xf7, 0x94, 0xe0, 0xeb, 0x33, 0x2b, 0xad, 0x9b, 0x06, 0xd1, 0x1a, 0xbe, 0x8c, 0x36,
	0xe6, 0x21, 0x72, 0x04, 0x22, 0x01, 0x8e, 0x91, 0x7d, 0xf3, 0xc6, 0x5c, 0x59, 0x6b, 0xa6, 0x40,
	0x9e, 0xb6, 0x49, 0x46, 0xc0, 0x75, 0xcc, 0x12, 0x45, 0x5b, 0x9b, 0x26, 0xda, 0x79, 0x7c, 0x1d,
	0x5d, 0x9d, 0x8d, 0x66, 0xf4, 0xe3, 0x50, 0x3d, 0x36, 0x00, 0x92, 0x82, 0xec, 0xc7, 0x4a, 0xc5,
	0xe6, 0x34, 0x62, 0x58, 0xbc, 0xc9, 0xe2, 0xd0, 0xd6, 0xfe, 0x4b, 0xd8, 0xba, 0x82, 0x0a, 0x17,
	0xeb, 0x75, 0xfc, 0x06, 0x7a, 0x6d, 0xda, 0x85, 0x71, 0x92, 0x71, 0x78, 0x90, 0xba, 0x8b, 0xc8,
	0x5e, 0x98, 0x44, 0x84, 0x61, 0x26, 0x21, 0x1a, 0xf2, 0x54, 0x20, 0x07, 0x20, 0x89, 0x8a, 0x23,
	0xa0, 0xad, 0x2d, 0xb3, 0x75, 0x1d, 0xbf, 0x8b, 0xde, 0x79, 0x36, 0x9a, 0xb6, 0x88, 0x76, 0xcc,
	0xf6, 0x7d, 0x96, 0xb8, 0xdb, 0xd0, 0x84, 0x16, 0x13, 0xe7, 0xec, 0x33, 0x1d, 0xf6, 0xac, 0xcb,
	0x68, 0xe7, 0xdc, 0x97, 0xde, 0xfb, 0xdd, 0x47, 0xbf, 0xfa, 0xa3, 0x26, 0xfa, 0xc5, 0x2f, 0x15,
	0xf0, 0xa7, 0x7e, 0x33, 0xa7, 0x20, 0x88, 0x96, 0x8c, 0x2b, 0x16, 0xba, 0x82, 0x0f, 0xcf, 0xaa,
	0xcc, 0x6e, 0x12, 0x94, 0x96, 0xb1, 0x0d, 0x66, 0xb8, 0x65, 0xba, 0x67, 0x2a, 0x10, 0x32, 0xb3,
	0x60, 0x30, 0x2b, 0x4a, 0xee, 0xf6, 0x60, 0xd2, 0x60, 0x10, 0xa7, 0x52, 0xd8, 0xd0, 0x1d, 0x91,
	0x24, 0x62, 0xdb, 0x81, 0x36, 0x5b, 0x0b, 0x19, 0x7f, 0xe0, 0x14, 0xe6, 0x55, 0x44, 0x3a, 0x89,
	0xd8, 0xa6, 0xab, 0x0b, 0x8d, 0x92, 0x69, 0x63, 0x13, 0x62, 0x7d, 0xd9, 0x7e, 0x1f, 0x9a, 0x3b,
	0xf1, 0xd2, 0x3a, 0xaa, 0xb8, 0x5e, 0xc7, 0xf8, 0xaa, 0x64, 0x5c, 0x2b, 0xd7, 0x99, 0xae, 0x74,
	0xe8, 0x24, 0x5a, 0xdc, 0x96, 0xb1, 0x06, 0x7c, 0x34, 0x37, 0xda, 0xa7, 0xdc, 0x7a, 0xcd, 0xdf,
	0xf4, 0xee, 0xd9, 0x2f, 0xdf, 0x8f, 0x7d, 0xef, 0x91, 0xef, 0x3d, 0xf6, 0xbd, 0x6f, 0x7c, 0xef,
	0x27, 0xdf, 0xfb, 0xc3, 0xf7, 0x7e, 0x08, 0xbc, 0x76, 0xd1, 0x7e, 0x5b, 0x9d, 0xff, 0x33, 0x00,
	0x00, 0xff, 0xff, 0xb9, 0x04, 0x6d, 0x50, 0x4d, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CardServiceClient is the client API for CardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CardServiceClient interface {
	// GetCard retrieves the detail of a card information, selected by its token.
	GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*Card, error)
	// UpdateCardStatus update the card status.
	UpdateCardStatus(ctx context.Context, in *UpdateCardStatusRequest, opts ...grpc.CallOption) (*Result, error)
	// UpdateCardAccessStatus update the card access status.
	UpdateCardAccessStatus(ctx context.Context, in *UpdateCardAccessStatusRequest, opts ...grpc.CallOption) (*Result, error)
}

type cardServiceClient struct {
	cc *grpc.ClientConn
}

func NewCardServiceClient(cc *grpc.ClientConn) CardServiceClient {
	return &cardServiceClient{cc}
}

func (c *cardServiceClient) GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*Card, error) {
	out := new(Card)
	err := c.cc.Invoke(ctx, "/card.CardService/GetCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) UpdateCardStatus(ctx context.Context, in *UpdateCardStatusRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/card.CardService/UpdateCardStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardServiceClient) UpdateCardAccessStatus(ctx context.Context, in *UpdateCardAccessStatusRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/card.CardService/UpdateCardAccessStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardServiceServer is the server API for CardService service.
type CardServiceServer interface {
	// GetCard retrieves the detail of a card information, selected by its token.
	GetCard(context.Context, *GetCardRequest) (*Card, error)
	// UpdateCardStatus update the card status.
	UpdateCardStatus(context.Context, *UpdateCardStatusRequest) (*Result, error)
	// UpdateCardAccessStatus update the card access status.
	UpdateCardAccessStatus(context.Context, *UpdateCardAccessStatusRequest) (*Result, error)
}

// UnimplementedCardServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCardServiceServer struct {
}

func (*UnimplementedCardServiceServer) GetCard(ctx context.Context, req *GetCardRequest) (*Card, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCard not implemented")
}
func (*UnimplementedCardServiceServer) UpdateCardStatus(ctx context.Context, req *UpdateCardStatusRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCardStatus not implemented")
}
func (*UnimplementedCardServiceServer) UpdateCardAccessStatus(ctx context.Context, req *UpdateCardAccessStatusRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCardAccessStatus not implemented")
}

func RegisterCardServiceServer(s *grpc.Server, srv CardServiceServer) {
	s.RegisterService(&_CardService_serviceDesc, srv)
}

func _CardService_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.CardService/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).GetCard(ctx, req.(*GetCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_UpdateCardStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCardStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).UpdateCardStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.CardService/UpdateCardStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).UpdateCardStatus(ctx, req.(*UpdateCardStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardService_UpdateCardAccessStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCardAccessStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardServiceServer).UpdateCardAccessStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/card.CardService/UpdateCardAccessStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardServiceServer).UpdateCardAccessStatus(ctx, req.(*UpdateCardAccessStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "card.CardService",
	HandlerType: (*CardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCard",
			Handler:    _CardService_GetCard_Handler,
		},
		{
			MethodName: "UpdateCardStatus",
			Handler:    _CardService_UpdateCardStatus_Handler,
		},
		{
			MethodName: "UpdateCardAccessStatus",
			Handler:    _CardService_UpdateCardAccessStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/card/all.proto",
}
