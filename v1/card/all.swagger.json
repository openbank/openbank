{
  "swagger": "2.0",
  "info": {
    "title": "Card API",
    "description": "Provides create and read operations on the card resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/card": {
      "post": {
        "summary": "Create new card",
        "description": "Create new card",
        "operationId": "CreateCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardCreateCardResponse"
            }
          },
          "201": {
            "description": "Card Created",
            "schema": {
              "$ref": "#/definitions/cardCreateCardResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardCreateCardRequest"
            }
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.write"
            ]
          }
        ]
      }
    },
    "/v1/card/access_status/{CardToken}": {
      "put": {
        "summary": "Update card access status.",
        "description": "Update card access status.",
        "operationId": "UpdateCardAccessStatus",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/cardResult"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "CardToken",
            "description": "CardToken is the identifier to get the card information.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardUpdateCardAccessStatusRequest"
            }
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.write"
            ]
          }
        ]
      }
    },
    "/v1/card/attribute": {
      "post": {
        "summary": "Create new card attribute",
        "description": "Create new card attribute",
        "operationId": "CreateCardAttribute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cardCreateCardAttributeResponse"
            }
          },
          "201": {
            "description": "Card Attribute Created",
            "schema": {
              "$ref": "#/definitions/cardCreateCardAttributeResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardCreateCardAttributeRequest"
            }
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.write"
            ]
          }
        ]
      }
    },
    "/v1/card/status/{CardToken}": {
      "put": {
        "summary": "Update card status",
        "description": "Update Card status.",
        "operationId": "UpdateCardStatus",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/cardResult"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "CardToken",
            "description": "CardToken is the identifier to get the card information.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardUpdateCardStatusRequest"
            }
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.write"
            ]
          }
        ]
      }
    },
    "/v1/card/user/{UserID}": {
      "get": {
        "summary": "Retrieves all available cards",
        "description": "Retrieves all available cards for specific user, selected by the user_id",
        "operationId": "GetUserCards",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/cardGetUserCardsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "UserID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.read"
            ]
          }
        ]
      }
    },
    "/v1/card/{CardID}": {
      "delete": {
        "summary": "Delete a card",
        "description": "Permanently delete a card.",
        "operationId": "DeleteCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "Card successfully deleted.",
            "schema": {}
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "CardID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.write"
            ]
          }
        ]
      }
    },
    "/v1/card/{CardToken}": {
      "get": {
        "summary": "Retrieve card information",
        "description": "Retrieves all data from a card, selected by the card_token you supplied.",
        "operationId": "GetCard",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/cardCard"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "CardToken",
            "description": "CardToken is the identifier to get the card information.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/card.read"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "cardCard": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "description": "ID is a unique identifier of a card."
        },
        "Account": {
          "type": "string",
          "description": "Account is the ID of the account associated with the card."
        },
        "CardNumber": {
          "type": "string",
          "description": "CardNumber is the unique identification number of each card."
        },
        "OwnerName": {
          "type": "string",
          "description": "OwnerName is the name of the card owner."
        },
        "ContactNumber": {
          "type": "string",
          "description": "ContactNumber is the contact number of the card owner."
        },
        "FirstName": {
          "type": "string",
          "description": "FirstName is the first name of card owner."
        },
        "LastName": {
          "type": "string",
          "description": "LastName is the last name of the card owner."
        },
        "Expiry": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry is an expiry date of the card."
        },
        "Status": {
          "$ref": "#/definitions/typesCardStatus",
          "description": "Status is the status of the card."
        },
        "AccessStatus": {
          "$ref": "#/definitions/typesCardAccessStatus",
          "description": "AccessStatus is the access status of the card."
        },
        "AmountDue": {
          "$ref": "#/definitions/typesAmount",
          "description": "AmountDue is the the card holder is expected to paid by the due date."
        },
        "CreditLimit": {
          "type": "string",
          "description": "CreditLimit is the allowed credit limit."
        }
      },
      "description": "Card holds all details about a card."
    },
    "cardCreateCardAttributeRequest": {
      "type": "object",
      "properties": {
        "CardID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "cardCreateCardAttributeResponse": {
      "type": "object",
      "properties": {
        "AttributeID": {
          "type": "string"
        },
        "CardID": {
          "type": "string"
        }
      }
    },
    "cardCreateCardRequest": {
      "type": "object",
      "properties": {
        "CardNumber": {
          "type": "string",
          "description": "CardNumber is the unique identification number of each card."
        },
        "AccountID": {
          "type": "string",
          "description": "Account is the ID of the account associated with the card."
        },
        "ContactNumber": {
          "type": "string",
          "description": "ContactNumber is the contact number of the card owner."
        },
        "FirstName": {
          "type": "string",
          "description": "FirstName is the first name of card owner."
        },
        "LastName": {
          "type": "string",
          "description": "LastName is the last name of the card owner."
        }
      },
      "title": "CreateCardRequest is the request data to create new card"
    },
    "cardCreateCardResponse": {
      "type": "object",
      "properties": {
        "CardID": {
          "type": "string"
        },
        "Expiry": {
          "type": "string"
        }
      },
      "title": "CreateCardResponse is the response for CreateCardRequest"
    },
    "cardGetUserCardsResponse": {
      "type": "object",
      "properties": {
        "Result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cardCard"
          }
        }
      }
    },
    "cardResult": {
      "type": "object",
      "properties": {
        "Success": {
          "type": "boolean",
          "format": "boolean",
          "description": "Success is a boolean indicating the success of the operation."
        },
        "ErrorCode": {
          "type": "string",
          "description": "ErrorCode is the code of the error."
        },
        "ErrorMessage": {
          "type": "string",
          "description": "ErrorMessage is the message of the error."
        }
      },
      "description": "Result is result of the update operation."
    },
    "cardUpdateCardAccessStatusRequest": {
      "type": "object",
      "properties": {
        "CardToken": {
          "type": "string",
          "description": "CardToken is the identifier to get the card information."
        },
        "AccessStatus": {
          "$ref": "#/definitions/typesCardAccessStatus",
          "description": "AccessStatus is the new card access status."
        }
      },
      "description": "UpdateCardAccessStatusRequest is the request envelope to update card access status."
    },
    "cardUpdateCardStatusRequest": {
      "type": "object",
      "properties": {
        "CardToken": {
          "type": "string",
          "description": "CardToken is the identifier to get the card information."
        },
        "Status": {
          "$ref": "#/definitions/typesCardStatus",
          "description": "Status is the new card status."
        }
      },
      "description": "UpdateCardStatusRequest is the request envelope to update card status."
    },
    "typesAmount": {
      "type": "object",
      "properties": {
        "Cur": {
          "type": "string",
          "description": "Cur is the currency of the amount."
        },
        "Num": {
          "type": "string",
          "description": "Num is the value of the amount."
        }
      },
      "description": "Amount defines a transaction amount."
    },
    "typesCardAccessStatus": {
      "type": "string",
      "enum": [
        "UnknownCardAccessStatus",
        "Often",
        "Rare"
      ],
      "default": "UnknownCardAccessStatus",
      "description": " - Often: CardAccessStatus_Often indicates a card is used often.\n - Rare: CardAccessStatus_Rare indicates a card is used rarely."
    },
    "typesCardStatus": {
      "type": "string",
      "enum": [
        "UnknownCardStatus",
        "Lock",
        "Unlock",
        "Active"
      ],
      "default": "UnknownCardStatus",
      "description": " - Lock: CardStatus_Lock is the lock status for a card.\n - Unlock: CardStatus_Unlock is the unlock status for a card.\n - Active: CardStatus_Active is the active status for a card."
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to card resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "https://auth.bnk.to/card.read": "View card data",
        "https://auth.bnk.to/card.write": "Manage card data"
      }
    }
  }
}
