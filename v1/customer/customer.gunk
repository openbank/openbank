// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Customer API",
//                 Description: "Provides create and read operations on the customer resource.",
//                 Version:     "1.0.0",
//         },
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
//         Consumes: []string{
//                 "application/json",
//         },
//         Produces: []string{
//                 "application/json",
//         },
//         Responses: map[string]openapiv2.Response{
//                 "400": openapiv2.Response{
//                         Description: "Returned when the request body is malformatted or does not match the expected request.",
//                 },
//                 "401": openapiv2.Response{
//                         Description: "Returned when the request does not contains the user's credentials.",
//                 },
//                 "403": openapiv2.Response{
//                         Description: "Returned when the user does not have permission to access the resource.",
//                 },
//                 "404": openapiv2.Response{
//                         Description: "Returned when the resource is not found.",
//                 },
//                 "500": openapiv2.Response{
//                         Description: "Returned when an unexpected error occured on the server side.",
//                 },
//         },
//         SecurityDefinitions: openapiv2.SecurityDefinitions{
//                 Security: map[string]openapiv2.SecurityScheme{
//                         "OAuth2": openapiv2.SecurityScheme{
//                                 Type:             openapiv2.TYPE_OAUTH2,
//                                 Flow:             openapiv2.FLOW_ACCESS_CODE,
//                                 Description:      "Access to customer resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
//                                 AuthorizationURL: "/v1/auth",
//                                 TokenURL:         "/v1/token",
//                                 Scopes: openapiv2.Scopes{
//                                         Scope: map[string]string{
//                                                 "https://auth.bnk.to/customer.read":  "View customer data",
//                                                 "https://auth.bnk.to/customer.write": "Manage customer data",
//                                         },
//                                 },
//                         },
//                 },
//         },
// }
package customer

import (
	"time"

	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"

	types "github.com/openbank/openbank/v1/types"
)

type FaceImage struct {
	URL  string    `pb:"1" json:"url"`
	Date time.Time `pb:"2" json:"date"`
}

type CreditRating struct {
	Rating string `pb:"1" json:"rating"`
	Source string `pb:"2" json:"source"`
}

type Customer struct {
	ID                       string       `pb:"1" json:"id"`
	BankID                   string       `pb:"2" json:"bank_id"`
	CustomerNumber           string       `pb:"3" json:"customer_number"`
	LegalName                string       `pb:"4" json:"legal_name"`
	PhoneNumber              string       `pb:"5" json:"phone_number"`
	Email                    string       `pb:"6" json:"email"`
	FaceImage                FaceImage    `pb:"7" json:"face_image"`
	DateOfBirth              time.Time    `pb:"8" json:"date_of_birth"`
	RelationshipStatus       string       `pb:"9" json:"relationship_status"`
	CreditRating             CreditRating `pb:"10" json:"credit_rating"`
	CreditLimit              types.Amount `pb:"11" json:"credit_limit"`
	HighestEducationAttained string       `pb:"12" json:"highest_educational_attained"`
	EmploymentStatus         string       `pb:"13" json:"employment_status"`
	KYCStatus                bool         `pb:"14" json:"kyc_status"`
	LastOKDate               time.Time    `pb:"15" json:"last_ok_data"`
	Title                    string       `pb:"16" json:"title"`
	BranchID                 string       `pb:"17" json:"branch_id"`
}

type CreateCustomerRequest struct {
	BankID                   string       `pb:"1" json:"bank_id"`
	LegalName                string       `pb:"2" json:"legal_name"`
	MobilePhoneNumber        string       `pb:"3" json:"mobile_phone_number"`
	Email                    string       `pb:"4" json:"email"`
	FaceImage                FaceImage    `pb:"5" json:"face_image"`
	DateOfBirth              time.Time    `pb:"6" json:"date_of_birth"`
	RelationshipStatus       string       `pb:"7" json:"relationship_status"`
	DobOfDependents          []time.Time  `pb:"8" json:"dob_of_dependents"`
	CreditRating             CreditRating `pb:"9" json:"credit_rating"`
	CreditLimit              types.Amount `pb:"10" json:"credit_limit"`
	HighestEducationAttained string       `pb:"11" json:"highest_education_attained"`
	EmploymentStatus         string       `pb:"12" json:"employment_status"`
	LastOKDate               time.Time    `pb:"13" json:"last_ok_date"`
	Title                    string       `pb:"14" json:"title"`
	BranchID                 string       `pb:"15" json:"branchId"`
}

type CreateCustomerResponse struct {
	CustomerID string `pb:"1" json:"customer_id"`
	BankID     string `pb:"2" json:"bank_id"`
}

type AddAddressToCustomerRequest struct {
	CustomerID  string   `pb:"1" json:"customer_id"`
	Line1       string   `pb:"2" json:"line_1"`
	Line2       string   `pb:"3" json:"line_2"`
	Line3       string   `pb:"4" json:"line_3"`
	City        string   `pb:"5" json:"city"`
	County      string   `pb:"6" json:"county"`
	State       string   `pb:"7" json:"state"`
	Postcode    string   `pb:"8" json:"postcode"`
	CountryCode string   `pb:"9" json:"country_code"`
	Tags        []string `pb:"10" json:"tags"`
	Status      string   `pb:"11" json:"status"`
}

type AddAddressToCustomerResponse struct {
	CustomerAddressID string    `pb:"1" json:"customer_address_id"`
	CustomerID        string    `pb:"2" json:"customer_id"`
	Line1             string    `pb:"3" json:"line_1"`
	Line2             string    `pb:"4" json:"line_2"`
	Line3             string    `pb:"5" json:"line_3"`
	City              string    `pb:"6" json:"city"`
	County            string    `pb:"7" json:"county"`
	State             string    `pb:"8" json:"state"`
	Postcode          string    `pb:"9" json:"postcode"`
	CountryCode       string    `pb:"10" json:"country_code"`
	Tags              []string  `pb:"11" json:"tags"`
	Status            string    `pb:"12" json:"status"`
	InsertDate        time.Time `pb:"13" json:"insert_date"`
}

type AddSocialMediaHandleRequest struct {
	CustomerID     string    `pb:"1" json:"customer_id"`
	CustomerNumber string    `pb:"2" json:"customer_number"`
	Type           string    `pb:"3" json:"type"`
	Handle         string    `pb:"4" json:"handle"`
	DateAdded      time.Time `pb:"5" json:"date_added"`
	DateActivated  time.Time `pb:"6" json:"date_activated"`
}

type AddSocialMediaHandleResponse struct {
	Success string `pb:"1" json:"success"`
}

type CreateCreditLimitOrderRequest struct {
	BankID                          string `pb:"1" json:"bank_id"`
	CustomerID                      string `pb:"2" json:"customer_id"`
	RequestedCurrentRateAmount1     string `pb:"3" json:"requested_current_rate_amount1"`
	RequestedCurrentRateAmount2     string `pb:"4" json:"requested_current_rate_amount2"`
	RequestedCurrentValidEndDate    string `pb:"5" json:"requested_current_valid_end_date"`
	CurrentCreditDocumentation      string `pb:"6" json:"current_credit_documentation"`
	TemporaryRequestedCurrentAmount string `pb:"7" json:"temporary_requested_current_amount"`
	RequestedTemporaryValidEndDate  string `pb:"8" json:"requested_temporary_valid_end_date"`
	TemporaryCreditDocumentation    string `pb:"9" json:"temporary_credit_documentation"`
}

type CreateCreditLimitOrderResponse struct {
	CreditLimitOrderID string `pb:"1" json:"credit_limit_order_id"`
}

type CreateUserCustomerLinkRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	UserID     string `pb:"2" json:"user_id"`
	CustomerID string `pb:"3" json:"customer_id"`
}

type CreateUserCustomerLinkResponse struct {
	UserCustomerLinkID string    `pb:"1" json:"user_customer_link_id"`
	CustomerID         string    `pb:"2" json:"customer_id"`
	UserID             string    `pb:"3" json:"user_id"`
	DateInserted       time.Time `pb:"4" json:"date_inserted"`
	IsActive           bool      `pb:"5" json:"is_active"`
}

type DeleteCustomerAddressRequest struct {
	BankID            string `pb:"1" json:"bank_id"`
	CustomerID        string `pb:"2" json:"customer_id"`
	CustomerAddressID string `pb:"3" json:"customer_address_id"`
}

type DeleteTaxResidenceRequest struct {
	BankID         string `pb:"1" json:"bank_id"`
	CustomerID     string `pb:"2" json:"customer_id"`
	TaxResidenceID string `pb:"3" json:"tax_residence_id"`
}

type CRMEvent struct {
	ID             string    `pb:"1" json:"id"`
	BankID         string    `pb:"2" json:"bank_id"`
	CustomerName   string    `pb:"3" json:"customer_name"`
	CustomerNumber string    `pb:"4" json:"customer_number"`
	Category       string    `pb:"5" json:"category"`
	Detail         string    `pb:"6" json:"detail"`
	Channel        string    `pb:"7" json:"channel"`
	ScheduledDate  time.Time `pb:"8" json:"scheduled_date"`
	ActualDate     time.Time `pb:"9" json:"actual_date"`
	Result         string    `pb:"10" json:"result"`
}

type GetCRMEventsRequest struct {
	BankID string `pb:"1" json:"bank_id"`
}

type GetCRMEventsResponse struct {
	CRMEvents []CRMEvent `pb:"1" json:"crm_events"`
	HasMore   bool       `pb:"2" json:"has_more"`
}

type CreditLimitOrder struct {
	RankAmount1      string `pb:"1" json:"rank_amount_1"`
	NominalInterest1 string `pb:"2" json:"nominal_interest_1"`
	RankAmount2      string `pb:"3" json:"rank_amount_2"`
	NominalInterest2 string `pb:"4" json:"nominal_interest_2"`
}

type GetCreditLimitOrderByIDRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
	RequestID  string `pb:"3" json:"request_id"`
}

type GetCreditLimitOrderByIDResponse struct {
	CreditLimitOrder CreditLimitOrder `pb:"1" json:"credit_limit_order"`
}

type GetCreditLimitOrderRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
}

type GetCreditLimitOrderResponse struct {
	Result []CreditLimitOrder `pb:"1" json:"result"`
}

type Address struct {
	CustomerAddressID string    `pb:"1" json:"customer_address_id"`
	CustomerID        string    `pb:"2" json:"customer_id"`
	Line1             string    `pb:"3" json:"line_1"`
	Line2             string    `pb:"4" json:"line_2"`
	Line3             string    `pb:"5" json:"line_3"`
	City              string    `pb:"6" json:"city"`
	County            string    `pb:"7" json:"county"`
	State             string    `pb:"8" json:"state"`
	Postcode          string    `pb:"9" json:"postcode"`
	CountryCode       string    `pb:"10" json:"country_code"`
	Tags              []string  `pb:"11" json:"tags"`
	Status            string    `pb:"12" json:"status"`
	InsertDate        time.Time `pb:"13" json:"insert_date"`
}

type GetCustomerAddressesRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
}

type GetCustomerAddressesResponse struct {
	Addresses []Address `pb:"1" json:"addresses"`
}

type Check struct {
	CustomerNumber string    `pb:"1" json:"customer_number"`
	Type           string    `pb:"2" json:"type"`
	Handle         string    `pb:"3" json:"handle"`
	DateAdded      time.Time `pb:"4" json:"date_added"`
	DateActivated  time.Time `pb:"5" json:"date_activated"`
}
type GetCustomerSocialMediaHandlesRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
}

type GetCustomerSocialMediaHandlesResponse struct {
	Checks []Check `pb:"1" json:"checks"`
}

type GetCustomerByCustomerIDRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
}

type GetCustomerByCustomerNumberRequest struct {
	BankID         string `pb:"1" json:"bank_id"`
	CustomerID     string `pb:"2" json:"customer_id"`
	CustomerNumber string `pb:"3" json:"customer_number"`
}

type GetCustomersForCurrentUserRequest struct {
}

type GetCustomersForCurrentUserResponse struct {
	Customers []Customer `pb:"1" json:"customers"`
}

type GetCustomersForCurrentUserAtBankRequest struct {
	BankID string `pb:"1" json:"bank_id"`
}

type GetCustomersForCurrentUserAtBankResponse struct {
	Customers []Customer `pb:"1" json:"customers"`
}

type GetFirehoseCustomerRequest struct {
	BankID        string              `pb:"1" json:"bank_id"`
	SortDirection types.SortDirection `pb:"2" json:"sort_direction"`
	Limit         int                 `pb:"3" json:"limit"`
	Offset        int                 `pb:"4" json:"offset"`
	FromDate      time.Time           `pb:"5" json:"from_date"`
	ToDate        time.Time           `pb:"6" json:"to_date"`
}

type GetFirehoseCustomerResponse struct {
	Customers []Customer `pb:"1" json:"customers"`
}

type TaxResidence struct {
	Domain         string `pb:"1" json:"domain"`
	TaxNumber      string `pb:"2" json:"tax_number"`
	TaxResidenceID string `pb:"3" json:"tax_residence_id"`
}

type GetTaxResidenceOfCustomerRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
}

type GetTaxResidenceOfCustomerResponse struct {
	Result []TaxResidence `pb:"1" json:"result"`
}

type UpdateCustomerAddressRequest struct {
	BankID            string   `pb:"1" json:"bank_id"`
	CustomerID        string   `pb:"2" json:"customer_id"`
	CustomerAddressID string   `pb:"3" json:"customer_address_id"`
	Line1             string   `pb:"4" json:"line_1"`
	Line2             string   `pb:"5" json:"line_2"`
	Line3             string   `pb:"6" json:"line_3"`
	City              string   `pb:"7" json:"city"`
	County            string   `pb:"8" json:"county"`
	State             string   `pb:"9" json:"state"`
	Postcode          string   `pb:"10" json:"postcode"`
	CountryCode       string   `pb:"11" json:"country_code"`
	Tags              []string `pb:"12" json:"tags"`
	Status            string   `pb:"13" json:"status"`
}

type UpdateCustomerAddressResponse struct {
	CustomerAddressID string    `pb:"1" json:"customer_address_id"`
	CustomerID        string    `pb:"2" json:"customer_id"`
	Line1             string    `pb:"3" json:"line_1"`
	Line2             string    `pb:"4" json:"line_2"`
	Line3             string    `pb:"5" json:"line_3"`
	City              string    `pb:"6" json:"city"`
	County            string    `pb:"7" json:"county"`
	State             string    `pb:"8" json:"state"`
	Postcode          string    `pb:"9" json:"postcode"`
	CountryCode       string    `pb:"10" json:"country_code"`
	Tags              []string  `pb:"11" json:"tags"`
	Status            string    `pb:"12" json:"status"`
	InsertDate        time.Time `pb:"13" json:"insert_date"`
}

type UpdateCustomerBranchRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
	BranchID   string `pb:"3" json:"branch_id"`
}

type UpdateCustomerBranchResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerCreditLimitRequest struct {
	BankID      string       `pb:"1" json:"bank_id"`
	CustomerID  string       `pb:"2" json:"customer_id"`
	CreditLimit types.Amount `pb:"3" json:"credit_limit"`
}

type UpdateCustomerCreditLimitResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerCreditRatingAndSourceRequest struct {
	BankID       string       `pb:"1" json:"bank_id"`
	CustomerID   string       `pb:"2" json:"customer_id"`
	CreditRating CreditRating `pb:"3" json:"credit_rating"`
}

type UpdateCustomerCreditRatingAndSourceResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerEmailRequest struct {
	BankID     string `pb:"1" json:"bank_id"`
	CustomerID string `pb:"2" json:"customer_id"`
	Email      string `pb:"3" json:"email"`
}

type UpdateCustomerEmailResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerIdentityRequest struct {
	BankID      string `pb:"1" json:"bank_id"`
	CustomerID  string `pb:"2" json:"customer_id"`
	LegalName   string `pb:"3" json:"legal_name"`
	DateOfBirth string `pb:"4" json:"date_of_birth"`
	Title       string `pb:"5" json:"title"`
}

type UpdateCustomerIdentityResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerMobileNumberRequest struct {
	BankID            string `pb:"1" json:"bank_id"`
	CustomerID        string `pb:"2" json:"customer_id"`
	MobilePhoneNumber string `pb:"3" json:"mobile_phone_number"`
}

type UpdateCustomerMobileNumberResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerNumberRequest struct {
	BankID         string `pb:"1" json:"bank_id"`
	CustomerID     string `pb:"2" json:"customer_id"`
	CustomerNumber string `pb:"3" json:"customer_number"`
}

type UpdateCustomerNumberResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type UpdateCustomerOtherDataRequest struct {
	BankID                   string    `pb:"1" json:"bank_id"`
	CustomerID               string    `pb:"2" json:"customer_id"`
	FaceImage                FaceImage `pb:"3" json:"face_image"`
	RelationshipStatus       string    `pb:"4" json:"relationship_status"`
	Dependants               int       `pb:"5" json:"dependants"`
	HighestEducationAttained string    `pb:"6" json:"highest_education_attained"`
	EmploymentStatus         string    `pb:"7" json:"employment_status"`
}

type UpdateCustomerOtherDataResponse struct {
	Customer Customer `pb:"1" json:"customer"`
}

type CustomerService interface {
	// AddAddressToCustomer Add an Address to the Customer specified by CUSTOMER_ID.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/customers/{CustomerID}/address",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Add address to the customer.",
	//         Summary:     "Add address to the customer.",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Account application created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerAddAddressToCustomerResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	AddAddressToCustomer(AddAddressToCustomerRequest) AddAddressToCustomerResponse

	// AddSocialMediaHandle Add a social media handle for the customer specified by CUSTOMER_ID.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/customers/{CustomerID}/social_media_handles",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Add social media handle for the customer",
	//         Summary:     "Add social media handle",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Social media added successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerAddSocialMediaHandleResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	AddSocialMediaHandle(AddSocialMediaHandleRequest) AddSocialMediaHandleResponse

	// CreateCustomer creates a new customer
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/customers",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Creates a new customer",
	//         Summary:     "Create a customer",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Account application created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerCreateCustomerResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	CreateCustomer(CreateCustomerRequest) CreateCustomerResponse

	// CreateCreditLimitOrder creates a new customer
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/credit_limit/requests",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Create Credit limit order for the customer on specific bank",
	//         Summary:     "Create credit limit order",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Account application created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerCreateCreditLimitOrderResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	CreateCreditLimitOrder(CreateCreditLimitOrderRequest) CreateCreditLimitOrderResponse

	// CreateUserCustomerLink creates a new user customer link.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/user_customer_links",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Creare user customer link",
	//         Summary:     "Create user customer link",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Account application created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerCreateUserCustomerLinkResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	CreateUserCustomerLink(CreateUserCustomerLinkRequest) CreateUserCustomerLinkResponse

	// DeleteCustomerAddress delete the customer address.
	//
	// +gunk http.Match{
	//         Method: "DELETE",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/addresses/{CustomerAddressID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Permanently delete customer address.",
	//         Summary:     "Delete customer address",
	//         Responses: map[string]openapiv2.Response{
	//                 "204": openapiv2.Response{
	//                         Description: "Customer address successfully deleted.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	DeleteCustomerAddress(DeleteCustomerAddressRequest)

	// DeleteTaxResidence delete the tax residence.
	//
	// +gunk http.Match{
	//         Method: "DELETE",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/tax_residencies/{TaxResidenceID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Permanently delete tax residence.",
	//         Summary:     "Delete tax residence",
	//         Responses: map[string]openapiv2.Response{
	//                 "204": openapiv2.Response{
	//                         Description: "Tax residence successfully deleted.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	DeleteTaxResidence(DeleteTaxResidenceRequest)

	// GetCRMEvents returns a list containing up to 20 crm events.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/crm-events",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns a list containing up to 20 crm events.",
	//         Summary:     "List all CRM events",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCRMEventsResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCRMEvents(GetCRMEventsRequest) GetCRMEventsResponse

	// GetCreditLimitOrderByID
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/credit_limit/request/{RequestID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns Credit limit order by id",
	//         Summary:     "Get credit limit order by id",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCreditLimitOrderByIDResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCreditLimitOrderByID(GetCreditLimitOrderByIDRequest) GetCreditLimitOrderByIDResponse

	// GetCreditLimitOrder
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/credit_limit/requests",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns a list containing up to 20 CreditLimitOrder.",
	//         Summary:     "List all credit limit order",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCreditLimitOrderResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCreditLimitOrder(GetCreditLimitOrderRequest) GetCreditLimitOrderResponse

	// GetCustomerAddresses
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/addresses",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns a list containing up to 20 customer addresses.",
	//         Summary:     "List all customer adddresses",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCustomerAddressesResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomerAddresses(GetCustomerAddressesRequest) GetCustomerAddressesResponse

	// GetCustomerSocialMediaHandles
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/social_media_handles",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns a list containing up to 20 customer social media handles",
	//         Summary:     "List all customer social media handles",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCustomerSocialMediaHandlesResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomerSocialMediaHandles(GetCustomerSocialMediaHandlesRequest) GetCustomerSocialMediaHandlesResponse

	// GetCustomerByCustomerID
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the customer data based on it's id",
	//         Summary:     "Get Customer By ID",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerCustomer",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomerByCustomerID(GetCustomerByCustomerIDRequest) Customer

	// GetCustomerByCustomerNumber
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/customer-number/{CustomerNumber}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the customer data based on the customer number",
	//         Summary:     "Get Customer By CustomerNumber",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerCustomer",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomerByCustomerNumber(GetCustomerByCustomerNumberRequest) Customer

	// GetCustomerForCurrentUser
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/users/current/customers",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the current user customers data",
	//         Summary:     "Get customers data for current user",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCustomersForCurrentUserResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomersForCurrentUser(GetCustomersForCurrentUserRequest) GetCustomersForCurrentUserResponse

	// GetCustomerForCurrentUserAtBank
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the current user customers data by bank ID",
	//         Summary:     "Get customers data by bank id",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetCustomersForCurrentUserAtBankResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetCustomersForCurrentUserAtBank(GetCustomersForCurrentUserAtBankRequest) GetCustomersForCurrentUserAtBankResponse

	// GetFirehoseCustomer
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/firehose/customers",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the list of customer firehose",
	//         Summary:     "Return customer firehose",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetFirehoseCustomerResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetFirehoseCustomer(GetFirehoseCustomerRequest) GetFirehoseCustomerResponse

	// GetTaxResidenceOfCustomer
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/tax-residences",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Returns the user tax_residencies",
	//         Summary:     "Get customers tax_residencies",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerGetTaxResidenceOfCustomerResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetTaxResidenceOfCustomer(GetTaxResidenceOfCustomerRequest) GetTaxResidenceOfCustomerResponse

	// UpdateCustomerAddress
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/addresses/{CustomerAddressID}",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer addresses information.",
	//         Summary:     "Update customer addresses.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerAddressResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerAddress(UpdateCustomerAddressRequest) UpdateCustomerAddressResponse

	// UpdateCustomerBranch.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/branch",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer branch information.",
	//         Summary:     "Update customer branch.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerBranchResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerBranch(UpdateCustomerBranchRequest) UpdateCustomerBranchResponse

	// UpdateCustomerCreditLimit.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/credit-limit",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer credit limit information.",
	//         Summary:     "Update customer credit limit.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerCreditLimitResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerCreditLimit(UpdateCustomerCreditLimitRequest) UpdateCustomerCreditLimitResponse

	// UpdateCustomerCreditRatingAndSource.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/credit-rating-and-source",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer credit rating and source information.",
	//         Summary:     "Update customer credut rating and source.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerCreditRatingAndSourceResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerCreditRatingAndSource(UpdateCustomerCreditRatingAndSourceRequest) UpdateCustomerCreditRatingAndSourceResponse

	// UpdateCustomerEmail.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/email",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer email information.",
	//         Summary:     "Update customer email.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerEmailResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerEmail(UpdateCustomerEmailRequest) UpdateCustomerEmailResponse

	// UpdateCustomerIdentity.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/identity",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer identity information.",
	//         Summary:     "Update customer identity.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerIdentityResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerIdentity(UpdateCustomerIdentityRequest) UpdateCustomerIdentityResponse

	// UpdateCustomerMobileNumber.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/mobile-number",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer mobile number information.",
	//         Summary:     "Update customer mobile number.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerMobileNumberResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerMobileNumber(UpdateCustomerMobileNumberRequest) UpdateCustomerMobileNumberResponse

	// UpdateCustomerNumber.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/number",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer number information.",
	//         Summary:     "Update customer number.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerNumberResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerNumber(UpdateCustomerNumberRequest) UpdateCustomerNumberResponse

	// UpdateCustomerOtherData.
	//
	// +gunk http.Match{
	//         Method: "PUT",
	//         Path:   "/v1/banks/{BankID}/customers/{CustomerID}/data",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Customer"},
	//         Description: "Update customer data information.",
	//         Summary:     "Update customer data.",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/customerUpdateCustomerOtherDataResponse",
	//                                 },
	//                         },
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/customer.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	UpdateCustomerOtherData(UpdateCustomerOtherDataRequest) UpdateCustomerOtherDataResponse
}
