{
  "swagger": "2.0",
  "info": {
    "title": "Customer API",
    "description": "Provides create and read operations on the customer resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/banks/{bankID}/crm-events": {
      "get": {
        "summary": "List all CRM events",
        "description": "Returns a list containing up to 20 crm events.",
        "operationId": "GetCRMEvents",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCRMEventsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers": {
      "get": {
        "summary": "Get customers data by bank id",
        "description": "Returns the current user customers data by bank ID",
        "operationId": "GetCustomersForCurrentUserAtBank",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCustomersForCurrentUserAtBankResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}": {
      "get": {
        "summary": "Get Customer By ID",
        "description": "Returns the customer data based on it's id",
        "operationId": "GetCustomerByCustomerID",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerCustomer"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/addresses": {
      "get": {
        "summary": "List all customer adddresses",
        "description": "Returns a list containing up to 20 customer addresses.",
        "operationId": "GetCustomerAddresses",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCustomerAddressesResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/addresses/{customerAddressID}": {
      "delete": {
        "summary": "Delete customer address",
        "description": "Permanently delete customer address.",
        "operationId": "DeleteCustomerAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "Customer address successfully deleted.",
            "schema": {}
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerAddressID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update customer addresses.",
        "description": "Update customer addresses information.",
        "operationId": "UpdateCustomerAddress",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerAddressResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerAddressID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerAddressRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/branch": {
      "put": {
        "summary": "Update customer branch.",
        "description": "Update customer branch information.",
        "operationId": "UpdateCustomerBranch",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerBranchResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerBranchRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/credit-limit": {
      "put": {
        "summary": "Update customer credit limit.",
        "description": "Update customer credit limit information.",
        "operationId": "UpdateCustomerCreditLimit",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerCreditLimitResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerCreditLimitRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/credit-rating-and-source": {
      "put": {
        "summary": "Update customer credut rating and source.",
        "description": "Update customer credit rating and source information.",
        "operationId": "UpdateCustomerCreditRatingAndSource",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerCreditRatingAndSourceResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerCreditRatingAndSourceRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/credit_limit/request/{requestID}": {
      "get": {
        "summary": "Get credit limit order by id",
        "description": "Returns Credit limit order by id",
        "operationId": "GetCreditLimitOrderByID",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCreditLimitOrderByIDResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/credit_limit/requests": {
      "get": {
        "summary": "List all credit limit order",
        "description": "Returns a list containing up to 20 CreditLimitOrder.",
        "operationId": "GetCreditLimitOrder",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCreditLimitOrderResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create credit limit order",
        "description": "Create Credit limit order for the customer on specific bank",
        "operationId": "CreateCreditLimitOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCreateCreditLimitOrderResponse"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/customerCreateCreditLimitOrderResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateCreditLimitOrderRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/customer-number/{customerNumber}": {
      "get": {
        "summary": "Get Customer By CustomerNumber",
        "description": "Returns the customer data based on the customer number",
        "operationId": "GetCustomerByCustomerNumber",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerCustomer"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerNumber",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/data": {
      "put": {
        "summary": "Update customer data.",
        "description": "Update customer data information.",
        "operationId": "UpdateCustomerOtherData",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerOtherDataResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerOtherDataRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/email": {
      "put": {
        "summary": "Update customer email.",
        "description": "Update customer email information.",
        "operationId": "UpdateCustomerEmail",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerEmailResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerEmailRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/identity": {
      "put": {
        "summary": "Update customer identity.",
        "description": "Update customer identity information.",
        "operationId": "UpdateCustomerIdentity",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerIdentityResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerIdentityRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/mobile-number": {
      "put": {
        "summary": "Update customer mobile number.",
        "description": "Update customer mobile number information.",
        "operationId": "UpdateCustomerMobileNumber",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerMobileNumberResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerMobileNumberRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/number": {
      "put": {
        "summary": "Update customer number.",
        "description": "Update customer number information.",
        "operationId": "UpdateCustomerNumber",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerNumberResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerUpdateCustomerNumberRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/social_media_handles": {
      "get": {
        "summary": "List all customer social media handles",
        "description": "Returns a list containing up to 20 customer social media handles",
        "operationId": "GetCustomerSocialMediaHandles",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCustomerSocialMediaHandlesResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/tax-residences": {
      "get": {
        "summary": "Get customers tax_residencies",
        "description": "Returns the user tax_residencies",
        "operationId": "GetTaxResidenceOfCustomer",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetTaxResidenceOfCustomerResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/customers/{customerID}/tax_residencies/{taxResidenceID}": {
      "delete": {
        "summary": "Delete tax residence",
        "description": "Permanently delete tax residence.",
        "operationId": "DeleteTaxResidence",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "Tax residence successfully deleted.",
            "schema": {}
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taxResidenceID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/firehose/customers": {
      "get": {
        "summary": "Return customer firehose",
        "description": "Returns the list of customer firehose",
        "operationId": "GetFirehoseCustomer",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetFirehoseCustomerResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_direction",
            "description": " - ASC: SortDirection_ASC indicates ascending sort.\n - DESC: SortDirection_DESC indicates descending sort.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UnknownSortDirection",
              "ASC",
              "DESC"
            ],
            "default": "UnknownSortDirection"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/user_customer_links": {
      "post": {
        "summary": "Create user customer link",
        "description": "Creare user customer link",
        "operationId": "CreateUserCustomerLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCreateUserCustomerLinkResponse"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/customerCreateUserCustomerLinkResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateUserCustomerLinkRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/customers": {
      "post": {
        "summary": "Create a customer",
        "description": "Creates a new customer",
        "operationId": "CreateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerCreateCustomerResponse"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/customerCreateCustomerResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerCreateCustomerRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/customers/{customerID}/address": {
      "post": {
        "summary": "Add address to the customer.",
        "description": "Add address to the customer.",
        "operationId": "AddAddressToCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerAddAddressToCustomerResponse"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/customerAddAddressToCustomerResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddAddressToCustomerRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/customers/{customerID}/social_media_handles": {
      "post": {
        "summary": "Add social media handle",
        "description": "Add social media handle for the customer",
        "operationId": "AddSocialMediaHandle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/customerAddSocialMediaHandleResponse"
            }
          },
          "201": {
            "description": "Social media added successfully.",
            "schema": {
              "$ref": "#/definitions/customerAddSocialMediaHandleResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "customerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/customerAddSocialMediaHandleRequest"
            }
          }
        ],
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.write"
            ]
          }
        ]
      }
    },
    "/v1/users/current/customers": {
      "get": {
        "summary": "Get customers data for current user",
        "description": "Returns the current user customers data",
        "operationId": "GetCustomersForCurrentUser",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/customerGetCustomersForCurrentUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "tags": [
          "Customer"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/customer.read"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "customerAddAddressToCustomerRequest": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "line_1": {
          "type": "string"
        },
        "line_2": {
          "type": "string"
        },
        "line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "customerAddAddressToCustomerResponse": {
      "type": "object",
      "properties": {
        "customer_address_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "line_1": {
          "type": "string"
        },
        "line_2": {
          "type": "string"
        },
        "line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "insert_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerAddSocialMediaHandleRequest": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "customer_number": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "handle": {
          "type": "string"
        },
        "date_added": {
          "type": "string",
          "format": "date-time"
        },
        "date_activated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerAddSocialMediaHandleResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string"
        }
      }
    },
    "customerAddress": {
      "type": "object",
      "properties": {
        "customer_address_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "line_1": {
          "type": "string"
        },
        "line_2": {
          "type": "string"
        },
        "line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "insert_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerCRMEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bank_id": {
          "type": "string"
        },
        "customer_name": {
          "type": "string"
        },
        "customer_number": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "scheduled_date": {
          "type": "string",
          "format": "date-time"
        },
        "actual_date": {
          "type": "string",
          "format": "date-time"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "customerCheck": {
      "type": "object",
      "properties": {
        "customer_number": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "handle": {
          "type": "string"
        },
        "date_added": {
          "type": "string",
          "format": "date-time"
        },
        "date_activated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerCreateCreditLimitOrderRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "requested_current_rate_amount1": {
          "type": "string"
        },
        "requested_current_rate_amount2": {
          "type": "string"
        },
        "requested_current_valid_end_date": {
          "type": "string"
        },
        "current_credit_documentation": {
          "type": "string"
        },
        "temporary_requested_current_amount": {
          "type": "string"
        },
        "requested_temporary_valid_end_date": {
          "type": "string"
        },
        "temporary_credit_documentation": {
          "type": "string"
        }
      }
    },
    "customerCreateCreditLimitOrderResponse": {
      "type": "object",
      "properties": {
        "credit_limit_order_id": {
          "type": "string"
        }
      }
    },
    "customerCreateCustomerRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "legal_name": {
          "type": "string"
        },
        "mobile_phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "face_image": {
          "$ref": "#/definitions/customerFaceImage"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date-time"
        },
        "relationship_status": {
          "type": "string"
        },
        "dob_of_dependents": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "credit_rating": {
          "$ref": "#/definitions/customerCreditRating"
        },
        "credit_limit": {
          "$ref": "#/definitions/typesAmount"
        },
        "highest_education_attained": {
          "type": "string"
        },
        "employment_status": {
          "type": "string"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "branchId": {
          "type": "string"
        }
      }
    },
    "customerCreateCustomerResponse": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "bank_id": {
          "type": "string"
        }
      }
    },
    "customerCreateUserCustomerLinkRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        }
      }
    },
    "customerCreateUserCustomerLinkResponse": {
      "type": "object",
      "properties": {
        "user_customer_link_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "date_inserted": {
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "customerCreditLimitOrder": {
      "type": "object",
      "properties": {
        "rank_amount_1": {
          "type": "string"
        },
        "nominal_interest_1": {
          "type": "string"
        },
        "rank_amount_2": {
          "type": "string"
        },
        "nominal_interest_2": {
          "type": "string"
        }
      }
    },
    "customerCreditRating": {
      "type": "object",
      "properties": {
        "rating": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "customerCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bank_id": {
          "type": "string"
        },
        "customer_number": {
          "type": "string"
        },
        "legal_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "face_image": {
          "$ref": "#/definitions/customerFaceImage"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date-time"
        },
        "relationship_status": {
          "type": "string"
        },
        "credit_rating": {
          "$ref": "#/definitions/customerCreditRating"
        },
        "credit_limit": {
          "$ref": "#/definitions/typesAmount"
        },
        "highest_educational_attained": {
          "type": "string"
        },
        "employment_status": {
          "type": "string"
        },
        "kyc_status": {
          "type": "boolean",
          "format": "boolean"
        },
        "last_ok_data": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        }
      }
    },
    "customerFaceImage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerGetCRMEventsResponse": {
      "type": "object",
      "properties": {
        "crm_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCRMEvent"
          }
        },
        "has_more": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "customerGetCreditLimitOrderByIDResponse": {
      "type": "object",
      "properties": {
        "credit_limit_order": {
          "$ref": "#/definitions/customerCreditLimitOrder"
        }
      }
    },
    "customerGetCreditLimitOrderResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCreditLimitOrder"
          }
        }
      }
    },
    "customerGetCustomerAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerAddress"
          }
        }
      }
    },
    "customerGetCustomerSocialMediaHandlesResponse": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCheck"
          }
        }
      }
    },
    "customerGetCustomersForCurrentUserAtBankResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomer"
          }
        }
      }
    },
    "customerGetCustomersForCurrentUserResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomer"
          }
        }
      }
    },
    "customerGetFirehoseCustomerResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerCustomer"
          }
        }
      }
    },
    "customerGetTaxResidenceOfCustomerResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerTaxResidence"
          }
        }
      }
    },
    "customerTaxResidence": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_residence_id": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerAddressRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "customer_address_id": {
          "type": "string"
        },
        "line_1": {
          "type": "string"
        },
        "line_2": {
          "type": "string"
        },
        "line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerAddressResponse": {
      "type": "object",
      "properties": {
        "customer_address_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "line_1": {
          "type": "string"
        },
        "line_2": {
          "type": "string"
        },
        "line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "insert_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customerUpdateCustomerBranchRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "branch_id": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerBranchResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerCreditLimitRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "credit_limit": {
          "$ref": "#/definitions/typesAmount"
        }
      }
    },
    "customerUpdateCustomerCreditLimitResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerCreditRatingAndSourceRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "credit_rating": {
          "$ref": "#/definitions/customerCreditRating"
        }
      }
    },
    "customerUpdateCustomerCreditRatingAndSourceResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerEmailRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerEmailResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerIdentityRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "legal_name": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerIdentityResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerMobileNumberRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "mobile_phone_number": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerMobileNumberResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerNumberRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "customer_number": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerNumberResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "customerUpdateCustomerOtherDataRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "face_image": {
          "$ref": "#/definitions/customerFaceImage"
        },
        "relationship_status": {
          "type": "string"
        },
        "dependants": {
          "type": "integer",
          "format": "int32"
        },
        "highest_education_attained": {
          "type": "string"
        },
        "employment_status": {
          "type": "string"
        }
      }
    },
    "customerUpdateCustomerOtherDataResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/customerCustomer"
        }
      }
    },
    "typesAmount": {
      "type": "object",
      "properties": {
        "cur": {
          "type": "string",
          "description": "Cur is the currency of the amount."
        },
        "num": {
          "type": "string",
          "description": "Num is the value of the amount."
        }
      },
      "description": "Amount defines a transaction amount."
    },
    "typesSortDirection": {
      "type": "string",
      "enum": [
        "UnknownSortDirection",
        "ASC",
        "DESC"
      ],
      "default": "UnknownSortDirection",
      "description": " - ASC: SortDirection_ASC indicates ascending sort.\n - DESC: SortDirection_DESC indicates descending sort."
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to customer resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "https://auth.bnk.to/customer.read": "View customer data",
        "https://auth.bnk.to/customer.write": "Manage customer data"
      }
    }
  }
}
