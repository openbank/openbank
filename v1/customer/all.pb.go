// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/customer/all.proto

package customer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FaceImage struct {
	URL                  string               `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Date,json=date,proto3" json:"Date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FaceImage) Reset()         { *m = FaceImage{} }
func (m *FaceImage) String() string { return proto.CompactTextString(m) }
func (*FaceImage) ProtoMessage()    {}
func (*FaceImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{0}
}

func (m *FaceImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaceImage.Unmarshal(m, b)
}
func (m *FaceImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaceImage.Marshal(b, m, deterministic)
}
func (m *FaceImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaceImage.Merge(m, src)
}
func (m *FaceImage) XXX_Size() int {
	return xxx_messageInfo_FaceImage.Size(m)
}
func (m *FaceImage) XXX_DiscardUnknown() {
	xxx_messageInfo_FaceImage.DiscardUnknown(m)
}

var xxx_messageInfo_FaceImage proto.InternalMessageInfo

func (m *FaceImage) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *FaceImage) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type CreditRating struct {
	Rating               string   `protobuf:"bytes,1,opt,name=Rating,json=rating,proto3" json:"Rating,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=Source,json=source,proto3" json:"Source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditRating) Reset()         { *m = CreditRating{} }
func (m *CreditRating) String() string { return proto.CompactTextString(m) }
func (*CreditRating) ProtoMessage()    {}
func (*CreditRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{1}
}

func (m *CreditRating) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditRating.Unmarshal(m, b)
}
func (m *CreditRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditRating.Marshal(b, m, deterministic)
}
func (m *CreditRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditRating.Merge(m, src)
}
func (m *CreditRating) XXX_Size() int {
	return xxx_messageInfo_CreditRating.Size(m)
}
func (m *CreditRating) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditRating.DiscardUnknown(m)
}

var xxx_messageInfo_CreditRating proto.InternalMessageInfo

func (m *CreditRating) GetRating() string {
	if m != nil {
		return m.Rating
	}
	return ""
}

func (m *CreditRating) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Customer struct {
	ID                       string               `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	BankID                   string               `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CustomerNumber           string               `protobuf:"bytes,3,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	LegalName                string               `protobuf:"bytes,4,opt,name=LegalName,json=legal_name,proto3" json:"LegalName,omitempty"`
	PhoneNumber              string               `protobuf:"bytes,5,opt,name=PhoneNumber,json=phone_number,proto3" json:"PhoneNumber,omitempty"`
	Email                    string               `protobuf:"bytes,6,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	FaceImage                *FaceImage           `protobuf:"bytes,7,opt,name=FaceImage,json=face_image,proto3" json:"FaceImage,omitempty"`
	DateOfBirth              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=DateOfBirth,json=date_of_birth,proto3" json:"DateOfBirth,omitempty"`
	RelationshipStatus       string               `protobuf:"bytes,9,opt,name=RelationshipStatus,json=relationship_status,proto3" json:"RelationshipStatus,omitempty"`
	CreditRating             *CreditRating        `protobuf:"bytes,10,opt,name=CreditRating,json=credit_rating,proto3" json:"CreditRating,omitempty"`
	CreditLimit              *types.Amount        `protobuf:"bytes,11,opt,name=CreditLimit,json=credit_limit,proto3" json:"CreditLimit,omitempty"`
	HighestEducationAttained string               `protobuf:"bytes,12,opt,name=HighestEducationAttained,json=highest_educational_attained,proto3" json:"HighestEducationAttained,omitempty"`
	EmploymentStatus         string               `protobuf:"bytes,13,opt,name=EmploymentStatus,json=employment_status,proto3" json:"EmploymentStatus,omitempty"`
	KYCStatus                bool                 `protobuf:"varint,14,opt,name=KYCStatus,json=kyc_status,proto3" json:"KYCStatus,omitempty"`
	LastOKDate               *timestamp.Timestamp `protobuf:"bytes,15,opt,name=LastOKDate,json=last_ok_data,proto3" json:"LastOKDate,omitempty"`
	Title                    string               `protobuf:"bytes,16,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	BranchID                 string               `protobuf:"bytes,17,opt,name=BranchID,json=branch_id,proto3" json:"BranchID,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}             `json:"-"`
	XXX_unrecognized         []byte               `json:"-"`
	XXX_sizecache            int32                `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{2}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Customer) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *Customer) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *Customer) GetLegalName() string {
	if m != nil {
		return m.LegalName
	}
	return ""
}

func (m *Customer) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetFaceImage() *FaceImage {
	if m != nil {
		return m.FaceImage
	}
	return nil
}

func (m *Customer) GetDateOfBirth() *timestamp.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *Customer) GetRelationshipStatus() string {
	if m != nil {
		return m.RelationshipStatus
	}
	return ""
}

func (m *Customer) GetCreditRating() *CreditRating {
	if m != nil {
		return m.CreditRating
	}
	return nil
}

func (m *Customer) GetCreditLimit() *types.Amount {
	if m != nil {
		return m.CreditLimit
	}
	return nil
}

func (m *Customer) GetHighestEducationAttained() string {
	if m != nil {
		return m.HighestEducationAttained
	}
	return ""
}

func (m *Customer) GetEmploymentStatus() string {
	if m != nil {
		return m.EmploymentStatus
	}
	return ""
}

func (m *Customer) GetKYCStatus() bool {
	if m != nil {
		return m.KYCStatus
	}
	return false
}

func (m *Customer) GetLastOKDate() *timestamp.Timestamp {
	if m != nil {
		return m.LastOKDate
	}
	return nil
}

func (m *Customer) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Customer) GetBranchID() string {
	if m != nil {
		return m.BranchID
	}
	return ""
}

type CreateCustomerRequest struct {
	BankID                   string                 `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	LegalName                string                 `protobuf:"bytes,2,opt,name=LegalName,json=legal_name,proto3" json:"LegalName,omitempty"`
	MobilePhoneNumber        string                 `protobuf:"bytes,3,opt,name=MobilePhoneNumber,json=mobile_phone_number,proto3" json:"MobilePhoneNumber,omitempty"`
	Email                    string                 `protobuf:"bytes,4,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	FaceImage                *FaceImage             `protobuf:"bytes,5,opt,name=FaceImage,json=face_image,proto3" json:"FaceImage,omitempty"`
	DateOfBirth              *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=DateOfBirth,json=date_of_birth,proto3" json:"DateOfBirth,omitempty"`
	RelationshipStatus       string                 `protobuf:"bytes,7,opt,name=RelationshipStatus,json=relationship_status,proto3" json:"RelationshipStatus,omitempty"`
	DobOfDependents          []*timestamp.Timestamp `protobuf:"bytes,8,rep,name=DobOfDependents,json=dob_of_dependents,proto3" json:"DobOfDependents,omitempty"`
	CreditRating             *CreditRating          `protobuf:"bytes,9,opt,name=CreditRating,json=credit_rating,proto3" json:"CreditRating,omitempty"`
	CreditLimit              *types.Amount          `protobuf:"bytes,10,opt,name=CreditLimit,json=credit_limit,proto3" json:"CreditLimit,omitempty"`
	HighestEducationAttained string                 `protobuf:"bytes,11,opt,name=HighestEducationAttained,json=highest_education_attained,proto3" json:"HighestEducationAttained,omitempty"`
	EmploymentStatus         string                 `protobuf:"bytes,12,opt,name=EmploymentStatus,json=employment_status,proto3" json:"EmploymentStatus,omitempty"`
	LastOKDate               *timestamp.Timestamp   `protobuf:"bytes,13,opt,name=LastOKDate,json=last_ok_date,proto3" json:"LastOKDate,omitempty"`
	Title                    string                 `protobuf:"bytes,14,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	BranchID                 string                 `protobuf:"bytes,15,opt,name=BranchID,json=branchId,proto3" json:"BranchID,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}               `json:"-"`
	XXX_unrecognized         []byte                 `json:"-"`
	XXX_sizecache            int32                  `json:"-"`
}

func (m *CreateCustomerRequest) Reset()         { *m = CreateCustomerRequest{} }
func (m *CreateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCustomerRequest) ProtoMessage()    {}
func (*CreateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{3}
}

func (m *CreateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCustomerRequest.Unmarshal(m, b)
}
func (m *CreateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *CreateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCustomerRequest.Merge(m, src)
}
func (m *CreateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCustomerRequest.Size(m)
}
func (m *CreateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCustomerRequest proto.InternalMessageInfo

func (m *CreateCustomerRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateCustomerRequest) GetLegalName() string {
	if m != nil {
		return m.LegalName
	}
	return ""
}

func (m *CreateCustomerRequest) GetMobilePhoneNumber() string {
	if m != nil {
		return m.MobilePhoneNumber
	}
	return ""
}

func (m *CreateCustomerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateCustomerRequest) GetFaceImage() *FaceImage {
	if m != nil {
		return m.FaceImage
	}
	return nil
}

func (m *CreateCustomerRequest) GetDateOfBirth() *timestamp.Timestamp {
	if m != nil {
		return m.DateOfBirth
	}
	return nil
}

func (m *CreateCustomerRequest) GetRelationshipStatus() string {
	if m != nil {
		return m.RelationshipStatus
	}
	return ""
}

func (m *CreateCustomerRequest) GetDobOfDependents() []*timestamp.Timestamp {
	if m != nil {
		return m.DobOfDependents
	}
	return nil
}

func (m *CreateCustomerRequest) GetCreditRating() *CreditRating {
	if m != nil {
		return m.CreditRating
	}
	return nil
}

func (m *CreateCustomerRequest) GetCreditLimit() *types.Amount {
	if m != nil {
		return m.CreditLimit
	}
	return nil
}

func (m *CreateCustomerRequest) GetHighestEducationAttained() string {
	if m != nil {
		return m.HighestEducationAttained
	}
	return ""
}

func (m *CreateCustomerRequest) GetEmploymentStatus() string {
	if m != nil {
		return m.EmploymentStatus
	}
	return ""
}

func (m *CreateCustomerRequest) GetLastOKDate() *timestamp.Timestamp {
	if m != nil {
		return m.LastOKDate
	}
	return nil
}

func (m *CreateCustomerRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateCustomerRequest) GetBranchID() string {
	if m != nil {
		return m.BranchID
	}
	return ""
}

type CreateCustomerResponse struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	BankID               string   `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCustomerResponse) Reset()         { *m = CreateCustomerResponse{} }
func (m *CreateCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCustomerResponse) ProtoMessage()    {}
func (*CreateCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{4}
}

func (m *CreateCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCustomerResponse.Unmarshal(m, b)
}
func (m *CreateCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCustomerResponse.Marshal(b, m, deterministic)
}
func (m *CreateCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCustomerResponse.Merge(m, src)
}
func (m *CreateCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCustomerResponse.Size(m)
}
func (m *CreateCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCustomerResponse proto.InternalMessageInfo

func (m *CreateCustomerResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *CreateCustomerResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

type AddAddressToCustomerRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	Line1                string   `protobuf:"bytes,2,opt,name=Line1,json=line_1,proto3" json:"Line1,omitempty"`
	Line2                string   `protobuf:"bytes,3,opt,name=Line2,json=line_2,proto3" json:"Line2,omitempty"`
	Line3                string   `protobuf:"bytes,4,opt,name=Line3,json=line_3,proto3" json:"Line3,omitempty"`
	City                 string   `protobuf:"bytes,5,opt,name=City,json=city,proto3" json:"City,omitempty"`
	County               string   `protobuf:"bytes,6,opt,name=County,json=county,proto3" json:"County,omitempty"`
	State                string   `protobuf:"bytes,7,opt,name=State,json=state,proto3" json:"State,omitempty"`
	Postcode             string   `protobuf:"bytes,8,opt,name=Postcode,json=postcode,proto3" json:"Postcode,omitempty"`
	CountryCode          string   `protobuf:"bytes,9,opt,name=CountryCode,json=country_code,proto3" json:"CountryCode,omitempty"`
	Tags                 []string `protobuf:"bytes,10,rep,name=Tags,json=tags,proto3" json:"Tags,omitempty"`
	Status               string   `protobuf:"bytes,11,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAddressToCustomerRequest) Reset()         { *m = AddAddressToCustomerRequest{} }
func (m *AddAddressToCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*AddAddressToCustomerRequest) ProtoMessage()    {}
func (*AddAddressToCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{5}
}

func (m *AddAddressToCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAddressToCustomerRequest.Unmarshal(m, b)
}
func (m *AddAddressToCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAddressToCustomerRequest.Marshal(b, m, deterministic)
}
func (m *AddAddressToCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAddressToCustomerRequest.Merge(m, src)
}
func (m *AddAddressToCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_AddAddressToCustomerRequest.Size(m)
}
func (m *AddAddressToCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAddressToCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAddressToCustomerRequest proto.InternalMessageInfo

func (m *AddAddressToCustomerRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetLine3() string {
	if m != nil {
		return m.Line3
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *AddAddressToCustomerRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AddAddressToCustomerRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type AddAddressToCustomerResponse struct {
	CustomerAddressID    string               `protobuf:"bytes,1,opt,name=CustomerAddressID,json=customer_address_id,proto3" json:"CustomerAddressID,omitempty"`
	CustomerID           string               `protobuf:"bytes,2,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	Line1                string               `protobuf:"bytes,3,opt,name=Line1,json=line_1,proto3" json:"Line1,omitempty"`
	Line2                string               `protobuf:"bytes,4,opt,name=Line2,json=line_2,proto3" json:"Line2,omitempty"`
	Line3                string               `protobuf:"bytes,5,opt,name=Line3,json=line_3,proto3" json:"Line3,omitempty"`
	City                 string               `protobuf:"bytes,6,opt,name=City,json=city,proto3" json:"City,omitempty"`
	County               string               `protobuf:"bytes,7,opt,name=County,json=county,proto3" json:"County,omitempty"`
	State                string               `protobuf:"bytes,8,opt,name=State,json=state,proto3" json:"State,omitempty"`
	Postcode             string               `protobuf:"bytes,9,opt,name=Postcode,json=postcode,proto3" json:"Postcode,omitempty"`
	CountryCode          string               `protobuf:"bytes,10,opt,name=CountryCode,json=country_code,proto3" json:"CountryCode,omitempty"`
	Tags                 []string             `protobuf:"bytes,11,rep,name=Tags,json=tags,proto3" json:"Tags,omitempty"`
	Status               string               `protobuf:"bytes,12,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	InsertDate           *timestamp.Timestamp `protobuf:"bytes,13,opt,name=InsertDate,json=insert_date,proto3" json:"InsertDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddAddressToCustomerResponse) Reset()         { *m = AddAddressToCustomerResponse{} }
func (m *AddAddressToCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*AddAddressToCustomerResponse) ProtoMessage()    {}
func (*AddAddressToCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{6}
}

func (m *AddAddressToCustomerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAddressToCustomerResponse.Unmarshal(m, b)
}
func (m *AddAddressToCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAddressToCustomerResponse.Marshal(b, m, deterministic)
}
func (m *AddAddressToCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAddressToCustomerResponse.Merge(m, src)
}
func (m *AddAddressToCustomerResponse) XXX_Size() int {
	return xxx_messageInfo_AddAddressToCustomerResponse.Size(m)
}
func (m *AddAddressToCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAddressToCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAddressToCustomerResponse proto.InternalMessageInfo

func (m *AddAddressToCustomerResponse) GetCustomerAddressID() string {
	if m != nil {
		return m.CustomerAddressID
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetLine3() string {
	if m != nil {
		return m.Line3
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AddAddressToCustomerResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AddAddressToCustomerResponse) GetInsertDate() *timestamp.Timestamp {
	if m != nil {
		return m.InsertDate
	}
	return nil
}

type AddSocialMediaHandleRequest struct {
	CustomerID           string               `protobuf:"bytes,1,opt,name=CustomerID,json=customer_id,proto3" json:"CustomerID,omitempty"`
	CustomerNumber       string               `protobuf:"bytes,2,opt,name=CustomerNumber,json=customer_number,proto3" json:"CustomerNumber,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	Handle               string               `protobuf:"bytes,4,opt,name=Handle,json=handle,proto3" json:"Handle,omitempty"`
	DateAdded            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=DateAdded,json=date_added,proto3" json:"DateAdded,omitempty"`
	DateActivated        *timestamp.Timestamp `protobuf:"bytes,6,opt,name=DateActivated,json=date_activated,proto3" json:"DateActivated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AddSocialMediaHandleRequest) Reset()         { *m = AddSocialMediaHandleRequest{} }
func (m *AddSocialMediaHandleRequest) String() string { return proto.CompactTextString(m) }
func (*AddSocialMediaHandleRequest) ProtoMessage()    {}
func (*AddSocialMediaHandleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{7}
}

func (m *AddSocialMediaHandleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSocialMediaHandleRequest.Unmarshal(m, b)
}
func (m *AddSocialMediaHandleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSocialMediaHandleRequest.Marshal(b, m, deterministic)
}
func (m *AddSocialMediaHandleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSocialMediaHandleRequest.Merge(m, src)
}
func (m *AddSocialMediaHandleRequest) XXX_Size() int {
	return xxx_messageInfo_AddSocialMediaHandleRequest.Size(m)
}
func (m *AddSocialMediaHandleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSocialMediaHandleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSocialMediaHandleRequest proto.InternalMessageInfo

func (m *AddSocialMediaHandleRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

func (m *AddSocialMediaHandleRequest) GetCustomerNumber() string {
	if m != nil {
		return m.CustomerNumber
	}
	return ""
}

func (m *AddSocialMediaHandleRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddSocialMediaHandleRequest) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *AddSocialMediaHandleRequest) GetDateAdded() *timestamp.Timestamp {
	if m != nil {
		return m.DateAdded
	}
	return nil
}

func (m *AddSocialMediaHandleRequest) GetDateActivated() *timestamp.Timestamp {
	if m != nil {
		return m.DateActivated
	}
	return nil
}

type AddSocialMediaHandleResponse struct {
	Success              string   `protobuf:"bytes,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSocialMediaHandleResponse) Reset()         { *m = AddSocialMediaHandleResponse{} }
func (m *AddSocialMediaHandleResponse) String() string { return proto.CompactTextString(m) }
func (*AddSocialMediaHandleResponse) ProtoMessage()    {}
func (*AddSocialMediaHandleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_738180ea6f18b813, []int{8}
}

func (m *AddSocialMediaHandleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSocialMediaHandleResponse.Unmarshal(m, b)
}
func (m *AddSocialMediaHandleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSocialMediaHandleResponse.Marshal(b, m, deterministic)
}
func (m *AddSocialMediaHandleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSocialMediaHandleResponse.Merge(m, src)
}
func (m *AddSocialMediaHandleResponse) XXX_Size() int {
	return xxx_messageInfo_AddSocialMediaHandleResponse.Size(m)
}
func (m *AddSocialMediaHandleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSocialMediaHandleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSocialMediaHandleResponse proto.InternalMessageInfo

func (m *AddSocialMediaHandleResponse) GetSuccess() string {
	if m != nil {
		return m.Success
	}
	return ""
}

func init() {
	proto.RegisterType((*FaceImage)(nil), "customer.FaceImage")
	proto.RegisterType((*CreditRating)(nil), "customer.CreditRating")
	proto.RegisterType((*Customer)(nil), "customer.Customer")
	proto.RegisterType((*CreateCustomerRequest)(nil), "customer.CreateCustomerRequest")
	proto.RegisterType((*CreateCustomerResponse)(nil), "customer.CreateCustomerResponse")
	proto.RegisterType((*AddAddressToCustomerRequest)(nil), "customer.AddAddressToCustomerRequest")
	proto.RegisterType((*AddAddressToCustomerResponse)(nil), "customer.AddAddressToCustomerResponse")
	proto.RegisterType((*AddSocialMediaHandleRequest)(nil), "customer.AddSocialMediaHandleRequest")
	proto.RegisterType((*AddSocialMediaHandleResponse)(nil), "customer.AddSocialMediaHandleResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/customer/all.proto", fileDescriptor_738180ea6f18b813)
}

var fileDescriptor_738180ea6f18b813 = []byte{
	// 1909 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x6f, 0x23, 0x49,
	0x15, 0x77, 0xfb, 0x2b, 0x76, 0x39, 0x99, 0x4c, 0x2a, 0xb0, 0x58, 0x26, 0xda, 0x2d, 0xb2, 0xb0,
	0x93, 0x19, 0x76, 0xda, 0x8e, 0x33, 0x80, 0x14, 0x58, 0x90, 0xf3, 0xb1, 0x93, 0xcc, 0x66, 0x76,
	0x22, 0x27, 0x20, 0x18, 0x09, 0x5a, 0xe5, 0xee, 0xb2, 0x5d, 0x9b, 0xee, 0xae, 0xa6, 0xaa, 0x3a,
	0xc1, 0x20, 0x24, 0xc4, 0x01, 0x8d, 0x38, 0xad, 0x06, 0x2e, 0xfc, 0x23, 0x2b, 0x84, 0x38, 0x71,
	0x40, 0x1c, 0x91, 0xb8, 0x70, 0x40, 0x48, 0x48, 0x5c, 0x10, 0x70, 0x45, 0xdc, 0x40, 0x55, 0xdd,
	0xed, 0x8f, 0x74, 0x3b, 0x1f, 0xb3, 0x7b, 0x9a, 0x4c, 0xbf, 0x5f, 0xbd, 0x7a, 0xf5, 0xfb, 0xbd,
	0x5f, 0xd7, 0x73, 0x83, 0xf6, 0x80, 0xca, 0x61, 0xd8, 0x33, 0x6d, 0xe6, 0x35, 0x59, 0x40, 0xfc,
	0x1e, 0xf6, 0xcf, 0x26, 0x7f, 0x9c, 0x6f, 0x36, 0xed, 0x50, 0x48, 0xe6, 0x11, 0xde, 0xc4, 0xae,
	0x6b, 0x06, 0x9c, 0x49, 0x06, 0x2b, 0xc9, 0xb3, 0xc6, 0x1b, 0x03, 0xc6, 0x06, 0x2e, 0x69, 0xea,
	0xe7, 0xbd, 0xb0, 0xdf, 0x94, 0xd4, 0x23, 0x42, 0x62, 0x2f, 0x88, 0xa0, 0x8d, 0xb5, 0x18, 0x80,
	0x03, 0xda, 0xc4, 0xbe, 0xcf, 0x24, 0x96, 0x94, 0xf9, 0x22, 0x8e, 0xbe, 0xad, 0xff, 0xb1, 0x1f,
	0x0e, 0x88, 0xff, 0x50, 0x5c, 0xe0, 0xc1, 0x80, 0xf0, 0x26, 0x0b, 0x34, 0x22, 0x03, 0xdd, 0xbc,
	0xae, 0x54, 0x39, 0x0a, 0x88, 0x98, 0xd4, 0xb9, 0xee, 0x81, 0xea, 0xbb, 0xd8, 0x26, 0x87, 0x1e,
	0x1e, 0x10, 0xb8, 0x06, 0x0a, 0xdf, 0xec, 0x1e, 0xd5, 0x0d, 0x64, 0x6c, 0x54, 0x77, 0x40, 0x25,
	0x57, 0xcf, 0x6d, 0xe4, 0x5a, 0xb9, 0xe3, 0x5c, 0xb7, 0x10, 0x72, 0x17, 0x6e, 0x83, 0xe2, 0x1e,
	0x96, 0xa4, 0x9e, 0x47, 0xc6, 0x46, 0xad, 0xdd, 0x30, 0xa3, 0xb2, 0xcd, 0xe4, 0x5c, 0xe6, 0x69,
	0x72, 0xae, 0x99, 0xa5, 0x45, 0x07, 0x4b, 0xb2, 0x5d, 0xae, 0xe4, 0xee, 0xe6, 0xea, 0xb9, 0xf5,
	0xef, 0x81, 0xc5, 0x5d, 0x4e, 0x1c, 0x2a, 0xbb, 0x58, 0x52, 0x7f, 0x00, 0xd7, 0x41, 0x39, 0xfa,
	0x2b, 0x63, 0xd3, 0x32, 0x1f, 0x63, 0x4e, 0x58, 0xc8, 0xed, 0x68, 0xe7, 0x4b, 0x18, 0xa1, 0x23,
	0xe3, 0xfc, 0xbf, 0x5a, 0x00, 0x95, 0xdd, 0x98, 0x79, 0xd8, 0x00, 0xf9, 0xc3, 0xbd, 0x8c, 0xc4,
	0x79, 0xea, 0xc0, 0x37, 0x41, 0x79, 0x07, 0xfb, 0x67, 0x87, 0x7b, 0x19, 0x49, 0x17, 0x14, 0x59,
	0x16, 0x75, 0xe0, 0x16, 0xb8, 0x93, 0x24, 0x7b, 0x3f, 0xf4, 0x7a, 0x84, 0xd7, 0x0b, 0x29, 0xf0,
	0x72, 0x22, 0xb4, 0xe5, 0x6b, 0x08, 0xbc, 0x0f, 0xaa, 0x47, 0x64, 0x80, 0xdd, 0xf7, 0xb1, 0x47,
	0xea, 0xc5, 0x14, 0x1e, 0xb8, 0x2a, 0x68, 0xf9, 0xd8, 0x23, 0xf0, 0x21, 0xa8, 0x1d, 0x0f, 0x99,
	0x4f, 0xe2, 0xe4, 0xa5, 0x14, 0x78, 0x31, 0x50, 0xe1, 0x24, 0x33, 0x02, 0xa5, 0x7d, 0x0f, 0x53,
	0xb7, 0x5e, 0x4e, 0x01, 0x4b, 0x44, 0x05, 0xe0, 0xd7, 0xa7, 0xd4, 0xac, 0x2f, 0x68, 0x9d, 0x56,
	0xcd, 0xa4, 0x40, 0x73, 0x1c, 0x9a, 0x2d, 0xa8, 0x8f, 0x6d, 0x62, 0x51, 0xdd, 0x00, 0x4f, 0x40,
	0x4d, 0x49, 0xfc, 0xac, 0xbf, 0x43, 0xb9, 0x1c, 0xd6, 0x2b, 0xb7, 0x52, 0x7a, 0x49, 0x29, 0x6d,
	0xb1, 0xbe, 0xd5, 0x53, 0x8b, 0xe1, 0x57, 0x01, 0xec, 0x12, 0x37, 0xea, 0xce, 0x21, 0x0d, 0x4e,
	0x24, 0x96, 0xa1, 0xa8, 0x57, 0x53, 0xa5, 0xaf, 0xf2, 0x29, 0x94, 0x25, 0x34, 0x0c, 0x3e, 0x9e,
	0xed, 0x93, 0x3a, 0xd0, 0x95, 0xbc, 0x36, 0x39, 0xcb, 0x74, 0x74, 0xb6, 0x0a, 0x5b, 0x47, 0xac,
	0xb8, 0x79, 0xbe, 0x06, 0x6a, 0x11, 0xf4, 0x88, 0x7a, 0x54, 0xd6, 0x6b, 0x3a, 0xcf, 0x92, 0xa9,
	0x6d, 0x60, 0x76, 0x3c, 0x16, 0xfa, 0x72, 0x96, 0xf1, 0x78, 0xb9, 0xab, 0xe0, 0xf0, 0x09, 0xa8,
	0x1f, 0xd0, 0xc1, 0x90, 0x08, 0xb9, 0xef, 0x84, 0xb6, 0xae, 0xb2, 0x23, 0x25, 0xa6, 0x3e, 0x71,
	0xea, 0x8b, 0xa9, 0x93, 0xac, 0x0d, 0x23, 0xac, 0x45, 0x12, 0x30, 0x76, 0x2d, 0x1c, 0xe3, 0xe1,
	0x57, 0xc0, 0xdd, 0x7d, 0x2f, 0x70, 0xd9, 0xc8, 0x23, 0xbe, 0x8c, 0xd9, 0x58, 0x4a, 0xe5, 0x58,
	0x21, 0x63, 0x4c, 0xc2, 0xc5, 0x7d, 0x50, 0x7d, 0xef, 0x3b, 0xbb, 0xf1, 0x8a, 0x3b, 0xc8, 0xd8,
	0xa8, 0xcc, 0xea, 0x77, 0x36, 0xb2, 0x13, 0xe8, 0x01, 0x00, 0x47, 0x58, 0xc8, 0x67, 0xef, 0x69,
	0xa3, 0x2e, 0xdf, 0x4a, 0xbe, 0x45, 0x17, 0x0b, 0x69, 0xb1, 0x33, 0xcb, 0xc1, 0x12, 0xab, 0x5e,
	0x3b, 0xa5, 0xd2, 0x25, 0xf5, 0xbb, 0xe9, 0x5e, 0x93, 0x2a, 0x00, 0xef, 0x81, 0xca, 0x0e, 0xc7,
	0xbe, 0x3d, 0x3c, 0xdc, 0xab, 0xaf, 0xa4, 0x40, 0xd5, 0x9e, 0x8e, 0x59, 0xd4, 0x19, 0x7b, 0xf3,
	0xc5, 0x02, 0xf8, 0xf4, 0x2e, 0x27, 0x58, 0x92, 0xc4, 0x54, 0x5d, 0xf2, 0xfd, 0x90, 0x08, 0x39,
	0x65, 0x46, 0x63, 0xbe, 0x19, 0x67, 0x7c, 0x95, 0xbf, 0xd2, 0x57, 0xdb, 0x60, 0xe5, 0x29, 0xeb,
	0x51, 0x97, 0x4c, 0xbb, 0x2b, 0x6d, 0xdd, 0x55, 0x4f, 0x83, 0xac, 0x6c, 0x93, 0x15, 0x6f, 0x64,
	0xb2, 0xd2, 0xc7, 0x36, 0x59, 0xf9, 0x93, 0x37, 0xd9, 0xc2, 0xcd, 0x4c, 0xd6, 0x05, 0xcb, 0x7b,
	0xac, 0xf7, 0xac, 0xbf, 0x47, 0x02, 0xe2, 0x3b, 0xc4, 0x97, 0xa2, 0x5e, 0x41, 0x85, 0x5b, 0x14,
	0xb3, 0xe2, 0xb0, 0x9e, 0xaa, 0xc5, 0x19, 0x27, 0x48, 0x19, 0xb7, 0xfa, 0x09, 0x19, 0x17, 0xdc,
	0xce, 0xb8, 0x07, 0x57, 0x18, 0xb7, 0x96, 0x62, 0xa7, 0x91, 0x32, 0xee, 0xd5, 0xb6, 0x5d, 0xbc,
	0x89, 0x6d, 0x67, 0xbd, 0xb8, 0xf4, 0xca, 0x5e, 0x24, 0x13, 0x2f, 0xde, 0x99, 0xe7, 0xc5, 0xb7,
	0xa6, 0xbc, 0xb8, 0x9c, 0x02, 0x55, 0x22, 0x2f, 0x1e, 0x4e, 0xac, 0xc8, 0xc1, 0x6b, 0x97, 0x9d,
	0x28, 0x02, 0xe6, 0x0b, 0x02, 0xbf, 0x08, 0x40, 0xf2, 0x2c, 0xd3, 0x8e, 0xb5, 0xf1, 0x75, 0x77,
	0xc3, 0x4b, 0x74, 0xbc, 0xe7, 0x6f, 0x0b, 0xe0, 0xb3, 0x1d, 0xc7, 0xe9, 0x38, 0x0e, 0x27, 0x42,
	0x9c, 0xb2, 0xcb, 0x2f, 0x81, 0x5b, 0xed, 0xfc, 0x39, 0x50, 0x3a, 0xa2, 0x3e, 0xd9, 0xcc, 0x1a,
	0x09, 0x5c, 0xea, 0x13, 0x6b, 0x33, 0x81, 0xb4, 0x33, 0x8c, 0x1f, 0x41, 0xda, 0x09, 0x64, 0x2b,
	0xc3, 0xeb, 0x11, 0x64, 0x0b, 0xbe, 0x0e, 0x8a, 0xbb, 0x54, 0x8e, 0x32, 0xee, 0xe6, 0xa2, 0x4d,
	0xe5, 0x48, 0x0d, 0x27, 0xbb, 0xaa, 0x17, 0x47, 0x19, 0x97, 0x72, 0xd9, 0xd6, 0x11, 0xa5, 0x9f,
	0x6a, 0x1c, 0x92, 0xe1, 0xcb, 0x92, 0x6a, 0x16, 0xad, 0xdf, 0x31, 0x13, 0xd2, 0x66, 0x0e, 0xd1,
	0x97, 0xee, 0x25, 0xfd, 0x82, 0x38, 0xa6, 0x06, 0x06, 0xbd, 0x1b, 0x1f, 0xed, 0x2a, 0x68, 0xfa,
	0x32, 0x5d, 0xb4, 0xa3, 0xb0, 0xa5, 0xe1, 0xaf, 0x83, 0xe2, 0x29, 0x1e, 0x88, 0x3a, 0x40, 0x85,
	0xcb, 0xc5, 0x4b, 0x3c, 0x10, 0x7a, 0xb2, 0x8a, 0x3a, 0xba, 0x96, 0x31, 0x59, 0xe9, 0xc8, 0x58,
	0xbe, 0xdf, 0x15, 0xc1, 0x5a, 0xb6, 0x7c, 0x71, 0xe7, 0x6c, 0x83, 0x95, 0xe4, 0x59, 0x0c, 0xca,
	0x94, 0x71, 0x75, 0x2c, 0x23, 0x8e, 0x50, 0x4a, 0xce, 0x59, 0xed, 0xf3, 0x37, 0xd4, 0xbe, 0x70,
	0xbd, 0xf6, 0xc5, 0xeb, 0xb5, 0x2f, 0x5d, 0xab, 0x7d, 0xf9, 0x5a, 0xed, 0x17, 0xae, 0xd7, 0xbe,
	0x72, 0x13, 0xed, 0xab, 0x37, 0xd7, 0x1e, 0xdc, 0x50, 0xfb, 0xda, 0xb5, 0xda, 0x2f, 0xce, 0xd3,
	0x1e, 0x3e, 0x06, 0xe0, 0xd0, 0x17, 0x84, 0xcb, 0x57, 0x78, 0x85, 0xd5, 0xa8, 0x5e, 0x69, 0xcd,
	0x8c, 0xff, 0x7f, 0xcb, 0xeb, 0x77, 0xc0, 0x09, 0xb3, 0x29, 0x76, 0x9f, 0x12, 0x87, 0xe2, 0x03,
	0xec, 0x3b, 0x2e, 0x79, 0xa5, 0x77, 0x40, 0x7a, 0x3a, 0xcf, 0x5f, 0x3f, 0x9d, 0x2b, 0x5a, 0x46,
	0x01, 0xc9, 0xe8, 0x9d, 0xa2, 0xba, 0x5a, 0x14, 0x2d, 0x51, 0x49, 0x59, 0xad, 0x33, 0xd4, 0x11,
	0xb8, 0x0f, 0xaa, 0x8a, 0x90, 0x8e, 0xe3, 0x10, 0x27, 0x1e, 0x00, 0x6e, 0xca, 0x0a, 0xd0, 0xd7,
	0x37, 0x56, 0x2b, 0xe1, 0x53, 0xb0, 0xa4, 0xd3, 0xd8, 0x92, 0x9e, 0x63, 0x49, 0x9c, 0x5b, 0x4e,
	0x02, 0x77, 0xa2, 0x54, 0xc9, 0xea, 0x31, 0xc7, 0x47, 0xda, 0xa7, 0x19, 0x14, 0xc7, 0x3e, 0xfd,
	0x3c, 0x58, 0x38, 0x09, 0x6d, 0x9b, 0x08, 0x91, 0x35, 0x6d, 0x89, 0x28, 0x94, 0x64, 0x6b, 0x7f,
	0x54, 0x01, 0xcb, 0x09, 0xcb, 0x27, 0x84, 0x9f, 0x53, 0x9b, 0xc0, 0x7f, 0xe6, 0xc1, 0xa7, 0xb2,
	0x5e, 0x05, 0xf0, 0x0b, 0x93, 0x6b, 0xfe, 0x8a, 0x37, 0x7d, 0xe3, 0xad, 0xeb, 0x60, 0x51, 0xa5,
	0xeb, 0xff, 0x33, 0x5e, 0x76, 0xfe, 0x60, 0x80, 0x6a, 0x12, 0x10, 0x50, 0x9d, 0x0c, 0xc5, 0xef,
	0x0d, 0x24, 0x19, 0x92, 0x43, 0x82, 0xc6, 0xb9, 0x1a, 0x57, 0x46, 0x9f, 0x7c, 0x00, 0x0a, 0xed,
	0xd6, 0x26, 0xb4, 0xc1, 0xfd, 0x8e, 0xad, 0x9d, 0x82, 0x70, 0x10, 0xb8, 0x34, 0xba, 0xef, 0x91,
	0xad, 0xaf, 0x43, 0x07, 0xc5, 0xe7, 0xef, 0x87, 0xae, 0x3b, 0x32, 0xe1, 0x97, 0xc1, 0xa3, 0x46,
	0xfb, 0xcd, 0xa6, 0x43, 0xfa, 0xd4, 0xa7, 0xd1, 0x6f, 0x6e, 0x7b, 0xf2, 0x8e, 0x9b, 0x5b, 0x79,
	0x6f, 0x15, 0xac, 0x80, 0xf2, 0xb3, 0x4e, 0x28, 0x87, 0x6d, 0xb8, 0x00, 0x4a, 0x17, 0x9c, 0x4a,
	0xf2, 0xd3, 0x3f, 0xfd, 0xfd, 0x17, 0xf9, 0x7b, 0xdb, 0xc6, 0x83, 0xf5, 0xf5, 0xe9, 0x6f, 0x06,
	0xa2, 0xf9, 0xa3, 0x49, 0xcb, 0xff, 0xb8, 0x19, 0x97, 0xff, 0x22, 0x9f, 0xfb, 0x30, 0xaf, 0x45,
	0x81, 0xff, 0x89, 0xd8, 0x4e, 0x09, 0x7a, 0x89, 0xed, 0x79, 0x9e, 0xba, 0xc4, 0xf6, 0xdc, 0xbe,
	0x58, 0xff, 0x79, 0xfe, 0x65, 0xe7, 0xf7, 0x33, 0x6c, 0x7f, 0x46, 0xf1, 0x29, 0xf4, 0x02, 0xe4,
	0xa9, 0x15, 0x28, 0x32, 0x40, 0x63, 0x63, 0x4e, 0x00, 0xf5, 0x19, 0x9f, 0x61, 0xfd, 0x09, 0x8e,
	0x48, 0x7f, 0x0e, 0xd0, 0xc9, 0x34, 0x5c, 0x1b, 0xe0, 0x56, 0x5c, 0xcf, 0xad, 0x7b, 0x3e, 0xd7,
	0x8f, 0x14, 0xd7, 0xcd, 0x2b, 0xb8, 0x8e, 0x4e, 0x60, 0xe9, 0x92, 0xac, 0xe8, 0x04, 0xd3, 0xc4,
	0x7f, 0x94, 0x07, 0x77, 0x66, 0xa7, 0x24, 0xf8, 0xc6, 0xcc, 0x1c, 0x9b, 0xfe, 0x25, 0xd3, 0x40,
	0xf3, 0x01, 0x31, 0xcd, 0x7f, 0x31, 0x5e, 0x76, 0x7e, 0x63, 0x00, 0x18, 0x37, 0x61, 0x67, 0xd2,
	0x83, 0x70, 0x25, 0x5a, 0x82, 0xf0, 0x98, 0xbf, 0x46, 0x3c, 0xa6, 0x09, 0x84, 0x91, 0x4f, 0x2e,
	0x26, 0xbc, 0x3a, 0x11, 0xaf, 0xdf, 0xbd, 0x4d, 0x33, 0xb7, 0x80, 0xd9, 0x78, 0x3b, 0x9b, 0xe0,
	0xec, 0x5a, 0xe7, 0x53, 0x0b, 0x15, 0xb5, 0x4b, 0x33, 0xd4, 0x4e, 0x88, 0x6b, 0x14, 0x5e, 0xe4,
	0x73, 0x3b, 0xbf, 0x2c, 0xbf, 0xec, 0xfc, 0xbb, 0x04, 0x0a, 0x6d, 0xb3, 0x05, 0x4f, 0xc1, 0x62,
	0x92, 0x1b, 0x75, 0x8e, 0x0f, 0xe1, 0x3b, 0xc7, 0x9c, 0x9d, 0x53, 0x87, 0x88, 0xb8, 0x52, 0x84,
	0x7d, 0x07, 0x71, 0x82, 0x1d, 0xc4, 0x02, 0xc2, 0xa3, 0xdf, 0x29, 0x88, 0xf9, 0x33, 0xad, 0x84,
	0x38, 0x89, 0xbe, 0xf5, 0x98, 0xed, 0xd2, 0xa6, 0xd9, 0x32, 0x5b, 0x0f, 0x8c, 0x7c, 0xfb, 0xee,
	0xd4, 0xa9, 0x9b, 0x1f, 0x08, 0xe6, 0x6f, 0xa7, 0x9e, 0x74, 0x8f, 0x40, 0xe1, 0x51, 0x6b, 0x13,
	0xee, 0x83, 0xdd, 0x2e, 0x91, 0x21, 0xf7, 0x89, 0x83, 0x2e, 0x86, 0x24, 0x4a, 0xce, 0x23, 0xd9,
	0x90, 0xc3, 0x88, 0x40, 0x3e, 0x93, 0xc8, 0x66, 0xbe, 0x9a, 0xfb, 0x85, 0x8e, 0x86, 0x82, 0xf0,
	0x7b, 0xba, 0x46, 0xf5, 0xdb, 0x86, 0x62, 0x57, 0x98, 0xdd, 0x63, 0x95, 0x6d, 0x0b, 0x1e, 0x82,
	0xc7, 0xe9, 0x6c, 0x0a, 0x3f, 0x49, 0x35, 0xc4, 0xe7, 0x04, 0x05, 0x84, 0x7b, 0x54, 0x08, 0x25,
	0x8a, 0x64, 0x08, 0x6b, 0x39, 0xe2, 0x9d, 0xe3, 0xd3, 0x74, 0x37, 0x55, 0xc6, 0x47, 0xf0, 0x01,
	0xd8, 0xc8, 0xaa, 0x2f, 0x42, 0x21, 0x1a, 0xe5, 0xec, 0xb3, 0xd0, 0x77, 0xcc, 0xee, 0xbb, 0xa0,
	0xf0, 0xa5, 0x56, 0x0b, 0x7e, 0x03, 0xbc, 0x33, 0xbb, 0x04, 0xfb, 0x28, 0xf4, 0xc9, 0x0f, 0x02,
	0x62, 0x2b, 0xf5, 0x09, 0xe7, 0x8c, 0x23, 0x66, 0xdb, 0x21, 0x27, 0x4e, 0x42, 0xa7, 0x20, 0xfc,
	0x9c, 0x70, 0x24, 0xa8, 0x43, 0xcc, 0xae, 0xa5, 0xb6, 0x6e, 0xc1, 0x6f, 0x83, 0x6f, 0xcd, 0xa7,
	0xa6, 0xc7, 0x9c, 0x91, 0xda, 0xde, 0xc3, 0x6e, 0x9f, 0x71, 0x0f, 0x4b, 0x95, 0x9a, 0x4d, 0x9d,
	0xd3, 0xc3, 0xd2, 0x1e, 0xea, 0x25, 0xe3, 0x9d, 0xe3, 0xb5, 0xe6, 0xf3, 0x7f, 0x19, 0xe0, 0x1f,
	0xc6, 0xb8, 0x85, 0xfe, 0x6a, 0x54, 0x0a, 0xf0, 0x67, 0x46, 0x27, 0x66, 0x81, 0x21, 0xc9, 0xb1,
	0x2f, 0xd4, 0x0d, 0xa6, 0xf4, 0x4e, 0xce, 0x2a, 0xd4, 0x6e, 0x9c, 0x08, 0xc9, 0xa9, 0x4e, 0xa6,
	0x78, 0x0b, 0xe5, 0x50, 0x29, 0x60, 0xeb, 0xae, 0x56, 0x34, 0x0b, 0x13, 0x9d, 0x0e, 0xc9, 0x74,
	0x40, 0x51, 0x1c, 0x70, 0xa6, 0x53, 0xf7, 0x99, 0xeb, 0xb2, 0x8b, 0x88, 0x68, 0xb5, 0x35, 0xe3,
	0xf4, 0x87, 0x11, 0x42, 0x8d, 0x4e, 0xa8, 0xef, 0xb2, 0x0b, 0x73, 0xa3, 0xd8, 0xae, 0xa8, 0x06,
	0x56, 0x29, 0xb6, 0xab, 0xfa, 0xd3, 0x28, 0x3b, 0x23, 0xfe, 0xce, 0x36, 0x68, 0x80, 0xa2, 0xea,
	0x45, 0x08, 0x1f, 0x73, 0xec, 0x4b, 0x11, 0x35, 0x66, 0x24, 0x1d, 0x58, 0x8b, 0x5d, 0x00, 0x57,
	0xe3, 0xa0, 0xfe, 0x5f, 0x1c, 0x3d, 0x30, 0x8e, 0x73, 0xcf, 0xc7, 0x1f, 0x7e, 0x7f, 0x62, 0xe4,
	0x5e, 0x18, 0xb9, 0x0f, 0x8d, 0xdc, 0xaf, 0x8d, 0xdc, 0x9f, 0x8d, 0xdc, 0x7f, 0x8d, 0xdc, 0x1f,
	0xf3, 0xb9, 0x5e, 0x59, 0xdf, 0xea, 0x5b, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x25, 0x41, 0x7a,
	0xc6, 0x54, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	// AddAddressToCustomer Add an Address to the Customer specified by CUSTOMER_ID.
	AddAddressToCustomer(ctx context.Context, in *AddAddressToCustomerRequest, opts ...grpc.CallOption) (*AddAddressToCustomerResponse, error)
	// AddSocialMediaHandle Add a social media handle for the customer specified by CUSTOMER_ID.
	AddSocialMediaHandle(ctx context.Context, in *AddSocialMediaHandleRequest, opts ...grpc.CallOption) (*AddSocialMediaHandleResponse, error)
	// CreateCustomer creates a new customer
	CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*CreateCustomerResponse, error)
}

type customerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerServiceClient(cc *grpc.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) AddAddressToCustomer(ctx context.Context, in *AddAddressToCustomerRequest, opts ...grpc.CallOption) (*AddAddressToCustomerResponse, error) {
	out := new(AddAddressToCustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.CustomerService/AddAddressToCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) AddSocialMediaHandle(ctx context.Context, in *AddSocialMediaHandleRequest, opts ...grpc.CallOption) (*AddSocialMediaHandleResponse, error) {
	out := new(AddSocialMediaHandleResponse)
	err := c.cc.Invoke(ctx, "/customer.CustomerService/AddSocialMediaHandle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) CreateCustomer(ctx context.Context, in *CreateCustomerRequest, opts ...grpc.CallOption) (*CreateCustomerResponse, error) {
	out := new(CreateCustomerResponse)
	err := c.cc.Invoke(ctx, "/customer.CustomerService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	// AddAddressToCustomer Add an Address to the Customer specified by CUSTOMER_ID.
	AddAddressToCustomer(context.Context, *AddAddressToCustomerRequest) (*AddAddressToCustomerResponse, error)
	// AddSocialMediaHandle Add a social media handle for the customer specified by CUSTOMER_ID.
	AddSocialMediaHandle(context.Context, *AddSocialMediaHandleRequest) (*AddSocialMediaHandleResponse, error)
	// CreateCustomer creates a new customer
	CreateCustomer(context.Context, *CreateCustomerRequest) (*CreateCustomerResponse, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) AddAddressToCustomer(ctx context.Context, req *AddAddressToCustomerRequest) (*AddAddressToCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAddressToCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) AddSocialMediaHandle(ctx context.Context, req *AddSocialMediaHandleRequest) (*AddSocialMediaHandleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSocialMediaHandle not implemented")
}
func (*UnimplementedCustomerServiceServer) CreateCustomer(ctx context.Context, req *CreateCustomerRequest) (*CreateCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_AddAddressToCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAddressToCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).AddAddressToCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.CustomerService/AddAddressToCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).AddAddressToCustomer(ctx, req.(*AddAddressToCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_AddSocialMediaHandle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSocialMediaHandleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).AddSocialMediaHandle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.CustomerService/AddSocialMediaHandle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).AddSocialMediaHandle(ctx, req.(*AddSocialMediaHandleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/customer.CustomerService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, req.(*CreateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "customer.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAddressToCustomer",
			Handler:    _CustomerService_AddAddressToCustomer_Handler,
		},
		{
			MethodName: "AddSocialMediaHandle",
			Handler:    _CustomerService_AddSocialMediaHandle_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _CustomerService_CreateCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/customer/all.proto",
}
