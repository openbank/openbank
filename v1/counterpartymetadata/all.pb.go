// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/counterpartymetadata/all.proto

package counterpartymetadata

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CorporateLocation struct {
	Location             *types.Location `protobuf:"bytes,1,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CorporateLocation) Reset()         { *m = CorporateLocation{} }
func (m *CorporateLocation) String() string { return proto.CompactTextString(m) }
func (*CorporateLocation) ProtoMessage()    {}
func (*CorporateLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{0}
}

func (m *CorporateLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CorporateLocation.Unmarshal(m, b)
}
func (m *CorporateLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CorporateLocation.Marshal(b, m, deterministic)
}
func (m *CorporateLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CorporateLocation.Merge(m, src)
}
func (m *CorporateLocation) XXX_Size() int {
	return xxx_messageInfo_CorporateLocation.Size(m)
}
func (m *CorporateLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_CorporateLocation.DiscardUnknown(m)
}

var xxx_messageInfo_CorporateLocation proto.InternalMessageInfo

func (m *CorporateLocation) GetLocation() *types.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type MoreInfo struct {
	MoreInfo             string   `protobuf:"bytes,1,opt,name=MoreInfo,json=more_info,proto3" json:"MoreInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoreInfo) Reset()         { *m = MoreInfo{} }
func (m *MoreInfo) String() string { return proto.CompactTextString(m) }
func (*MoreInfo) ProtoMessage()    {}
func (*MoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{1}
}

func (m *MoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoreInfo.Unmarshal(m, b)
}
func (m *MoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoreInfo.Marshal(b, m, deterministic)
}
func (m *MoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoreInfo.Merge(m, src)
}
func (m *MoreInfo) XXX_Size() int {
	return xxx_messageInfo_MoreInfo.Size(m)
}
func (m *MoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MoreInfo proto.InternalMessageInfo

func (m *MoreInfo) GetMoreInfo() string {
	if m != nil {
		return m.MoreInfo
	}
	return ""
}

type OpenCorporatesURL struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenCorporatesURL) Reset()         { *m = OpenCorporatesURL{} }
func (m *OpenCorporatesURL) String() string { return proto.CompactTextString(m) }
func (*OpenCorporatesURL) ProtoMessage()    {}
func (*OpenCorporatesURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{2}
}

func (m *OpenCorporatesURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenCorporatesURL.Unmarshal(m, b)
}
func (m *OpenCorporatesURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenCorporatesURL.Marshal(b, m, deterministic)
}
func (m *OpenCorporatesURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenCorporatesURL.Merge(m, src)
}
func (m *OpenCorporatesURL) XXX_Size() int {
	return xxx_messageInfo_OpenCorporatesURL.Size(m)
}
func (m *OpenCorporatesURL) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenCorporatesURL.DiscardUnknown(m)
}

var xxx_messageInfo_OpenCorporatesURL proto.InternalMessageInfo

func (m *OpenCorporatesURL) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type URL struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URL) Reset()         { *m = URL{} }
func (m *URL) String() string { return proto.CompactTextString(m) }
func (*URL) ProtoMessage()    {}
func (*URL) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{3}
}

func (m *URL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URL.Unmarshal(m, b)
}
func (m *URL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URL.Marshal(b, m, deterministic)
}
func (m *URL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URL.Merge(m, src)
}
func (m *URL) XXX_Size() int {
	return xxx_messageInfo_URL.Size(m)
}
func (m *URL) XXX_DiscardUnknown() {
	xxx_messageInfo_URL.DiscardUnknown(m)
}

var xxx_messageInfo_URL proto.InternalMessageInfo

func (m *URL) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type ImageURL struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageURL) Reset()         { *m = ImageURL{} }
func (m *ImageURL) String() string { return proto.CompactTextString(m) }
func (*ImageURL) ProtoMessage()    {}
func (*ImageURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{4}
}

func (m *ImageURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageURL.Unmarshal(m, b)
}
func (m *ImageURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageURL.Marshal(b, m, deterministic)
}
func (m *ImageURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageURL.Merge(m, src)
}
func (m *ImageURL) XXX_Size() int {
	return xxx_messageInfo_ImageURL.Size(m)
}
func (m *ImageURL) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageURL.DiscardUnknown(m)
}

var xxx_messageInfo_ImageURL proto.InternalMessageInfo

func (m *ImageURL) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

type PhysicalLocation struct {
	Location             *types.Location `protobuf:"bytes,1,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PhysicalLocation) Reset()         { *m = PhysicalLocation{} }
func (m *PhysicalLocation) String() string { return proto.CompactTextString(m) }
func (*PhysicalLocation) ProtoMessage()    {}
func (*PhysicalLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{5}
}

func (m *PhysicalLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhysicalLocation.Unmarshal(m, b)
}
func (m *PhysicalLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhysicalLocation.Marshal(b, m, deterministic)
}
func (m *PhysicalLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhysicalLocation.Merge(m, src)
}
func (m *PhysicalLocation) XXX_Size() int {
	return xxx_messageInfo_PhysicalLocation.Size(m)
}
func (m *PhysicalLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_PhysicalLocation.DiscardUnknown(m)
}

var xxx_messageInfo_PhysicalLocation proto.InternalMessageInfo

func (m *PhysicalLocation) GetLocation() *types.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type PublicAlias struct {
	Alias                string   `protobuf:"bytes,1,opt,name=Alias,json=alias,proto3" json:"Alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicAlias) Reset()         { *m = PublicAlias{} }
func (m *PublicAlias) String() string { return proto.CompactTextString(m) }
func (*PublicAlias) ProtoMessage()    {}
func (*PublicAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{6}
}

func (m *PublicAlias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicAlias.Unmarshal(m, b)
}
func (m *PublicAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicAlias.Marshal(b, m, deterministic)
}
func (m *PublicAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicAlias.Merge(m, src)
}
func (m *PublicAlias) XXX_Size() int {
	return xxx_messageInfo_PublicAlias.Size(m)
}
func (m *PublicAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicAlias.DiscardUnknown(m)
}

var xxx_messageInfo_PublicAlias proto.InternalMessageInfo

func (m *PublicAlias) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type PrivateAlias struct {
	Alias                string   `protobuf:"bytes,1,opt,name=Alias,json=alias,proto3" json:"Alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateAlias) Reset()         { *m = PrivateAlias{} }
func (m *PrivateAlias) String() string { return proto.CompactTextString(m) }
func (*PrivateAlias) ProtoMessage()    {}
func (*PrivateAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{7}
}

func (m *PrivateAlias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateAlias.Unmarshal(m, b)
}
func (m *PrivateAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateAlias.Marshal(b, m, deterministic)
}
func (m *PrivateAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateAlias.Merge(m, src)
}
func (m *PrivateAlias) XXX_Size() int {
	return xxx_messageInfo_PrivateAlias.Size(m)
}
func (m *PrivateAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateAlias.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateAlias proto.InternalMessageInfo

func (m *PrivateAlias) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type CreateCorporateLocationRequest struct {
	// CorporateLocation is the corporate_location metadata made on a other_account.
	CorporateLocation *CorporateLocation `protobuf:"bytes,1,opt,name=CorporateLocation,json=corporate_location,proto3" json:"CorporateLocation,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCorporateLocationRequest) Reset()         { *m = CreateCorporateLocationRequest{} }
func (m *CreateCorporateLocationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCorporateLocationRequest) ProtoMessage()    {}
func (*CreateCorporateLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{8}
}

func (m *CreateCorporateLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCorporateLocationRequest.Unmarshal(m, b)
}
func (m *CreateCorporateLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCorporateLocationRequest.Marshal(b, m, deterministic)
}
func (m *CreateCorporateLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCorporateLocationRequest.Merge(m, src)
}
func (m *CreateCorporateLocationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCorporateLocationRequest.Size(m)
}
func (m *CreateCorporateLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCorporateLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCorporateLocationRequest proto.InternalMessageInfo

func (m *CreateCorporateLocationRequest) GetCorporateLocation() *CorporateLocation {
	if m != nil {
		return m.CorporateLocation
	}
	return nil
}

func (m *CreateCorporateLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateCorporateLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateCorporateLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdateCorporateLocationRequest struct {
	// CorporateLocation is the corporate_location metadata made on a other_account.
	CorporateLocation *CorporateLocation `protobuf:"bytes,1,opt,name=CorporateLocation,json=corporate_location,proto3" json:"CorporateLocation,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCorporateLocationRequest) Reset()         { *m = UpdateCorporateLocationRequest{} }
func (m *UpdateCorporateLocationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCorporateLocationRequest) ProtoMessage()    {}
func (*UpdateCorporateLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{9}
}

func (m *UpdateCorporateLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCorporateLocationRequest.Unmarshal(m, b)
}
func (m *UpdateCorporateLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCorporateLocationRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCorporateLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCorporateLocationRequest.Merge(m, src)
}
func (m *UpdateCorporateLocationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCorporateLocationRequest.Size(m)
}
func (m *UpdateCorporateLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCorporateLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCorporateLocationRequest proto.InternalMessageInfo

func (m *UpdateCorporateLocationRequest) GetCorporateLocation() *CorporateLocation {
	if m != nil {
		return m.CorporateLocation
	}
	return nil
}

func (m *UpdateCorporateLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateCorporateLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateCorporateLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeleteCorporateLocationRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCorporateLocationRequest) Reset()         { *m = DeleteCorporateLocationRequest{} }
func (m *DeleteCorporateLocationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCorporateLocationRequest) ProtoMessage()    {}
func (*DeleteCorporateLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{10}
}

func (m *DeleteCorporateLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCorporateLocationRequest.Unmarshal(m, b)
}
func (m *DeleteCorporateLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCorporateLocationRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCorporateLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCorporateLocationRequest.Merge(m, src)
}
func (m *DeleteCorporateLocationRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCorporateLocationRequest.Size(m)
}
func (m *DeleteCorporateLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCorporateLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCorporateLocationRequest proto.InternalMessageInfo

func (m *DeleteCorporateLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteCorporateLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteCorporateLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetCorporateLocationRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCorporateLocationRequest) Reset()         { *m = GetCorporateLocationRequest{} }
func (m *GetCorporateLocationRequest) String() string { return proto.CompactTextString(m) }
func (*GetCorporateLocationRequest) ProtoMessage()    {}
func (*GetCorporateLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{11}
}

func (m *GetCorporateLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCorporateLocationRequest.Unmarshal(m, b)
}
func (m *GetCorporateLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCorporateLocationRequest.Marshal(b, m, deterministic)
}
func (m *GetCorporateLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCorporateLocationRequest.Merge(m, src)
}
func (m *GetCorporateLocationRequest) XXX_Size() int {
	return xxx_messageInfo_GetCorporateLocationRequest.Size(m)
}
func (m *GetCorporateLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCorporateLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCorporateLocationRequest proto.InternalMessageInfo

func (m *GetCorporateLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCorporateLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCorporateLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetCorporateLocationsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCorporateLocationsRequest) Reset()         { *m = GetCorporateLocationsRequest{} }
func (m *GetCorporateLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetCorporateLocationsRequest) ProtoMessage()    {}
func (*GetCorporateLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{12}
}

func (m *GetCorporateLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCorporateLocationsRequest.Unmarshal(m, b)
}
func (m *GetCorporateLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCorporateLocationsRequest.Marshal(b, m, deterministic)
}
func (m *GetCorporateLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCorporateLocationsRequest.Merge(m, src)
}
func (m *GetCorporateLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetCorporateLocationsRequest.Size(m)
}
func (m *GetCorporateLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCorporateLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCorporateLocationsRequest proto.InternalMessageInfo

func (m *GetCorporateLocationsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCorporateLocationsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCorporateLocationsRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetCorporateLocationsResponse struct {
	// CorporateLocations is the list of corporate_locations.
	CorporateLocations []*CorporateLocation `protobuf:"bytes,1,rep,name=CorporateLocations,json=corporate_locations,proto3" json:"CorporateLocations,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCorporateLocationsResponse) Reset()         { *m = GetCorporateLocationsResponse{} }
func (m *GetCorporateLocationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetCorporateLocationsResponse) ProtoMessage()    {}
func (*GetCorporateLocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{13}
}

func (m *GetCorporateLocationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCorporateLocationsResponse.Unmarshal(m, b)
}
func (m *GetCorporateLocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCorporateLocationsResponse.Marshal(b, m, deterministic)
}
func (m *GetCorporateLocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCorporateLocationsResponse.Merge(m, src)
}
func (m *GetCorporateLocationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetCorporateLocationsResponse.Size(m)
}
func (m *GetCorporateLocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCorporateLocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCorporateLocationsResponse proto.InternalMessageInfo

func (m *GetCorporateLocationsResponse) GetCorporateLocations() []*CorporateLocation {
	if m != nil {
		return m.CorporateLocations
	}
	return nil
}

func (m *GetCorporateLocationsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetCorporateLocationsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetCorporateLocationsResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreateMoreInfoRequest struct {
	// MoreInfo is the more_info metadata made on a other_account.
	MoreInfo *MoreInfo `protobuf:"bytes,1,opt,name=MoreInfo,json=more_info,proto3" json:"MoreInfo,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMoreInfoRequest) Reset()         { *m = CreateMoreInfoRequest{} }
func (m *CreateMoreInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMoreInfoRequest) ProtoMessage()    {}
func (*CreateMoreInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{14}
}

func (m *CreateMoreInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMoreInfoRequest.Unmarshal(m, b)
}
func (m *CreateMoreInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMoreInfoRequest.Marshal(b, m, deterministic)
}
func (m *CreateMoreInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMoreInfoRequest.Merge(m, src)
}
func (m *CreateMoreInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMoreInfoRequest.Size(m)
}
func (m *CreateMoreInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMoreInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMoreInfoRequest proto.InternalMessageInfo

func (m *CreateMoreInfoRequest) GetMoreInfo() *MoreInfo {
	if m != nil {
		return m.MoreInfo
	}
	return nil
}

func (m *CreateMoreInfoRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateMoreInfoRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateMoreInfoRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdateMoreInfoRequest struct {
	// MoreInfo is the more_info metadata made on a other_account.
	MoreInfo *MoreInfo `protobuf:"bytes,1,opt,name=MoreInfo,json=more_info,proto3" json:"MoreInfo,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateMoreInfoRequest) Reset()         { *m = UpdateMoreInfoRequest{} }
func (m *UpdateMoreInfoRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateMoreInfoRequest) ProtoMessage()    {}
func (*UpdateMoreInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{15}
}

func (m *UpdateMoreInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateMoreInfoRequest.Unmarshal(m, b)
}
func (m *UpdateMoreInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateMoreInfoRequest.Marshal(b, m, deterministic)
}
func (m *UpdateMoreInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateMoreInfoRequest.Merge(m, src)
}
func (m *UpdateMoreInfoRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateMoreInfoRequest.Size(m)
}
func (m *UpdateMoreInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateMoreInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateMoreInfoRequest proto.InternalMessageInfo

func (m *UpdateMoreInfoRequest) GetMoreInfo() *MoreInfo {
	if m != nil {
		return m.MoreInfo
	}
	return nil
}

func (m *UpdateMoreInfoRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateMoreInfoRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateMoreInfoRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeleteMoreInfoRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMoreInfoRequest) Reset()         { *m = DeleteMoreInfoRequest{} }
func (m *DeleteMoreInfoRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMoreInfoRequest) ProtoMessage()    {}
func (*DeleteMoreInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{16}
}

func (m *DeleteMoreInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMoreInfoRequest.Unmarshal(m, b)
}
func (m *DeleteMoreInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMoreInfoRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMoreInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMoreInfoRequest.Merge(m, src)
}
func (m *DeleteMoreInfoRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMoreInfoRequest.Size(m)
}
func (m *DeleteMoreInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMoreInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMoreInfoRequest proto.InternalMessageInfo

func (m *DeleteMoreInfoRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteMoreInfoRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteMoreInfoRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetMoreInfoRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoreInfoRequest) Reset()         { *m = GetMoreInfoRequest{} }
func (m *GetMoreInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetMoreInfoRequest) ProtoMessage()    {}
func (*GetMoreInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{17}
}

func (m *GetMoreInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoreInfoRequest.Unmarshal(m, b)
}
func (m *GetMoreInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoreInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetMoreInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoreInfoRequest.Merge(m, src)
}
func (m *GetMoreInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetMoreInfoRequest.Size(m)
}
func (m *GetMoreInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoreInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoreInfoRequest proto.InternalMessageInfo

func (m *GetMoreInfoRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetMoreInfoRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetMoreInfoRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetMoreInfosRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoreInfosRequest) Reset()         { *m = GetMoreInfosRequest{} }
func (m *GetMoreInfosRequest) String() string { return proto.CompactTextString(m) }
func (*GetMoreInfosRequest) ProtoMessage()    {}
func (*GetMoreInfosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{18}
}

func (m *GetMoreInfosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoreInfosRequest.Unmarshal(m, b)
}
func (m *GetMoreInfosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoreInfosRequest.Marshal(b, m, deterministic)
}
func (m *GetMoreInfosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoreInfosRequest.Merge(m, src)
}
func (m *GetMoreInfosRequest) XXX_Size() int {
	return xxx_messageInfo_GetMoreInfosRequest.Size(m)
}
func (m *GetMoreInfosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoreInfosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoreInfosRequest proto.InternalMessageInfo

func (m *GetMoreInfosRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetMoreInfosRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetMoreInfosRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetMoreInfosResponse struct {
	// MoreInfos is the list of more_infos.
	MoreInfos []*MoreInfo `protobuf:"bytes,1,rep,name=MoreInfos,json=more_infos,proto3" json:"MoreInfos,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoreInfosResponse) Reset()         { *m = GetMoreInfosResponse{} }
func (m *GetMoreInfosResponse) String() string { return proto.CompactTextString(m) }
func (*GetMoreInfosResponse) ProtoMessage()    {}
func (*GetMoreInfosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{19}
}

func (m *GetMoreInfosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoreInfosResponse.Unmarshal(m, b)
}
func (m *GetMoreInfosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoreInfosResponse.Marshal(b, m, deterministic)
}
func (m *GetMoreInfosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoreInfosResponse.Merge(m, src)
}
func (m *GetMoreInfosResponse) XXX_Size() int {
	return xxx_messageInfo_GetMoreInfosResponse.Size(m)
}
func (m *GetMoreInfosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoreInfosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoreInfosResponse proto.InternalMessageInfo

func (m *GetMoreInfosResponse) GetMoreInfos() []*MoreInfo {
	if m != nil {
		return m.MoreInfos
	}
	return nil
}

func (m *GetMoreInfosResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetMoreInfosResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetMoreInfosResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreateOpenCorporatesURLRequest struct {
	// OpenCorporatesURL is the open_corporates_url metadata made on a other_account.
	OpenCorporatesURL *OpenCorporatesURL `protobuf:"bytes,1,opt,name=OpenCorporatesURL,json=open_corporates_url,proto3" json:"OpenCorporatesURL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOpenCorporatesURLRequest) Reset()         { *m = CreateOpenCorporatesURLRequest{} }
func (m *CreateOpenCorporatesURLRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOpenCorporatesURLRequest) ProtoMessage()    {}
func (*CreateOpenCorporatesURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{20}
}

func (m *CreateOpenCorporatesURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOpenCorporatesURLRequest.Unmarshal(m, b)
}
func (m *CreateOpenCorporatesURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOpenCorporatesURLRequest.Marshal(b, m, deterministic)
}
func (m *CreateOpenCorporatesURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOpenCorporatesURLRequest.Merge(m, src)
}
func (m *CreateOpenCorporatesURLRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOpenCorporatesURLRequest.Size(m)
}
func (m *CreateOpenCorporatesURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOpenCorporatesURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOpenCorporatesURLRequest proto.InternalMessageInfo

func (m *CreateOpenCorporatesURLRequest) GetOpenCorporatesURL() *OpenCorporatesURL {
	if m != nil {
		return m.OpenCorporatesURL
	}
	return nil
}

func (m *CreateOpenCorporatesURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateOpenCorporatesURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateOpenCorporatesURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdateOpenCorporatesURLRequest struct {
	// OpenCorporatesURL is the open_corporates_url metadata made on a other_account.
	OpenCorporatesURL *OpenCorporatesURL `protobuf:"bytes,1,opt,name=OpenCorporatesURL,json=open_corporates_url,proto3" json:"OpenCorporatesURL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOpenCorporatesURLRequest) Reset()         { *m = UpdateOpenCorporatesURLRequest{} }
func (m *UpdateOpenCorporatesURLRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOpenCorporatesURLRequest) ProtoMessage()    {}
func (*UpdateOpenCorporatesURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{21}
}

func (m *UpdateOpenCorporatesURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOpenCorporatesURLRequest.Unmarshal(m, b)
}
func (m *UpdateOpenCorporatesURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOpenCorporatesURLRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOpenCorporatesURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOpenCorporatesURLRequest.Merge(m, src)
}
func (m *UpdateOpenCorporatesURLRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOpenCorporatesURLRequest.Size(m)
}
func (m *UpdateOpenCorporatesURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOpenCorporatesURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOpenCorporatesURLRequest proto.InternalMessageInfo

func (m *UpdateOpenCorporatesURLRequest) GetOpenCorporatesURL() *OpenCorporatesURL {
	if m != nil {
		return m.OpenCorporatesURL
	}
	return nil
}

func (m *UpdateOpenCorporatesURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateOpenCorporatesURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateOpenCorporatesURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeleteOpenCorporatesURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOpenCorporatesURLRequest) Reset()         { *m = DeleteOpenCorporatesURLRequest{} }
func (m *DeleteOpenCorporatesURLRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOpenCorporatesURLRequest) ProtoMessage()    {}
func (*DeleteOpenCorporatesURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{22}
}

func (m *DeleteOpenCorporatesURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOpenCorporatesURLRequest.Unmarshal(m, b)
}
func (m *DeleteOpenCorporatesURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOpenCorporatesURLRequest.Marshal(b, m, deterministic)
}
func (m *DeleteOpenCorporatesURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOpenCorporatesURLRequest.Merge(m, src)
}
func (m *DeleteOpenCorporatesURLRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteOpenCorporatesURLRequest.Size(m)
}
func (m *DeleteOpenCorporatesURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOpenCorporatesURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOpenCorporatesURLRequest proto.InternalMessageInfo

func (m *DeleteOpenCorporatesURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteOpenCorporatesURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteOpenCorporatesURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOpenCorporatesURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOpenCorporatesURLRequest) Reset()         { *m = GetOpenCorporatesURLRequest{} }
func (m *GetOpenCorporatesURLRequest) String() string { return proto.CompactTextString(m) }
func (*GetOpenCorporatesURLRequest) ProtoMessage()    {}
func (*GetOpenCorporatesURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{23}
}

func (m *GetOpenCorporatesURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOpenCorporatesURLRequest.Unmarshal(m, b)
}
func (m *GetOpenCorporatesURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOpenCorporatesURLRequest.Marshal(b, m, deterministic)
}
func (m *GetOpenCorporatesURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOpenCorporatesURLRequest.Merge(m, src)
}
func (m *GetOpenCorporatesURLRequest) XXX_Size() int {
	return xxx_messageInfo_GetOpenCorporatesURLRequest.Size(m)
}
func (m *GetOpenCorporatesURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOpenCorporatesURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOpenCorporatesURLRequest proto.InternalMessageInfo

func (m *GetOpenCorporatesURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetOpenCorporatesURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetOpenCorporatesURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOpenCorporatesURLsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOpenCorporatesURLsRequest) Reset()         { *m = GetOpenCorporatesURLsRequest{} }
func (m *GetOpenCorporatesURLsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOpenCorporatesURLsRequest) ProtoMessage()    {}
func (*GetOpenCorporatesURLsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{24}
}

func (m *GetOpenCorporatesURLsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOpenCorporatesURLsRequest.Unmarshal(m, b)
}
func (m *GetOpenCorporatesURLsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOpenCorporatesURLsRequest.Marshal(b, m, deterministic)
}
func (m *GetOpenCorporatesURLsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOpenCorporatesURLsRequest.Merge(m, src)
}
func (m *GetOpenCorporatesURLsRequest) XXX_Size() int {
	return xxx_messageInfo_GetOpenCorporatesURLsRequest.Size(m)
}
func (m *GetOpenCorporatesURLsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOpenCorporatesURLsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOpenCorporatesURLsRequest proto.InternalMessageInfo

func (m *GetOpenCorporatesURLsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetOpenCorporatesURLsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetOpenCorporatesURLsRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOpenCorporatesURLsResponse struct {
	// OpenCorporatesURLs is the list of open_corporates_urls.
	OpenCorporatesURLs []*OpenCorporatesURL `protobuf:"bytes,1,rep,name=OpenCorporatesURLs,json=open_corporates_urls,proto3" json:"OpenCorporatesURLs,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOpenCorporatesURLsResponse) Reset()         { *m = GetOpenCorporatesURLsResponse{} }
func (m *GetOpenCorporatesURLsResponse) String() string { return proto.CompactTextString(m) }
func (*GetOpenCorporatesURLsResponse) ProtoMessage()    {}
func (*GetOpenCorporatesURLsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{25}
}

func (m *GetOpenCorporatesURLsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOpenCorporatesURLsResponse.Unmarshal(m, b)
}
func (m *GetOpenCorporatesURLsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOpenCorporatesURLsResponse.Marshal(b, m, deterministic)
}
func (m *GetOpenCorporatesURLsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOpenCorporatesURLsResponse.Merge(m, src)
}
func (m *GetOpenCorporatesURLsResponse) XXX_Size() int {
	return xxx_messageInfo_GetOpenCorporatesURLsResponse.Size(m)
}
func (m *GetOpenCorporatesURLsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOpenCorporatesURLsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOpenCorporatesURLsResponse proto.InternalMessageInfo

func (m *GetOpenCorporatesURLsResponse) GetOpenCorporatesURLs() []*OpenCorporatesURL {
	if m != nil {
		return m.OpenCorporatesURLs
	}
	return nil
}

func (m *GetOpenCorporatesURLsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetOpenCorporatesURLsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetOpenCorporatesURLsResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreateURLRequest struct {
	// URL is the url metadata made on a other_account.
	URL *URL `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateURLRequest) Reset()         { *m = CreateURLRequest{} }
func (m *CreateURLRequest) String() string { return proto.CompactTextString(m) }
func (*CreateURLRequest) ProtoMessage()    {}
func (*CreateURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{26}
}

func (m *CreateURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateURLRequest.Unmarshal(m, b)
}
func (m *CreateURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateURLRequest.Marshal(b, m, deterministic)
}
func (m *CreateURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateURLRequest.Merge(m, src)
}
func (m *CreateURLRequest) XXX_Size() int {
	return xxx_messageInfo_CreateURLRequest.Size(m)
}
func (m *CreateURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateURLRequest proto.InternalMessageInfo

func (m *CreateURLRequest) GetURL() *URL {
	if m != nil {
		return m.URL
	}
	return nil
}

func (m *CreateURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdateURLRequest struct {
	// URL is the url metadata made on a other_account.
	URL *URL `protobuf:"bytes,1,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateURLRequest) Reset()         { *m = UpdateURLRequest{} }
func (m *UpdateURLRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateURLRequest) ProtoMessage()    {}
func (*UpdateURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{27}
}

func (m *UpdateURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateURLRequest.Unmarshal(m, b)
}
func (m *UpdateURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateURLRequest.Marshal(b, m, deterministic)
}
func (m *UpdateURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateURLRequest.Merge(m, src)
}
func (m *UpdateURLRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateURLRequest.Size(m)
}
func (m *UpdateURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateURLRequest proto.InternalMessageInfo

func (m *UpdateURLRequest) GetURL() *URL {
	if m != nil {
		return m.URL
	}
	return nil
}

func (m *UpdateURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeleteURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteURLRequest) Reset()         { *m = DeleteURLRequest{} }
func (m *DeleteURLRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteURLRequest) ProtoMessage()    {}
func (*DeleteURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{28}
}

func (m *DeleteURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteURLRequest.Unmarshal(m, b)
}
func (m *DeleteURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteURLRequest.Marshal(b, m, deterministic)
}
func (m *DeleteURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteURLRequest.Merge(m, src)
}
func (m *DeleteURLRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteURLRequest.Size(m)
}
func (m *DeleteURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteURLRequest proto.InternalMessageInfo

func (m *DeleteURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetURLRequest) Reset()         { *m = GetURLRequest{} }
func (m *GetURLRequest) String() string { return proto.CompactTextString(m) }
func (*GetURLRequest) ProtoMessage()    {}
func (*GetURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{29}
}

func (m *GetURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetURLRequest.Unmarshal(m, b)
}
func (m *GetURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetURLRequest.Marshal(b, m, deterministic)
}
func (m *GetURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetURLRequest.Merge(m, src)
}
func (m *GetURLRequest) XXX_Size() int {
	return xxx_messageInfo_GetURLRequest.Size(m)
}
func (m *GetURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetURLRequest proto.InternalMessageInfo

func (m *GetURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetURLsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetURLsRequest) Reset()         { *m = GetURLsRequest{} }
func (m *GetURLsRequest) String() string { return proto.CompactTextString(m) }
func (*GetURLsRequest) ProtoMessage()    {}
func (*GetURLsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{30}
}

func (m *GetURLsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetURLsRequest.Unmarshal(m, b)
}
func (m *GetURLsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetURLsRequest.Marshal(b, m, deterministic)
}
func (m *GetURLsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetURLsRequest.Merge(m, src)
}
func (m *GetURLsRequest) XXX_Size() int {
	return xxx_messageInfo_GetURLsRequest.Size(m)
}
func (m *GetURLsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetURLsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetURLsRequest proto.InternalMessageInfo

func (m *GetURLsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetURLsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetURLsRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetURLsResponse struct {
	// URLs is the list of urls.
	URLs []*URL `protobuf:"bytes,1,rep,name=URLs,json=urls,proto3" json:"URLs,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetURLsResponse) Reset()         { *m = GetURLsResponse{} }
func (m *GetURLsResponse) String() string { return proto.CompactTextString(m) }
func (*GetURLsResponse) ProtoMessage()    {}
func (*GetURLsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{31}
}

func (m *GetURLsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetURLsResponse.Unmarshal(m, b)
}
func (m *GetURLsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetURLsResponse.Marshal(b, m, deterministic)
}
func (m *GetURLsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetURLsResponse.Merge(m, src)
}
func (m *GetURLsResponse) XXX_Size() int {
	return xxx_messageInfo_GetURLsResponse.Size(m)
}
func (m *GetURLsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetURLsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetURLsResponse proto.InternalMessageInfo

func (m *GetURLsResponse) GetURLs() []*URL {
	if m != nil {
		return m.URLs
	}
	return nil
}

func (m *GetURLsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetURLsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetURLsResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreateImageURLRequest struct {
	// ImageURL is the image_url metadata made on a other_account.
	ImageURL *ImageURL `protobuf:"bytes,1,opt,name=ImageURL,json=image_url,proto3" json:"ImageURL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateImageURLRequest) Reset()         { *m = CreateImageURLRequest{} }
func (m *CreateImageURLRequest) String() string { return proto.CompactTextString(m) }
func (*CreateImageURLRequest) ProtoMessage()    {}
func (*CreateImageURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{32}
}

func (m *CreateImageURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateImageURLRequest.Unmarshal(m, b)
}
func (m *CreateImageURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateImageURLRequest.Marshal(b, m, deterministic)
}
func (m *CreateImageURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateImageURLRequest.Merge(m, src)
}
func (m *CreateImageURLRequest) XXX_Size() int {
	return xxx_messageInfo_CreateImageURLRequest.Size(m)
}
func (m *CreateImageURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateImageURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateImageURLRequest proto.InternalMessageInfo

func (m *CreateImageURLRequest) GetImageURL() *ImageURL {
	if m != nil {
		return m.ImageURL
	}
	return nil
}

func (m *CreateImageURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateImageURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateImageURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdateImageURLRequest struct {
	// ImageURL is the image_url metadata made on a other_account.
	ImageURL *ImageURL `protobuf:"bytes,1,opt,name=ImageURL,json=image_url,proto3" json:"ImageURL,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateImageURLRequest) Reset()         { *m = UpdateImageURLRequest{} }
func (m *UpdateImageURLRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateImageURLRequest) ProtoMessage()    {}
func (*UpdateImageURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{33}
}

func (m *UpdateImageURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateImageURLRequest.Unmarshal(m, b)
}
func (m *UpdateImageURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateImageURLRequest.Marshal(b, m, deterministic)
}
func (m *UpdateImageURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateImageURLRequest.Merge(m, src)
}
func (m *UpdateImageURLRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateImageURLRequest.Size(m)
}
func (m *UpdateImageURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateImageURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateImageURLRequest proto.InternalMessageInfo

func (m *UpdateImageURLRequest) GetImageURL() *ImageURL {
	if m != nil {
		return m.ImageURL
	}
	return nil
}

func (m *UpdateImageURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateImageURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateImageURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeleteImageURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteImageURLRequest) Reset()         { *m = DeleteImageURLRequest{} }
func (m *DeleteImageURLRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteImageURLRequest) ProtoMessage()    {}
func (*DeleteImageURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{34}
}

func (m *DeleteImageURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteImageURLRequest.Unmarshal(m, b)
}
func (m *DeleteImageURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteImageURLRequest.Marshal(b, m, deterministic)
}
func (m *DeleteImageURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteImageURLRequest.Merge(m, src)
}
func (m *DeleteImageURLRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteImageURLRequest.Size(m)
}
func (m *DeleteImageURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteImageURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteImageURLRequest proto.InternalMessageInfo

func (m *DeleteImageURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteImageURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeleteImageURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetImageURLRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageURLRequest) Reset()         { *m = GetImageURLRequest{} }
func (m *GetImageURLRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageURLRequest) ProtoMessage()    {}
func (*GetImageURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{35}
}

func (m *GetImageURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageURLRequest.Unmarshal(m, b)
}
func (m *GetImageURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageURLRequest.Marshal(b, m, deterministic)
}
func (m *GetImageURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageURLRequest.Merge(m, src)
}
func (m *GetImageURLRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageURLRequest.Size(m)
}
func (m *GetImageURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageURLRequest proto.InternalMessageInfo

func (m *GetImageURLRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImageURLRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImageURLRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetImageURLsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageURLsRequest) Reset()         { *m = GetImageURLsRequest{} }
func (m *GetImageURLsRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageURLsRequest) ProtoMessage()    {}
func (*GetImageURLsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{36}
}

func (m *GetImageURLsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageURLsRequest.Unmarshal(m, b)
}
func (m *GetImageURLsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageURLsRequest.Marshal(b, m, deterministic)
}
func (m *GetImageURLsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageURLsRequest.Merge(m, src)
}
func (m *GetImageURLsRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageURLsRequest.Size(m)
}
func (m *GetImageURLsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageURLsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageURLsRequest proto.InternalMessageInfo

func (m *GetImageURLsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImageURLsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImageURLsRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetImageURLsResponse struct {
	// ImageURLs is the list of image_urls.
	ImageURLs []*ImageURL `protobuf:"bytes,1,rep,name=ImageURLs,json=image_urls,proto3" json:"ImageURLs,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageURLsResponse) Reset()         { *m = GetImageURLsResponse{} }
func (m *GetImageURLsResponse) String() string { return proto.CompactTextString(m) }
func (*GetImageURLsResponse) ProtoMessage()    {}
func (*GetImageURLsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{37}
}

func (m *GetImageURLsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageURLsResponse.Unmarshal(m, b)
}
func (m *GetImageURLsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageURLsResponse.Marshal(b, m, deterministic)
}
func (m *GetImageURLsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageURLsResponse.Merge(m, src)
}
func (m *GetImageURLsResponse) XXX_Size() int {
	return xxx_messageInfo_GetImageURLsResponse.Size(m)
}
func (m *GetImageURLsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageURLsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageURLsResponse proto.InternalMessageInfo

func (m *GetImageURLsResponse) GetImageURLs() []*ImageURL {
	if m != nil {
		return m.ImageURLs
	}
	return nil
}

func (m *GetImageURLsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetImageURLsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetImageURLsResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreatePhysicalLocationRequest struct {
	// PhysicalLocation is the physical_location metadata made on a other_account.
	PhysicalLocation *PhysicalLocation `protobuf:"bytes,1,opt,name=PhysicalLocation,json=physical_location,proto3" json:"PhysicalLocation,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePhysicalLocationRequest) Reset()         { *m = CreatePhysicalLocationRequest{} }
func (m *CreatePhysicalLocationRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePhysicalLocationRequest) ProtoMessage()    {}
func (*CreatePhysicalLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{38}
}

func (m *CreatePhysicalLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePhysicalLocationRequest.Unmarshal(m, b)
}
func (m *CreatePhysicalLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePhysicalLocationRequest.Marshal(b, m, deterministic)
}
func (m *CreatePhysicalLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePhysicalLocationRequest.Merge(m, src)
}
func (m *CreatePhysicalLocationRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePhysicalLocationRequest.Size(m)
}
func (m *CreatePhysicalLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePhysicalLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePhysicalLocationRequest proto.InternalMessageInfo

func (m *CreatePhysicalLocationRequest) GetPhysicalLocation() *PhysicalLocation {
	if m != nil {
		return m.PhysicalLocation
	}
	return nil
}

func (m *CreatePhysicalLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreatePhysicalLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreatePhysicalLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdatePhysicalLocationRequest struct {
	// PhysicalLocation is the physical_location metadata made on a other_account.
	PhysicalLocation *PhysicalLocation `protobuf:"bytes,1,opt,name=PhysicalLocation,json=physical_location,proto3" json:"PhysicalLocation,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePhysicalLocationRequest) Reset()         { *m = UpdatePhysicalLocationRequest{} }
func (m *UpdatePhysicalLocationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePhysicalLocationRequest) ProtoMessage()    {}
func (*UpdatePhysicalLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{39}
}

func (m *UpdatePhysicalLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePhysicalLocationRequest.Unmarshal(m, b)
}
func (m *UpdatePhysicalLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePhysicalLocationRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePhysicalLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePhysicalLocationRequest.Merge(m, src)
}
func (m *UpdatePhysicalLocationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePhysicalLocationRequest.Size(m)
}
func (m *UpdatePhysicalLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePhysicalLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePhysicalLocationRequest proto.InternalMessageInfo

func (m *UpdatePhysicalLocationRequest) GetPhysicalLocation() *PhysicalLocation {
	if m != nil {
		return m.PhysicalLocation
	}
	return nil
}

func (m *UpdatePhysicalLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdatePhysicalLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdatePhysicalLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeletePhysicalLocationRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePhysicalLocationRequest) Reset()         { *m = DeletePhysicalLocationRequest{} }
func (m *DeletePhysicalLocationRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePhysicalLocationRequest) ProtoMessage()    {}
func (*DeletePhysicalLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{40}
}

func (m *DeletePhysicalLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePhysicalLocationRequest.Unmarshal(m, b)
}
func (m *DeletePhysicalLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePhysicalLocationRequest.Marshal(b, m, deterministic)
}
func (m *DeletePhysicalLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePhysicalLocationRequest.Merge(m, src)
}
func (m *DeletePhysicalLocationRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePhysicalLocationRequest.Size(m)
}
func (m *DeletePhysicalLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePhysicalLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePhysicalLocationRequest proto.InternalMessageInfo

func (m *DeletePhysicalLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeletePhysicalLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeletePhysicalLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPhysicalLocationRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPhysicalLocationRequest) Reset()         { *m = GetPhysicalLocationRequest{} }
func (m *GetPhysicalLocationRequest) String() string { return proto.CompactTextString(m) }
func (*GetPhysicalLocationRequest) ProtoMessage()    {}
func (*GetPhysicalLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{41}
}

func (m *GetPhysicalLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhysicalLocationRequest.Unmarshal(m, b)
}
func (m *GetPhysicalLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhysicalLocationRequest.Marshal(b, m, deterministic)
}
func (m *GetPhysicalLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhysicalLocationRequest.Merge(m, src)
}
func (m *GetPhysicalLocationRequest) XXX_Size() int {
	return xxx_messageInfo_GetPhysicalLocationRequest.Size(m)
}
func (m *GetPhysicalLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhysicalLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhysicalLocationRequest proto.InternalMessageInfo

func (m *GetPhysicalLocationRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPhysicalLocationRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPhysicalLocationRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPhysicalLocationsRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPhysicalLocationsRequest) Reset()         { *m = GetPhysicalLocationsRequest{} }
func (m *GetPhysicalLocationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPhysicalLocationsRequest) ProtoMessage()    {}
func (*GetPhysicalLocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{42}
}

func (m *GetPhysicalLocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhysicalLocationsRequest.Unmarshal(m, b)
}
func (m *GetPhysicalLocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhysicalLocationsRequest.Marshal(b, m, deterministic)
}
func (m *GetPhysicalLocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhysicalLocationsRequest.Merge(m, src)
}
func (m *GetPhysicalLocationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPhysicalLocationsRequest.Size(m)
}
func (m *GetPhysicalLocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhysicalLocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhysicalLocationsRequest proto.InternalMessageInfo

func (m *GetPhysicalLocationsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPhysicalLocationsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPhysicalLocationsRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPhysicalLocationsResponse struct {
	// PhysicalLocations is the list of physical_locations.
	PhysicalLocations []*PhysicalLocation `protobuf:"bytes,1,rep,name=PhysicalLocations,json=physical_locations,proto3" json:"PhysicalLocations,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPhysicalLocationsResponse) Reset()         { *m = GetPhysicalLocationsResponse{} }
func (m *GetPhysicalLocationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPhysicalLocationsResponse) ProtoMessage()    {}
func (*GetPhysicalLocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{43}
}

func (m *GetPhysicalLocationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPhysicalLocationsResponse.Unmarshal(m, b)
}
func (m *GetPhysicalLocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPhysicalLocationsResponse.Marshal(b, m, deterministic)
}
func (m *GetPhysicalLocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPhysicalLocationsResponse.Merge(m, src)
}
func (m *GetPhysicalLocationsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPhysicalLocationsResponse.Size(m)
}
func (m *GetPhysicalLocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPhysicalLocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPhysicalLocationsResponse proto.InternalMessageInfo

func (m *GetPhysicalLocationsResponse) GetPhysicalLocations() []*PhysicalLocation {
	if m != nil {
		return m.PhysicalLocations
	}
	return nil
}

func (m *GetPhysicalLocationsResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPhysicalLocationsResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPhysicalLocationsResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreatePublicAliasRequest struct {
	// PublicAlias is the public_alias metadata made on a other_account.
	PublicAlias *PublicAlias `protobuf:"bytes,1,opt,name=PublicAlias,json=alias,proto3" json:"PublicAlias,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePublicAliasRequest) Reset()         { *m = CreatePublicAliasRequest{} }
func (m *CreatePublicAliasRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePublicAliasRequest) ProtoMessage()    {}
func (*CreatePublicAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{44}
}

func (m *CreatePublicAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePublicAliasRequest.Unmarshal(m, b)
}
func (m *CreatePublicAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePublicAliasRequest.Marshal(b, m, deterministic)
}
func (m *CreatePublicAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePublicAliasRequest.Merge(m, src)
}
func (m *CreatePublicAliasRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePublicAliasRequest.Size(m)
}
func (m *CreatePublicAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePublicAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePublicAliasRequest proto.InternalMessageInfo

func (m *CreatePublicAliasRequest) GetPublicAlias() *PublicAlias {
	if m != nil {
		return m.PublicAlias
	}
	return nil
}

func (m *CreatePublicAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreatePublicAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreatePublicAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdatePublicAliasRequest struct {
	// PublicAlias is the public_alias metadata made on a other_account.
	PublicAlias *PublicAlias `protobuf:"bytes,1,opt,name=PublicAlias,json=alias,proto3" json:"PublicAlias,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePublicAliasRequest) Reset()         { *m = UpdatePublicAliasRequest{} }
func (m *UpdatePublicAliasRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePublicAliasRequest) ProtoMessage()    {}
func (*UpdatePublicAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{45}
}

func (m *UpdatePublicAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePublicAliasRequest.Unmarshal(m, b)
}
func (m *UpdatePublicAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePublicAliasRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePublicAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePublicAliasRequest.Merge(m, src)
}
func (m *UpdatePublicAliasRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePublicAliasRequest.Size(m)
}
func (m *UpdatePublicAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePublicAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePublicAliasRequest proto.InternalMessageInfo

func (m *UpdatePublicAliasRequest) GetPublicAlias() *PublicAlias {
	if m != nil {
		return m.PublicAlias
	}
	return nil
}

func (m *UpdatePublicAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdatePublicAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdatePublicAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeletePublicAliasRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePublicAliasRequest) Reset()         { *m = DeletePublicAliasRequest{} }
func (m *DeletePublicAliasRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePublicAliasRequest) ProtoMessage()    {}
func (*DeletePublicAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{46}
}

func (m *DeletePublicAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePublicAliasRequest.Unmarshal(m, b)
}
func (m *DeletePublicAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePublicAliasRequest.Marshal(b, m, deterministic)
}
func (m *DeletePublicAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePublicAliasRequest.Merge(m, src)
}
func (m *DeletePublicAliasRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePublicAliasRequest.Size(m)
}
func (m *DeletePublicAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePublicAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePublicAliasRequest proto.InternalMessageInfo

func (m *DeletePublicAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeletePublicAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeletePublicAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPublicAliasRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPublicAliasRequest) Reset()         { *m = GetPublicAliasRequest{} }
func (m *GetPublicAliasRequest) String() string { return proto.CompactTextString(m) }
func (*GetPublicAliasRequest) ProtoMessage()    {}
func (*GetPublicAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{47}
}

func (m *GetPublicAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPublicAliasRequest.Unmarshal(m, b)
}
func (m *GetPublicAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPublicAliasRequest.Marshal(b, m, deterministic)
}
func (m *GetPublicAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPublicAliasRequest.Merge(m, src)
}
func (m *GetPublicAliasRequest) XXX_Size() int {
	return xxx_messageInfo_GetPublicAliasRequest.Size(m)
}
func (m *GetPublicAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPublicAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPublicAliasRequest proto.InternalMessageInfo

func (m *GetPublicAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPublicAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPublicAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPublicAliasesRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPublicAliasesRequest) Reset()         { *m = GetPublicAliasesRequest{} }
func (m *GetPublicAliasesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPublicAliasesRequest) ProtoMessage()    {}
func (*GetPublicAliasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{48}
}

func (m *GetPublicAliasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPublicAliasesRequest.Unmarshal(m, b)
}
func (m *GetPublicAliasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPublicAliasesRequest.Marshal(b, m, deterministic)
}
func (m *GetPublicAliasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPublicAliasesRequest.Merge(m, src)
}
func (m *GetPublicAliasesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPublicAliasesRequest.Size(m)
}
func (m *GetPublicAliasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPublicAliasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPublicAliasesRequest proto.InternalMessageInfo

func (m *GetPublicAliasesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPublicAliasesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPublicAliasesRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPublicAliasesResponse struct {
	// PublicAliases is the list of public_aliases.
	PublicAliases []*PublicAlias `protobuf:"bytes,1,rep,name=PublicAliases,json=aliases,proto3" json:"PublicAliases,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPublicAliasesResponse) Reset()         { *m = GetPublicAliasesResponse{} }
func (m *GetPublicAliasesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPublicAliasesResponse) ProtoMessage()    {}
func (*GetPublicAliasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{49}
}

func (m *GetPublicAliasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPublicAliasesResponse.Unmarshal(m, b)
}
func (m *GetPublicAliasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPublicAliasesResponse.Marshal(b, m, deterministic)
}
func (m *GetPublicAliasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPublicAliasesResponse.Merge(m, src)
}
func (m *GetPublicAliasesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPublicAliasesResponse.Size(m)
}
func (m *GetPublicAliasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPublicAliasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPublicAliasesResponse proto.InternalMessageInfo

func (m *GetPublicAliasesResponse) GetPublicAliases() []*PublicAlias {
	if m != nil {
		return m.PublicAliases
	}
	return nil
}

func (m *GetPublicAliasesResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPublicAliasesResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPublicAliasesResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type CreatePrivateAliasRequest struct {
	// PrivateAlias is the private_alias metadata made on a other_account.
	PrivateAlias *PublicAlias `protobuf:"bytes,1,opt,name=PrivateAlias,json=alias,proto3" json:"PrivateAlias,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePrivateAliasRequest) Reset()         { *m = CreatePrivateAliasRequest{} }
func (m *CreatePrivateAliasRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePrivateAliasRequest) ProtoMessage()    {}
func (*CreatePrivateAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{50}
}

func (m *CreatePrivateAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePrivateAliasRequest.Unmarshal(m, b)
}
func (m *CreatePrivateAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePrivateAliasRequest.Marshal(b, m, deterministic)
}
func (m *CreatePrivateAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePrivateAliasRequest.Merge(m, src)
}
func (m *CreatePrivateAliasRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePrivateAliasRequest.Size(m)
}
func (m *CreatePrivateAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePrivateAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePrivateAliasRequest proto.InternalMessageInfo

func (m *CreatePrivateAliasRequest) GetPrivateAlias() *PublicAlias {
	if m != nil {
		return m.PrivateAlias
	}
	return nil
}

func (m *CreatePrivateAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreatePrivateAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreatePrivateAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type UpdatePrivateAliasRequest struct {
	// PrivateAlias is the private_alias metadata made on a other_account.
	PrivateAlias *PublicAlias `protobuf:"bytes,1,opt,name=PrivateAlias,json=alias,proto3" json:"PrivateAlias,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePrivateAliasRequest) Reset()         { *m = UpdatePrivateAliasRequest{} }
func (m *UpdatePrivateAliasRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePrivateAliasRequest) ProtoMessage()    {}
func (*UpdatePrivateAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{51}
}

func (m *UpdatePrivateAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePrivateAliasRequest.Unmarshal(m, b)
}
func (m *UpdatePrivateAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePrivateAliasRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePrivateAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePrivateAliasRequest.Merge(m, src)
}
func (m *UpdatePrivateAliasRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePrivateAliasRequest.Size(m)
}
func (m *UpdatePrivateAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePrivateAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePrivateAliasRequest proto.InternalMessageInfo

func (m *UpdatePrivateAliasRequest) GetPrivateAlias() *PublicAlias {
	if m != nil {
		return m.PrivateAlias
	}
	return nil
}

func (m *UpdatePrivateAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdatePrivateAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdatePrivateAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type DeletePrivateAliasRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePrivateAliasRequest) Reset()         { *m = DeletePrivateAliasRequest{} }
func (m *DeletePrivateAliasRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePrivateAliasRequest) ProtoMessage()    {}
func (*DeletePrivateAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{52}
}

func (m *DeletePrivateAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePrivateAliasRequest.Unmarshal(m, b)
}
func (m *DeletePrivateAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePrivateAliasRequest.Marshal(b, m, deterministic)
}
func (m *DeletePrivateAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePrivateAliasRequest.Merge(m, src)
}
func (m *DeletePrivateAliasRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePrivateAliasRequest.Size(m)
}
func (m *DeletePrivateAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePrivateAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePrivateAliasRequest proto.InternalMessageInfo

func (m *DeletePrivateAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeletePrivateAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *DeletePrivateAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPrivateAliasRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrivateAliasRequest) Reset()         { *m = GetPrivateAliasRequest{} }
func (m *GetPrivateAliasRequest) String() string { return proto.CompactTextString(m) }
func (*GetPrivateAliasRequest) ProtoMessage()    {}
func (*GetPrivateAliasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{53}
}

func (m *GetPrivateAliasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrivateAliasRequest.Unmarshal(m, b)
}
func (m *GetPrivateAliasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrivateAliasRequest.Marshal(b, m, deterministic)
}
func (m *GetPrivateAliasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrivateAliasRequest.Merge(m, src)
}
func (m *GetPrivateAliasRequest) XXX_Size() int {
	return xxx_messageInfo_GetPrivateAliasRequest.Size(m)
}
func (m *GetPrivateAliasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrivateAliasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrivateAliasRequest proto.InternalMessageInfo

func (m *GetPrivateAliasRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPrivateAliasRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPrivateAliasRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPrivateAliasesRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrivateAliasesRequest) Reset()         { *m = GetPrivateAliasesRequest{} }
func (m *GetPrivateAliasesRequest) String() string { return proto.CompactTextString(m) }
func (*GetPrivateAliasesRequest) ProtoMessage()    {}
func (*GetPrivateAliasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{54}
}

func (m *GetPrivateAliasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrivateAliasesRequest.Unmarshal(m, b)
}
func (m *GetPrivateAliasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrivateAliasesRequest.Marshal(b, m, deterministic)
}
func (m *GetPrivateAliasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrivateAliasesRequest.Merge(m, src)
}
func (m *GetPrivateAliasesRequest) XXX_Size() int {
	return xxx_messageInfo_GetPrivateAliasesRequest.Size(m)
}
func (m *GetPrivateAliasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrivateAliasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrivateAliasesRequest proto.InternalMessageInfo

func (m *GetPrivateAliasesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPrivateAliasesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPrivateAliasesRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetPrivateAliasesResponse struct {
	// PrivateAliases is the list of private_aliases.
	PrivateAliases []*PublicAlias `protobuf:"bytes,1,rep,name=PrivateAliases,json=aliases,proto3" json:"PrivateAliases,omitempty"`
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,3,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,4,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrivateAliasesResponse) Reset()         { *m = GetPrivateAliasesResponse{} }
func (m *GetPrivateAliasesResponse) String() string { return proto.CompactTextString(m) }
func (*GetPrivateAliasesResponse) ProtoMessage()    {}
func (*GetPrivateAliasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{55}
}

func (m *GetPrivateAliasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrivateAliasesResponse.Unmarshal(m, b)
}
func (m *GetPrivateAliasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrivateAliasesResponse.Marshal(b, m, deterministic)
}
func (m *GetPrivateAliasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrivateAliasesResponse.Merge(m, src)
}
func (m *GetPrivateAliasesResponse) XXX_Size() int {
	return xxx_messageInfo_GetPrivateAliasesResponse.Size(m)
}
func (m *GetPrivateAliasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrivateAliasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrivateAliasesResponse proto.InternalMessageInfo

func (m *GetPrivateAliasesResponse) GetPrivateAliases() []*PublicAlias {
	if m != nil {
		return m.PrivateAliases
	}
	return nil
}

func (m *GetPrivateAliasesResponse) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetPrivateAliasesResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetPrivateAliasesResponse) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOtherAccountMetadataRequest struct {
	// BankID is the bank identifier.
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// AccountID is the account identifier.
	AccountID string `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// OtherAccountID is the other_account identifier.
	OtherAccountID       string   `protobuf:"bytes,3,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOtherAccountMetadataRequest) Reset()         { *m = GetOtherAccountMetadataRequest{} }
func (m *GetOtherAccountMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountMetadataRequest) ProtoMessage()    {}
func (*GetOtherAccountMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{56}
}

func (m *GetOtherAccountMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountMetadataRequest.Unmarshal(m, b)
}
func (m *GetOtherAccountMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountMetadataRequest.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountMetadataRequest.Merge(m, src)
}
func (m *GetOtherAccountMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountMetadataRequest.Size(m)
}
func (m *GetOtherAccountMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountMetadataRequest proto.InternalMessageInfo

func (m *GetOtherAccountMetadataRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetOtherAccountMetadataRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetOtherAccountMetadataRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOtherAccountMetadataResponse struct {
	PublicAlias          string             `protobuf:"bytes,1,opt,name=PublicAlias,json=public_alias,proto3" json:"PublicAlias,omitempty"`
	PrivateAlias         string             `protobuf:"bytes,2,opt,name=PrivateAlias,json=private_alias,proto3" json:"PrivateAlias,omitempty"`
	MoreInfo             string             `protobuf:"bytes,3,opt,name=MoreInfo,json=more_info,proto3" json:"MoreInfo,omitempty"`
	URL                  string             `protobuf:"bytes,4,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	ImageURL             string             `protobuf:"bytes,5,opt,name=ImageURL,json=image_url,proto3" json:"ImageURL,omitempty"`
	OpenCorporatesURL    string             `protobuf:"bytes,6,opt,name=OpenCorporatesURL,json=open_corporates_url,proto3" json:"OpenCorporatesURL,omitempty"`
	CorporateLocation    *CorporateLocation `protobuf:"bytes,7,opt,name=CorporateLocation,json=corporate_location,proto3" json:"CorporateLocation,omitempty"`
	PhysicalLocation     *PhysicalLocation  `protobuf:"bytes,8,opt,name=PhysicalLocation,json=physical_location,proto3" json:"PhysicalLocation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetOtherAccountMetadataResponse) Reset()         { *m = GetOtherAccountMetadataResponse{} }
func (m *GetOtherAccountMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountMetadataResponse) ProtoMessage()    {}
func (*GetOtherAccountMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a5c94a555639333, []int{57}
}

func (m *GetOtherAccountMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountMetadataResponse.Unmarshal(m, b)
}
func (m *GetOtherAccountMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountMetadataResponse.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountMetadataResponse.Merge(m, src)
}
func (m *GetOtherAccountMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountMetadataResponse.Size(m)
}
func (m *GetOtherAccountMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountMetadataResponse proto.InternalMessageInfo

func (m *GetOtherAccountMetadataResponse) GetPublicAlias() string {
	if m != nil {
		return m.PublicAlias
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetPrivateAlias() string {
	if m != nil {
		return m.PrivateAlias
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetMoreInfo() string {
	if m != nil {
		return m.MoreInfo
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetImageURL() string {
	if m != nil {
		return m.ImageURL
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetOpenCorporatesURL() string {
	if m != nil {
		return m.OpenCorporatesURL
	}
	return ""
}

func (m *GetOtherAccountMetadataResponse) GetCorporateLocation() *CorporateLocation {
	if m != nil {
		return m.CorporateLocation
	}
	return nil
}

func (m *GetOtherAccountMetadataResponse) GetPhysicalLocation() *PhysicalLocation {
	if m != nil {
		return m.PhysicalLocation
	}
	return nil
}

func init() {
	proto.RegisterType((*CorporateLocation)(nil), "counterpartymetadata.CorporateLocation")
	proto.RegisterType((*MoreInfo)(nil), "counterpartymetadata.MoreInfo")
	proto.RegisterType((*OpenCorporatesURL)(nil), "counterpartymetadata.OpenCorporatesURL")
	proto.RegisterType((*URL)(nil), "counterpartymetadata.URL")
	proto.RegisterType((*ImageURL)(nil), "counterpartymetadata.ImageURL")
	proto.RegisterType((*PhysicalLocation)(nil), "counterpartymetadata.PhysicalLocation")
	proto.RegisterType((*PublicAlias)(nil), "counterpartymetadata.PublicAlias")
	proto.RegisterType((*PrivateAlias)(nil), "counterpartymetadata.PrivateAlias")
	proto.RegisterType((*CreateCorporateLocationRequest)(nil), "counterpartymetadata.CreateCorporateLocationRequest")
	proto.RegisterType((*UpdateCorporateLocationRequest)(nil), "counterpartymetadata.UpdateCorporateLocationRequest")
	proto.RegisterType((*DeleteCorporateLocationRequest)(nil), "counterpartymetadata.DeleteCorporateLocationRequest")
	proto.RegisterType((*GetCorporateLocationRequest)(nil), "counterpartymetadata.GetCorporateLocationRequest")
	proto.RegisterType((*GetCorporateLocationsRequest)(nil), "counterpartymetadata.GetCorporateLocationsRequest")
	proto.RegisterType((*GetCorporateLocationsResponse)(nil), "counterpartymetadata.GetCorporateLocationsResponse")
	proto.RegisterType((*CreateMoreInfoRequest)(nil), "counterpartymetadata.CreateMoreInfoRequest")
	proto.RegisterType((*UpdateMoreInfoRequest)(nil), "counterpartymetadata.UpdateMoreInfoRequest")
	proto.RegisterType((*DeleteMoreInfoRequest)(nil), "counterpartymetadata.DeleteMoreInfoRequest")
	proto.RegisterType((*GetMoreInfoRequest)(nil), "counterpartymetadata.GetMoreInfoRequest")
	proto.RegisterType((*GetMoreInfosRequest)(nil), "counterpartymetadata.GetMoreInfosRequest")
	proto.RegisterType((*GetMoreInfosResponse)(nil), "counterpartymetadata.GetMoreInfosResponse")
	proto.RegisterType((*CreateOpenCorporatesURLRequest)(nil), "counterpartymetadata.CreateOpenCorporatesURLRequest")
	proto.RegisterType((*UpdateOpenCorporatesURLRequest)(nil), "counterpartymetadata.UpdateOpenCorporatesURLRequest")
	proto.RegisterType((*DeleteOpenCorporatesURLRequest)(nil), "counterpartymetadata.DeleteOpenCorporatesURLRequest")
	proto.RegisterType((*GetOpenCorporatesURLRequest)(nil), "counterpartymetadata.GetOpenCorporatesURLRequest")
	proto.RegisterType((*GetOpenCorporatesURLsRequest)(nil), "counterpartymetadata.GetOpenCorporatesURLsRequest")
	proto.RegisterType((*GetOpenCorporatesURLsResponse)(nil), "counterpartymetadata.GetOpenCorporatesURLsResponse")
	proto.RegisterType((*CreateURLRequest)(nil), "counterpartymetadata.CreateURLRequest")
	proto.RegisterType((*UpdateURLRequest)(nil), "counterpartymetadata.UpdateURLRequest")
	proto.RegisterType((*DeleteURLRequest)(nil), "counterpartymetadata.DeleteURLRequest")
	proto.RegisterType((*GetURLRequest)(nil), "counterpartymetadata.GetURLRequest")
	proto.RegisterType((*GetURLsRequest)(nil), "counterpartymetadata.GetURLsRequest")
	proto.RegisterType((*GetURLsResponse)(nil), "counterpartymetadata.GetURLsResponse")
	proto.RegisterType((*CreateImageURLRequest)(nil), "counterpartymetadata.CreateImageURLRequest")
	proto.RegisterType((*UpdateImageURLRequest)(nil), "counterpartymetadata.UpdateImageURLRequest")
	proto.RegisterType((*DeleteImageURLRequest)(nil), "counterpartymetadata.DeleteImageURLRequest")
	proto.RegisterType((*GetImageURLRequest)(nil), "counterpartymetadata.GetImageURLRequest")
	proto.RegisterType((*GetImageURLsRequest)(nil), "counterpartymetadata.GetImageURLsRequest")
	proto.RegisterType((*GetImageURLsResponse)(nil), "counterpartymetadata.GetImageURLsResponse")
	proto.RegisterType((*CreatePhysicalLocationRequest)(nil), "counterpartymetadata.CreatePhysicalLocationRequest")
	proto.RegisterType((*UpdatePhysicalLocationRequest)(nil), "counterpartymetadata.UpdatePhysicalLocationRequest")
	proto.RegisterType((*DeletePhysicalLocationRequest)(nil), "counterpartymetadata.DeletePhysicalLocationRequest")
	proto.RegisterType((*GetPhysicalLocationRequest)(nil), "counterpartymetadata.GetPhysicalLocationRequest")
	proto.RegisterType((*GetPhysicalLocationsRequest)(nil), "counterpartymetadata.GetPhysicalLocationsRequest")
	proto.RegisterType((*GetPhysicalLocationsResponse)(nil), "counterpartymetadata.GetPhysicalLocationsResponse")
	proto.RegisterType((*CreatePublicAliasRequest)(nil), "counterpartymetadata.CreatePublicAliasRequest")
	proto.RegisterType((*UpdatePublicAliasRequest)(nil), "counterpartymetadata.UpdatePublicAliasRequest")
	proto.RegisterType((*DeletePublicAliasRequest)(nil), "counterpartymetadata.DeletePublicAliasRequest")
	proto.RegisterType((*GetPublicAliasRequest)(nil), "counterpartymetadata.GetPublicAliasRequest")
	proto.RegisterType((*GetPublicAliasesRequest)(nil), "counterpartymetadata.GetPublicAliasesRequest")
	proto.RegisterType((*GetPublicAliasesResponse)(nil), "counterpartymetadata.GetPublicAliasesResponse")
	proto.RegisterType((*CreatePrivateAliasRequest)(nil), "counterpartymetadata.CreatePrivateAliasRequest")
	proto.RegisterType((*UpdatePrivateAliasRequest)(nil), "counterpartymetadata.UpdatePrivateAliasRequest")
	proto.RegisterType((*DeletePrivateAliasRequest)(nil), "counterpartymetadata.DeletePrivateAliasRequest")
	proto.RegisterType((*GetPrivateAliasRequest)(nil), "counterpartymetadata.GetPrivateAliasRequest")
	proto.RegisterType((*GetPrivateAliasesRequest)(nil), "counterpartymetadata.GetPrivateAliasesRequest")
	proto.RegisterType((*GetPrivateAliasesResponse)(nil), "counterpartymetadata.GetPrivateAliasesResponse")
	proto.RegisterType((*GetOtherAccountMetadataRequest)(nil), "counterpartymetadata.GetOtherAccountMetadataRequest")
	proto.RegisterType((*GetOtherAccountMetadataResponse)(nil), "counterpartymetadata.GetOtherAccountMetadataResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/counterpartymetadata/all.proto", fileDescriptor_9a5c94a555639333)
}

var fileDescriptor_9a5c94a555639333 = []byte{
	// 4217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5d, 0x6f, 0x6c, 0x1c, 0xc7,
	0x75, 0xbf, 0xdd, 0xa5, 0x28, 0x72, 0x24, 0x2b, 0xe4, 0xc8, 0x92, 0xa8, 0x95, 0xac, 0xac, 0x4e,
	0x96, 0x48, 0x51, 0xd6, 0x1e, 0x79, 0x92, 0x2c, 0x99, 0x49, 0x6c, 0xaf, 0x24, 0x8b, 0x25, 0x2b,
	0xd5, 0x04, 0xad, 0x3f, 0x8e, 0x22, 0x99, 0xda, 0xbb, 0x1b, 0x92, 0x2b, 0x1d, 0x6f, 0xaf, 0xbb,
	0x7b, 0x54, 0x58, 0xc3, 0x40, 0x12, 0x14, 0x81, 0x5b, 0x34, 0x55, 0xba, 0x6a, 0x52, 0xa0, 0xa8,
	0x8d, 0x28, 0x81, 0x23, 0xb5, 0xb1, 0x9d, 0xa6, 0x68, 0x01, 0xb7, 0x49, 0x91, 0x0f, 0x06, 0x8a,
	0x7e, 0x28, 0x90, 0x00, 0x2e, 0xd0, 0x34, 0xfd, 0x0b, 0xd7, 0xa8, 0xdb, 0xa2, 0xa8, 0xd1, 0x3f,
	0x76, 0xeb, 0xf6, 0x4b, 0xb1, 0x3b, 0x7b, 0xb3, 0xbb, 0xb7, 0x33, 0xbb, 0x7b, 0xd4, 0xf1, 0xbc,
	0xb6, 0xfc, 0x49, 0xc7, 0x9d, 0x3f, 0xfb, 0xe6, 0xfd, 0xde, 0xbc, 0xf7, 0xdb, 0x99, 0x79, 0x23,
	0xf0, 0xe8, 0x82, 0x66, 0x2d, 0x36, 0x4a, 0x72, 0x59, 0x5f, 0x2a, 0xe8, 0x75, 0x54, 0x2b, 0xa9,
	0xb5, 0x6b, 0xfe, 0x8f, 0xe5, 0xf1, 0x42, 0x59, 0x6f, 0xd4, 0x2c, 0x64, 0xd4, 0x55, 0xc3, 0x5a,
	0x59, 0x42, 0x96, 0x5a, 0x51, 0x2d, 0xb5, 0xa0, 0x56, 0xab, 0x72, 0xdd, 0xd0, 0x2d, 0x1d, 0xde,
	0x4f, 0x2b, 0x17, 0x77, 0x2e, 0xe8, 0xfa, 0x42, 0x15, 0x15, 0xd4, 0xba, 0x56, 0x50, 0x6b, 0x35,
	0xdd, 0x52, 0x2d, 0x4d, 0xaf, 0x99, 0xb8, 0x8d, 0xf8, 0x90, 0xfb, 0x4f, 0xf9, 0xe0, 0x02, 0xaa,
	0x1d, 0x34, 0xaf, 0xab, 0x0b, 0x0b, 0xc8, 0x28, 0xe8, 0x75, 0xb7, 0x06, 0xa5, 0xf6, 0x0e, 0xaf,
	0x2f, 0xf7, 0xaf, 0x52, 0x63, 0xbe, 0x80, 0x96, 0xea, 0xd6, 0x8a, 0x57, 0x58, 0x48, 0x12, 0xdf,
	0x5a, 0xa9, 0x23, 0xd3, 0x97, 0x37, 0x7f, 0x16, 0x0c, 0x9e, 0xd0, 0x8d, 0xba, 0x6e, 0xa8, 0x16,
	0x3a, 0xad, 0x97, 0xdd, 0x37, 0xc1, 0xa3, 0xa0, 0xaf, 0xf9, 0x7b, 0x88, 0x93, 0xb8, 0x91, 0x0d,
	0xc5, 0x4f, 0xc8, 0x6e, 0x43, 0xb9, 0xf9, 0xf8, 0x38, 0xe8, 0xcb, 0x0d, 0xe5, 0x46, 0x72, 0x63,
	0xb9, 0x99, 0xdc, 0x6c, 0x5f, 0xd5, 0x7b, 0x3a, 0xd1, 0xdb, 0x97, 0x1b, 0xc8, 0x0d, 0xe5, 0xf2,
	0x9f, 0x02, 0x7d, 0x67, 0x74, 0x03, 0x4d, 0xd5, 0xe6, 0x75, 0x38, 0xec, 0xff, 0x76, 0x3b, 0xeb,
	0x0f, 0xb5, 0xed, 0x5f, 0xd2, 0x0d, 0x34, 0xa7, 0xd5, 0xe6, 0x75, 0xd2, 0xf8, 0x11, 0x30, 0xf8,
	0x64, 0x1d, 0xd5, 0x88, 0x58, 0xe6, 0xb9, 0xd9, 0xd3, 0x70, 0x27, 0x10, 0xce, 0xcd, 0x9e, 0xa6,
	0x74, 0x20, 0x34, 0x8c, 0x2a, 0x69, 0x7a, 0xc0, 0xad, 0x95, 0xb2, 0xf2, 0x18, 0xe8, 0x9b, 0x5a,
	0x52, 0x17, 0x50, 0xfa, 0x16, 0x4f, 0x81, 0x81, 0x99, 0xc5, 0x15, 0x53, 0x2b, 0xab, 0xd5, 0xce,
	0xe9, 0xea, 0x28, 0xd8, 0x30, 0xd3, 0x28, 0x55, 0xb5, 0xb2, 0x52, 0xd5, 0x54, 0x13, 0x4a, 0x60,
	0x9d, 0xfb, 0x83, 0x22, 0xcb, 0x3a, 0xd5, 0x29, 0x20, 0x0d, 0x8f, 0x81, 0x8d, 0x33, 0x86, 0xb6,
	0xac, 0x5a, 0xa8, 0xdd, 0x96, 0x36, 0x0f, 0x76, 0x9d, 0x30, 0x90, 0x6a, 0xa1, 0x08, 0xf6, 0xb3,
	0xe8, 0xe7, 0x1b, 0xc8, 0xb4, 0x60, 0x89, 0x62, 0x17, 0xde, 0xf8, 0x86, 0x65, 0x9a, 0x8d, 0xcb,
	0x91, 0xea, 0x21, 0x09, 0x60, 0xb9, 0x59, 0x3c, 0xd7, 0xd4, 0x00, 0xdc, 0x03, 0x7a, 0x8f, 0xab,
	0xb5, 0x6b, 0x53, 0x27, 0x87, 0xf8, 0x88, 0xc4, 0xeb, 0x1d, 0x83, 0x9d, 0xd3, 0x2a, 0x70, 0x3f,
	0xe8, 0x57, 0xca, 0xee, 0x0b, 0xa7, 0x4e, 0x0e, 0x09, 0x91, 0x7a, 0x40, 0xc5, 0x85, 0x4e, 0xd5,
	0xc3, 0x60, 0xd3, 0x93, 0xd6, 0x22, 0x32, 0xfc, 0xfa, 0x3d, 0x91, 0xfa, 0x03, 0xba, 0x53, 0x63,
	0xce, 0x6f, 0x15, 0x52, 0xca, 0xb9, 0x7a, 0xe5, 0x63, 0xa5, 0x04, 0x95, 0xf2, 0x2a, 0x07, 0x76,
	0x9d, 0x44, 0x55, 0x14, 0xa3, 0x14, 0x5f, 0x60, 0x2e, 0xa5, 0xc0, 0x7c, 0x9b, 0x02, 0x0b, 0x6d,
	0x08, 0xfc, 0x1d, 0x0e, 0xec, 0x98, 0x44, 0xd6, 0x87, 0x44, 0xda, 0x97, 0x39, 0xb0, 0x93, 0x26,
	0xad, 0x99, 0x4d, 0x71, 0x6f, 0xf2, 0xe0, 0x01, 0x86, 0xb8, 0x66, 0x5d, 0xaf, 0x99, 0x08, 0x56,
	0x00, 0x8c, 0x96, 0x0e, 0x71, 0x92, 0xb0, 0xda, 0x29, 0xb2, 0x39, 0x3a, 0x45, 0xcc, 0x8c, 0xcd,
	0x91, 0x7f, 0xe3, 0xc0, 0x16, 0xec, 0x4d, 0x9b, 0x71, 0xae, 0x89, 0xde, 0x64, 0x4b, 0xe8, 0xdb,
	0x50, 0xdc, 0x45, 0xd7, 0x41, 0xb3, 0x16, 0x23, 0x34, 0x66, 0x70, 0xc0, 0xd8, 0x53, 0xde, 0x23,
	0x03, 0x7e, 0x89, 0x03, 0x5b, 0xb0, 0x17, 0x6c, 0x1d, 0x70, 0xb6, 0xe6, 0xe7, 0x37, 0x39, 0x00,
	0x27, 0x91, 0x95, 0x6d, 0x21, 0xbf, 0xc5, 0x81, 0xcd, 0x01, 0x21, 0x33, 0xea, 0xea, 0xde, 0xe1,
	0xc0, 0xfd, 0x61, 0x29, 0x3d, 0x0f, 0x37, 0x05, 0xfa, 0xc9, 0x43, 0xcf, 0xb1, 0xb5, 0x63, 0xe3,
	0x80, 0xd8, 0x78, 0xd6, 0xdc, 0xd8, 0x4d, 0x42, 0x0a, 0x23, 0xec, 0xbb, 0x09, 0x51, 0x99, 0xc2,
	0xcc, 0xe3, 0xf9, 0x4f, 0xa4, 0x7a, 0xd8, 0xb9, 0x3b, 0x5f, 0x26, 0x73, 0xc4, 0xc3, 0x9b, 0x73,
	0x0d, 0xa3, 0x9a, 0x41, 0xad, 0x60, 0x5f, 0xf7, 0xb1, 0x56, 0x68, 0xb4, 0x90, 0xa9, 0x95, 0x4c,
	0xd2, 0xc2, 0x0f, 0x89, 0xb4, 0x1e, 0x2d, 0x8c, 0x48, 0x9b, 0x51, 0x5f, 0xf9, 0xeb, 0x98, 0x16,
	0xd2, 0xc4, 0xf5, 0x9c, 0x26, 0x02, 0x30, 0x5a, 0x1a, 0x4f, 0x0b, 0xe3, 0xe7, 0xc8, 0xfd, 0x94,
	0x39, 0x92, 0x35, 0x87, 0xfa, 0x97, 0x1c, 0x18, 0xc0, 0x0e, 0x35, 0x60, 0x68, 0x47, 0xfd, 0x85,
	0x86, 0x0d, 0xc5, 0xed, 0xf4, 0xa1, 0xb7, 0x0e, 0x56, 0xc8, 0x9e, 0x03, 0x70, 0xc6, 0x86, 0xdd,
	0xe2, 0x47, 0x6f, 0x6c, 0xdf, 0xe0, 0xc0, 0x00, 0x76, 0x6e, 0x99, 0x75, 0x10, 0x2f, 0x70, 0xe0,
	0xbe, 0x49, 0x64, 0x65, 0x56, 0xbe, 0x17, 0x39, 0xb0, 0x09, 0xcb, 0x97, 0x51, 0x97, 0xf5, 0x53,
	0x0e, 0x7c, 0x82, 0x08, 0xe8, 0x39, 0xa9, 0x47, 0x40, 0x4f, 0xc0, 0x2d, 0xa5, 0xb4, 0xdf, 0x9e,
	0x0c, 0x3a, 0x1e, 0xff, 0x83, 0xb4, 0xb9, 0xbe, 0x19, 0xf8, 0x3e, 0x6b, 0x3e, 0x8a, 0xff, 0x3e,
	0x6b, 0xd6, 0x0a, 0x7f, 0x9f, 0x69, 0xce, 0xd3, 0x0c, 0xd2, 0x11, 0xff, 0x83, 0xf4, 0x1e, 0x19,
	0xb0, 0xff, 0x41, 0xda, 0x3a, 0xe0, 0x4c, 0x7e, 0x90, 0x66, 0x5b, 0x48, 0xef, 0x83, 0xb4, 0x29,
	0x64, 0xb6, 0x3f, 0x48, 0x03, 0x52, 0xfa, 0x1f, 0xa4, 0xe4, 0x61, 0xfc, 0x07, 0x29, 0xd5, 0xc6,
	0x01, 0xb1, 0xf1, 0xac, 0xb9, 0xb1, 0x5f, 0xe5, 0xc1, 0x03, 0xd8, 0x8d, 0xb5, 0x6e, 0xba, 0x34,
	0x11, 0x9a, 0x8b, 0xee, 0xc7, 0x78, 0xb3, 0x7c, 0x1f, 0x5d, 0x03, 0xad, 0xb5, 0x43, 0x92, 0x0c,
	0xd6, 0xbd, 0xd2, 0xac, 0x2e, 0xc6, 0x3b, 0x0a, 0xc1, 0x6e, 0xee, 0x63, 0x85, 0xb8, 0x0a, 0x79,
	0x85, 0x03, 0x0f, 0x60, 0x37, 0xc8, 0x52, 0x48, 0xb6, 0xe6, 0xf0, 0xef, 0x70, 0x40, 0x9c, 0x44,
	0xd6, 0x87, 0x43, 0x58, 0xef, 0x93, 0xb9, 0x55, 0xd8, 0x8c, 0xba, 0xc7, 0x1b, 0xbc, 0xfb, 0xc9,
	0x4c, 0x91, 0xd6, 0x73, 0x93, 0x2a, 0x18, 0x8c, 0x14, 0x7a, 0xee, 0x72, 0x35, 0x73, 0x03, 0x46,
	0xe6, 0x46, 0xd6, 0xdc, 0xe7, 0x7f, 0x72, 0x60, 0xc8, 0x73, 0x9f, 0xfe, 0xf6, 0x72, 0x13, 0xbc,
	0xa9, 0xd0, 0xa6, 0xb3, 0xe7, 0x23, 0x76, 0x33, 0xf4, 0xe0, 0x57, 0xa4, 0x6c, 0x2a, 0x67, 0x70,
	0xd4, 0x9e, 0x8f, 0xbc, 0x87, 0x46, 0x7d, 0x87, 0x03, 0x43, 0x9e, 0x23, 0x8c, 0x8e, 0x3a, 0x5b,
	0x13, 0xd5, 0xa1, 0xae, 0xce, 0x44, 0xcd, 0xba, 0x9c, 0xb7, 0x39, 0xb0, 0x2d, 0x2c, 0x27, 0xca,
	0xa8, 0xa4, 0xff, 0xcd, 0x81, 0xa1, 0xa8, 0xa4, 0x9e, 0xdb, 0x3b, 0x03, 0xee, 0x0b, 0x15, 0x78,
	0x2e, 0xaf, 0x4d, 0xa3, 0x5f, 0xaf, 0xe2, 0xd6, 0x19, 0x33, 0xfb, 0x77, 0x39, 0xb0, 0xdd, 0x73,
	0x71, 0x81, 0x83, 0x30, 0x4d, 0x94, 0xa6, 0xc3, 0xe7, 0x63, 0x3e, 0x42, 0xd3, 0xdd, 0x19, 0xb7,
	0xe7, 0xe4, 0xee, 0xa9, 0x71, 0xff, 0x36, 0x07, 0xb6, 0x7b, 0x6e, 0x8e, 0x32, 0xee, 0x6c, 0xcd,
	0xca, 0x6f, 0x73, 0x60, 0xab, 0x33, 0x2b, 0x33, 0x2f, 0xe8, 0x1d, 0xcf, 0x7d, 0x04, 0x04, 0xcd,
	0xaa, 0xa7, 0x7b, 0x9f, 0x03, 0xdb, 0x29, 0xa2, 0x7a, 0xae, 0xee, 0xe7, 0xc0, 0xa6, 0x70, 0xc9,
	0x47, 0xca, 0xd7, 0xbd, 0xca, 0x81, 0x5d, 0x93, 0xc8, 0x0a, 0xf6, 0x70, 0xc6, 0x1b, 0x4a, 0x36,
	0xc1, 0xfa, 0x5f, 0x01, 0x7c, 0x92, 0x29, 0xb0, 0x07, 0xd9, 0xc1, 0x28, 0x21, 0x0b, 0x77, 0xbf,
	0xb1, 0xee, 0x16, 0xcf, 0x61, 0x6f, 0x54, 0x68, 0xf1, 0x6c, 0x51, 0xf1, 0xef, 0xab, 0xe3, 0x72,
	0xaf, 0x41, 0xf0, 0xec, 0xa9, 0x10, 0x73, 0xf6, 0xb4, 0x79, 0xfe, 0xb3, 0x87, 0x7a, 0xfe, 0xd3,
	0xe9, 0x86, 0xac, 0x22, 0xae, 0x8b, 0x76, 0xe3, 0xaf, 0x12, 0x4e, 0xd0, 0xb6, 0x82, 0x7b, 0x23,
	0x2d, 0xa8, 0x3b, 0xbc, 0xd4, 0xc3, 0x85, 0xeb, 0x3b, 0x7b, 0xb8, 0x90, 0xb6, 0x3e, 0xd0, 0xd7,
	0xc1, 0xf5, 0x81, 0x26, 0xf8, 0xc5, 0x6f, 0xdd, 0xe4, 0xc0, 0x8e, 0x13, 0x81, 0x1e, 0x9b, 0xd0,
	0x3f, 0x85, 0x8c, 0x65, 0xad, 0x8c, 0xe0, 0x3f, 0x0a, 0x60, 0x1b, 0xe3, 0x08, 0x2a, 0x3c, 0xcc,
	0x18, 0x6e, 0xec, 0x89, 0x55, 0x31, 0xad, 0x92, 0xf2, 0x6f, 0xf3, 0xb6, 0xf2, 0x0e, 0x07, 0xb6,
	0x04, 0xc5, 0x93, 0x9a, 0xf2, 0xc1, 0x1d, 0xf8, 0x35, 0x92, 0x2a, 0x45, 0xf5, 0x27, 0x1e, 0xc3,
	0x85, 0xa6, 0xa4, 0x4a, 0x35, 0x74, 0x9d, 0x52, 0x43, 0x52, 0x6b, 0x15, 0xc9, 0x40, 0x56, 0xc3,
	0xa8, 0x99, 0x92, 0xb5, 0x88, 0x24, 0xbd, 0x74, 0x15, 0x95, 0x2d, 0x79, 0xfa, 0x2a, 0x10, 0x8a,
	0x63, 0xe3, 0xb0, 0x0c, 0x46, 0x88, 0x40, 0x52, 0x53, 0x22, 0xa9, 0xec, 0xf6, 0x5a, 0x91, 0xcc,
	0x46, 0xb9, 0x8c, 0x4c, 0x73, 0xbe, 0x51, 0xad, 0xae, 0xc8, 0xf0, 0x28, 0x38, 0x22, 0x1e, 0xda,
	0x53, 0xa8, 0xa0, 0x79, 0xad, 0xa6, 0xe1, 0xd3, 0xe0, 0xb4, 0x11, 0x46, 0x06, 0x58, 0xda, 0x0c,
	0x06, 0x41, 0xef, 0x93, 0x4a, 0xc3, 0x5a, 0x2c, 0xc2, 0xf5, 0x60, 0xdd, 0x75, 0x43, 0xb3, 0xd0,
	0x97, 0xde, 0x78, 0xeb, 0x26, 0xbf, 0x38, 0xc1, 0x8d, 0xe6, 0xcb, 0x85, 0xe5, 0xf1, 0x82, 0xe3,
	0x0d, 0xcc, 0xc2, 0xb3, 0xd8, 0x5d, 0x3c, 0x57, 0xf0, 0xa6, 0xaf, 0x59, 0x78, 0x96, 0xcc, 0xf5,
	0xe7, 0x0a, 0xa1, 0x99, 0x6d, 0x16, 0x9e, 0x0d, 0xfb, 0x82, 0xe7, 0x0a, 0xe4, 0xf4, 0x7b, 0x54,
	0x0d, 0xcf, 0xf3, 0xb9, 0xaf, 0xf2, 0xae, 0x99, 0xc0, 0x17, 0x7b, 0xdc, 0x75, 0xcb, 0x28, 0xca,
	0xe3, 0x74, 0xbc, 0x62, 0x0e, 0x6f, 0xa6, 0x87, 0xf8, 0x25, 0xc1, 0x56, 0x7e, 0x97, 0x67, 0x41,
	0x3c, 0x3c, 0x8b, 0x2c, 0x43, 0x43, 0xcb, 0xc8, 0x07, 0x50, 0x22, 0x00, 0x3a, 0xee, 0xc0, 0x58,
	0xc2, 0x70, 0x3f, 0x41, 0x2a, 0x06, 0x9e, 0x4a, 0x6a, 0x49, 0x6f, 0x58, 0x2e, 0xb8, 0x94, 0xe6,
	0x66, 0x1d, 0x95, 0xb5, 0x79, 0x0d, 0x55, 0xa4, 0xd2, 0x8a, 0x5b, 0x67, 0xea, 0xe4, 0xf4, 0x38,
	0x10, 0x0e, 0x8f, 0x1d, 0x86, 0xa3, 0x60, 0x64, 0xd6, 0xb5, 0x0c, 0x54, 0x91, 0xae, 0x2f, 0xa2,
	0x9a, 0x5b, 0x6c, 0x20, 0x53, 0x6f, 0x18, 0x65, 0x24, 0x69, 0xa6, 0x54, 0xd3, 0x2d, 0x69, 0x5e,
	0x6f, 0xd4, 0x2a, 0xf2, 0xf4, 0x15, 0xc7, 0x5c, 0xc6, 0xe0, 0x67, 0xc1, 0x2e, 0x6f, 0xec, 0x12,
	0xfa, 0x3c, 0x2a, 0x37, 0x3a, 0x68, 0x24, 0x10, 0x0c, 0x10, 0x23, 0xe9, 0x05, 0x3d, 0x06, 0x52,
	0x2b, 0xae, 0x8d, 0x20, 0xd8, 0x65, 0x03, 0x79, 0xad, 0xc7, 0xfd, 0x20, 0x8c, 0x1e, 0x1b, 0x85,
	0xc5, 0xf4, 0x16, 0xd2, 0x24, 0x2c, 0xe2, 0xa1, 0xb6, 0xda, 0xe0, 0x30, 0x94, 0xff, 0x9e, 0x60,
	0x2b, 0xdf, 0x67, 0x9a, 0xcb, 0x28, 0xb1, 0x02, 0xb5, 0x5a, 0x95, 0xd4, 0x65, 0x55, 0xab, 0xaa,
	0xa5, 0x2a, 0x0d, 0x7d, 0x53, 0x54, 0xa8, 0x16, 0x63, 0xa0, 0x05, 0xd5, 0xa8, 0x68, 0xb5, 0x85,
	0xe4, 0x1e, 0xe4, 0xe9, 0x2a, 0x86, 0x1e, 0x25, 0x42, 0x7f, 0x02, 0x28, 0xe2, 0x63, 0xc9, 0xd0,
	0xc7, 0x0e, 0x7d, 0x15, 0xb6, 0xc9, 0xb4, 0x9c, 0x79, 0x58, 0xe9, 0x82, 0xe5, 0x98, 0x01, 0xd3,
	0xf9, 0x0b, 0x01, 0x6c, 0x63, 0x1c, 0xd9, 0x67, 0x05, 0x91, 0xf8, 0x13, 0xfe, 0xe9, 0x3d, 0xcc,
	0x4f, 0x78, 0x5b, 0xf9, 0x7b, 0x76, 0x10, 0xc1, 0xaf, 0x09, 0x06, 0x11, 0x02, 0xb1, 0x38, 0x8a,
	0x0b, 0x4d, 0x6a, 0xe9, 0xb0, 0x19, 0xb4, 0x9c, 0x69, 0xcd, 0x31, 0x86, 0xc3, 0xb0, 0x04, 0x86,
	0x23, 0x22, 0x84, 0xac, 0x41, 0x6a, 0xb8, 0x7d, 0x56, 0xd6, 0x2a, 0x6a, 0x88, 0x5d, 0x76, 0x0a,
	0x5f, 0x16, 0xc0, 0x36, 0x46, 0xde, 0x01, 0x0b, 0xd9, 0xf8, 0x34, 0x05, 0x71, 0xab, 0x8c, 0xf3,
	0xa6, 0xe4, 0x66, 0xde, 0x94, 0xfc, 0xc4, 0x52, 0xdd, 0x5a, 0xc9, 0xff, 0x26, 0x6f, 0x2b, 0x2f,
	0xb1, 0x81, 0xc4, 0xbd, 0xd2, 0x81, 0x1c, 0x99, 0x41, 0xc6, 0x92, 0x5a, 0x43, 0x35, 0xab, 0xba,
	0x22, 0x55, 0xd8, 0x15, 0xe5, 0xe9, 0x31, 0x0c, 0xe3, 0xfe, 0x44, 0x18, 0x71, 0x2f, 0x15, 0x99,
	0x8d, 0x06, 0x1a, 0xed, 0x26, 0x14, 0xf0, 0xb6, 0x00, 0x36, 0x85, 0x0f, 0xb7, 0xc3, 0x03, 0x71,
	0xf4, 0xac, 0xe5, 0xec, 0xb1, 0x98, 0x70, 0x36, 0x36, 0xff, 0x3a, 0x6f, 0x2b, 0x7f, 0xce, 0x54,
	0x3f, 0x24, 0x64, 0x8c, 0x50, 0x75, 0xb1, 0x10, 0xe6, 0x60, 0xa4, 0x80, 0x49, 0xbd, 0x54, 0x4c,
	0xbd, 0x2e, 0xb6, 0x41, 0xbd, 0x64, 0xf0, 0x90, 0x38, 0x9a, 0x3c, 0x89, 0x9a, 0xa3, 0x60, 0xa3,
	0x35, 0xe7, 0x30, 0xae, 0x8b, 0x1d, 0x07, 0x8c, 0x0c, 0x3a, 0x30, 0x65, 0xfe, 0x4e, 0x00, 0x1b,
	0x02, 0x27, 0x96, 0xe1, 0x08, 0x33, 0x12, 0xb6, 0x8b, 0xd1, 0x17, 0x05, 0x5b, 0xf9, 0x1a, 0x33,
	0x3c, 0xee, 0x22, 0x21, 0xcf, 0x91, 0xca, 0xf5, 0x5e, 0x21, 0x12, 0xf5, 0xe9, 0x04, 0x12, 0xe5,
	0xb7, 0xa2, 0x71, 0xa7, 0x0b, 0x38, 0x1a, 0xce, 0x24, 0x46, 0xc3, 0x36, 0x21, 0xeb, 0x64, 0xe0,
	0xbb, 0x04, 0xbb, 0x83, 0xf0, 0xfb, 0x02, 0xd8, 0x18, 0x3c, 0x93, 0x0e, 0xf7, 0x27, 0x42, 0x4c,
	0x78, 0xd1, 0x68, 0x9a, 0xaa, 0x1e, 0x1d, 0xfa, 0x8a, 0x60, 0x2b, 0xdf, 0x60, 0xe2, 0xbd, 0x9b,
	0x41, 0x87, 0x08, 0x8e, 0xa6, 0x78, 0xac, 0x2d, 0x16, 0xe4, 0x37, 0x94, 0xa7, 0xcb, 0x18, 0xee,
	0x4b, 0x89, 0x70, 0x4f, 0x80, 0x63, 0xe2, 0xc3, 0xa9, 0xc8, 0x4f, 0x64, 0x7c, 0x9d, 0x84, 0xfe,
	0x32, 0xfc, 0xdc, 0xda, 0x41, 0x1f, 0xa4, 0x3a, 0x37, 0x04, 0xb0, 0x29, 0x9c, 0x73, 0xc3, 0xf2,
	0xc3, 0xd4, 0xcc, 0x9c, 0xc4, 0x39, 0xfe, 0x1d, 0xde, 0x56, 0x7e, 0xc0, 0xf6, 0xc3, 0x84, 0xcf,
	0x10, 0xb0, 0xc4, 0xdd, 0x3e, 0x8d, 0x21, 0x0f, 0x5b, 0xd8, 0xcb, 0x05, 0x1c, 0xf6, 0x66, 0xc0,
	0xae, 0xe6, 0x7b, 0x18, 0xa4, 0xa5, 0xa3, 0xfe, 0x56, 0xec, 0xce, 0x6c, 0xfc, 0x31, 0x0f, 0x36,
	0x85, 0x93, 0x82, 0x58, 0x88, 0x50, 0x53, 0x87, 0x98, 0x84, 0xe4, 0x3d, 0xce, 0x56, 0x7e, 0x99,
	0x8d, 0x04, 0x21, 0x24, 0x3e, 0x12, 0x9f, 0xa4, 0xf2, 0x10, 0x52, 0x2e, 0x4f, 0x0f, 0x63, 0x1c,
	0x24, 0x16, 0x0e, 0xc9, 0xac, 0xe3, 0xd2, 0x68, 0x17, 0x94, 0x0a, 0xff, 0x99, 0x2c, 0x0a, 0x45,
	0x13, 0xc0, 0x63, 0x17, 0x85, 0x58, 0xe7, 0xfa, 0xc5, 0xb4, 0x87, 0xcb, 0xf3, 0xff, 0xc2, 0xdb,
	0xca, 0xbf, 0x33, 0xb5, 0xbe, 0x93, 0xf0, 0x10, 0xca, 0xca, 0x9d, 0xf8, 0x48, 0x98, 0x91, 0x50,
	0xaa, 0x7c, 0x00, 0xcb, 0x42, 0x91, 0x21, 0xb2, 0xc1, 0xd5, 0x1c, 0x92, 0xd2, 0xf9, 0x6f, 0x37,
	0x8a, 0x1e, 0x02, 0xd3, 0xe7, 0x16, 0x5e, 0x17, 0x8a, 0x02, 0xcd, 0x5e, 0x17, 0xba, 0x7b, 0x94,
	0xef, 0x08, 0xb6, 0xf2, 0x7b, 0xcc, 0xc8, 0x36, 0x42, 0xc2, 0x96, 0x23, 0xba, 0x4f, 0xe4, 0x4d,
	0xc9, 0x81, 0x30, 0xc8, 0x69, 0x4e, 0x25, 0x70, 0x1a, 0x5a, 0xfb, 0x8c, 0xae, 0x0c, 0x45, 0xed,
	0xa4, 0x9b, 0xdf, 0xf7, 0xf1, 0x36, 0xf2, 0x7d, 0xbc, 0x34, 0x14, 0x4d, 0x1d, 0x89, 0x59, 0x1a,
	0x62, 0x26, 0xcd, 0xc4, 0x2c, 0x0d, 0xb1, 0x33, 0x57, 0xf2, 0xbf, 0x2f, 0xd8, 0xca, 0x1f, 0x33,
	0x2d, 0xe6, 0x00, 0x83, 0x0b, 0x51, 0xf0, 0x37, 0xc5, 0xe3, 0x6d, 0xb1, 0x22, 0x5a, 0x17, 0x6b,
	0xb2, 0x38, 0xc4, 0x1e, 0x7c, 0x27, 0x89, 0xd2, 0x02, 0x44, 0xdd, 0x30, 0x9e, 0x20, 0x65, 0xfa,
	0x29, 0x59, 0x1d, 0x4a, 0x1d, 0x4d, 0xe2, 0x33, 0xfd, 0xd2, 0xfb, 0x99, 0xbf, 0xe2, 0x6d, 0xe5,
	0x4d, 0x76, 0x34, 0x21, 0x6c, 0x8a, 0x02, 0xb2, 0x78, 0xc0, 0xe7, 0x55, 0x94, 0x62, 0xe6, 0xfa,
	0x50, 0x44, 0x88, 0xbb, 0x5b, 0x1f, 0x6a, 0x33, 0x7c, 0x88, 0xdd, 0x76, 0x0d, 0xbf, 0x44, 0x16,
	0x88, 0x52, 0x83, 0x1b, 0x9f, 0xb0, 0xc8, 0xe4, 0x63, 0x2f, 0xf0, 0xb6, 0x72, 0x9b, 0x8d, 0x25,
	0xe1, 0x63, 0x34, 0x2c, 0xf7, 0x53, 0x99, 0x19, 0xa5, 0x66, 0x70, 0x89, 0x28, 0x01, 0xc9, 0x64,
	0xb2, 0x36, 0x3f, 0xda, 0x55, 0x34, 0xe0, 0x17, 0x05, 0xd0, 0x4f, 0x12, 0xdd, 0xe0, 0xbe, 0x38,
	0xa2, 0x16, 0xd0, 0x37, 0x3b, 0xc1, 0x26, 0xff, 0x32, 0x6f, 0x2b, 0xaf, 0x33, 0x55, 0xbe, 0x91,
	0x90, 0x31, 0x57, 0xc5, 0x61, 0xf2, 0x15, 0x47, 0xb6, 0x2e, 0x61, 0xb2, 0x75, 0xae, 0x0d, 0xb2,
	0xb5, 0x1f, 0x0c, 0x8b, 0x7b, 0x93, 0x67, 0x4b, 0xec, 0xfc, 0xf8, 0xac, 0x43, 0xaf, 0xce, 0x76,
	0x1c, 0x91, 0xf0, 0x7c, 0xf8, 0x43, 0x01, 0xf4, 0xe2, 0x84, 0x26, 0xb8, 0x87, 0x19, 0xe7, 0xd2,
	0x69, 0xdf, 0xa1, 0xc2, 0xbf, 0xc8, 0x0c, 0x79, 0x43, 0x24, 0x8a, 0xb5, 0x92, 0xa2, 0x87, 0x13,
	0x48, 0x11, 0x8b, 0x04, 0xcd, 0xe2, 0x98, 0xf6, 0xb3, 0x89, 0x31, 0x2d, 0x3d, 0x18, 0x9d, 0x8c,
	0x5c, 0xe7, 0xe1, 0x5a, 0x63, 0xf7, 0x86, 0x00, 0xd6, 0x7b, 0xc9, 0x68, 0xf0, 0xc1, 0x38, 0xf0,
	0x08, 0x95, 0xd9, 0x9b, 0x50, 0xcb, 0x23, 0x2f, 0xef, 0xf1, 0xb6, 0x72, 0x83, 0x89, 0xe4, 0x0e,
	0x06, 0x79, 0x71, 0xc9, 0x4a, 0xb1, 0x2d, 0xb2, 0x82, 0xc9, 0xc9, 0x2a, 0xd8, 0xec, 0x33, 0x18,
	0xfb, 0x0b, 0x89, 0xd8, 0x1f, 0x01, 0x87, 0xc4, 0xf1, 0x54, 0x7c, 0x26, 0xa8, 0x01, 0x26, 0xa8,
	0x17, 0xe0, 0xb9, 0xb5, 0x00, 0x35, 0x48, 0x3f, 0xde, 0xe2, 0x41, 0x3f, 0x49, 0x91, 0x65, 0x79,
	0xc5, 0xd6, 0x1c, 0xda, 0xb8, 0x79, 0x79, 0x83, 0xb7, 0x95, 0x6f, 0xb3, 0xbd, 0x22, 0x21, 0x15,
	0x8e, 0x57, 0xdc, 0xe1, 0x93, 0x88, 0x28, 0x69, 0x38, 0x83, 0x43, 0xcd, 0x29, 0xb0, 0x9d, 0x4d,
	0x13, 0x3a, 0xe5, 0xf8, 0xc4, 0xb5, 0x9e, 0x3c, 0xaf, 0xf2, 0xa0, 0x9f, 0x64, 0xeb, 0xb2, 0xd4,
	0xdc, 0x9a, 0xce, 0xcb, 0x0c, 0xf6, 0x7f, 0xcb, 0xd9, 0xca, 0x0a, 0x53, 0xc5, 0x24, 0xd6, 0x3b,
	0x2a, 0xde, 0x4e, 0x8d, 0xed, 0x6e, 0x2c, 0xcf, 0x63, 0x05, 0xef, 0xa0, 0x28, 0x38, 0x39, 0x7a,
	0x9f, 0x1f, 0x5d, 0x53, 0x95, 0x05, 0x76, 0x74, 0xc8, 0xed, 0x77, 0xb1, 0x3b, 0x3a, 0x2d, 0xc9,
	0x7b, 0x62, 0x42, 0x72, 0x59, 0xea, 0x1d, 0x1d, 0x72, 0x6a, 0xaa, 0x75, 0x47, 0x87, 0x14, 0x7c,
	0x00, 0x3b, 0x3a, 0xcd, 0x51, 0x74, 0x7d, 0x47, 0x87, 0x0c, 0x3a, 0xba, 0xa3, 0x43, 0x60, 0x62,
	0xef, 0xe8, 0xb4, 0x8b, 0x51, 0xda, 0x1d, 0x1d, 0x57, 0xaa, 0x48, 0xa0, 0x4f, 0xda, 0xd1, 0xf1,
	0x5b, 0x75, 0x63, 0x47, 0xa7, 0x39, 0xa8, 0xac, 0xef, 0xe8, 0xd0, 0x10, 0xf6, 0x76, 0x74, 0x48,
	0xfe, 0x66, 0xcc, 0x8e, 0x4e, 0x6b, 0x7a, 0x6a, 0xcc, 0x8e, 0x4e, 0x24, 0x47, 0x74, 0x95, 0x3b,
	0x3a, 0x04, 0xc7, 0x76, 0x77, 0x74, 0xfc, 0x86, 0x6b, 0xb2, 0xa3, 0x13, 0x19, 0x5f, 0xd6, 0x77,
	0x74, 0xfc, 0x14, 0x5b, 0xea, 0x8e, 0x4e, 0x92, 0x1f, 0xa6, 0xa6, 0xb6, 0x27, 0xce, 0xf1, 0xb4,
	0x3b, 0x3a, 0x04, 0xac, 0xe0, 0x8e, 0x0e, 0x79, 0xc8, 0xdc, 0xd1, 0x69, 0xbe, 0xe7, 0xee, 0x76,
	0x74, 0xd2, 0xf9, 0x5b, 0xb1, 0x3b, 0xb3, 0xd1, 0xdf, 0xd1, 0x49, 0x42, 0x84, 0x9a, 0x7b, 0x7f,
	0xd7, 0x3b, 0x3a, 0x3e, 0x12, 0xf4, 0x1d, 0x1d, 0x52, 0x1e, 0xdc, 0xd1, 0xa1, 0xe3, 0xf0, 0xc1,
	0xec, 0xe8, 0x44, 0x94, 0xea, 0x84, 0xb0, 0xad, 0xf4, 0x1c, 0x6e, 0x78, 0x28, 0x8e, 0x74, 0x30,
	0x52, 0x64, 0xc5, 0x94, 0xc7, 0x94, 0xf3, 0xff, 0xc0, 0xdb, 0xca, 0xbf, 0x32, 0x55, 0x2e, 0x12,
	0x12, 0x12, 0x39, 0xc1, 0x2c, 0x1e, 0x0d, 0x93, 0x91, 0x48, 0x05, 0x26, 0x29, 0xd1, 0x30, 0x29,
	0x29, 0xb5, 0x41, 0x4a, 0x1e, 0x06, 0x87, 0xc5, 0x62, 0xf2, 0x24, 0x69, 0x1d, 0x1d, 0x1b, 0xd4,
	0x05, 0x87, 0x9c, 0x94, 0x3a, 0x8e, 0x6b, 0x44, 0x09, 0x81, 0x49, 0xf3, 0x1b, 0x3d, 0xee, 0xed,
	0x09, 0x11, 0x78, 0xc7, 0x98, 0xe1, 0xe9, 0x6e, 0xb1, 0xbd, 0x25, 0xd8, 0xca, 0x2b, 0xcc, 0x60,
	0xb6, 0x8f, 0x44, 0xaa, 0xa6, 0xd4, 0xf4, 0xb3, 0xbd, 0x27, 0x13, 0x48, 0x4c, 0xb4, 0x35, 0x8d,
	0xcc, 0xcc, 0xe1, 0xe8, 0xf6, 0x74, 0x62, 0x74, 0x5b, 0x25, 0xd4, 0x9d, 0x8c, 0x6c, 0x15, 0xd8,
	0x5d, 0xcb, 0xf8, 0x1e, 0xde, 0xe1, 0x8b, 0x64, 0x5d, 0xc7, 0xec, 0xf0, 0xb1, 0x92, 0xcd, 0xc5,
	0x62, 0x3b, 0x4d, 0x3c, 0xd2, 0xf3, 0x8a, 0x60, 0x2b, 0xaf, 0x31, 0xed, 0x64, 0x3f, 0x83, 0xf4,
	0x44, 0x70, 0x37, 0xc5, 0xc7, 0xdb, 0x22, 0x3f, 0xd1, 0x0e, 0xe4, 0xe9, 0x6b, 0xd8, 0x4c, 0x2a,
	0x89, 0x66, 0x72, 0x1c, 0x3c, 0x2e, 0x3e, 0x9a, 0x8a, 0x04, 0x31, 0xc7, 0xdd, 0x49, 0x93, 0x59,
	0x8b, 0xc3, 0xe0, 0xd1, 0xc4, 0xf9, 0x80, 0xcd, 0xfc, 0x48, 0x00, 0x5b, 0xe9, 0x57, 0x5c, 0xb0,
	0xe2, 0x45, 0xec, 0x85, 0x18, 0xa9, 0x7d, 0xca, 0x1b, 0xbc, 0xad, 0xfc, 0x35, 0x3b, 0x5e, 0x10,
	0xb2, 0x14, 0x01, 0x57, 0xdc, 0xef, 0x93, 0xa6, 0x48, 0x61, 0x0b, 0x79, 0x5a, 0xc0, 0x41, 0xfb,
	0x0a, 0xd8, 0xd7, 0xfa, 0x7e, 0x06, 0x89, 0x5a, 0x93, 0xf8, 0x20, 0x76, 0xd7, 0x0b, 0x7c, 0x41,
	0x00, 0x5b, 0xe9, 0x77, 0x74, 0xb0, 0x10, 0x8d, 0xbd, 0xd1, 0x83, 0x49, 0xb2, 0xbe, 0xce, 0xdb,
	0xca, 0x37, 0xd9, 0x08, 0x12, 0x92, 0x15, 0x45, 0x70, 0x98, 0x4a, 0xb6, 0x22, 0xf5, 0xe4, 0xe9,
	0x02, 0xc6, 0x6f, 0x24, 0x09, 0xbf, 0x64, 0xf2, 0x55, 0x19, 0xed, 0x22, 0x08, 0xf0, 0x07, 0x02,
	0x18, 0x8c, 0xdc, 0x04, 0x01, 0xe5, 0x58, 0xfe, 0x15, 0x49, 0xcf, 0x17, 0x93, 0xd3, 0x28, 0xf3,
	0x3f, 0xe2, 0x6d, 0xe5, 0x6f, 0x98, 0x18, 0x6c, 0xf1, 0x59, 0x57, 0x20, 0xa9, 0x4f, 0x2c, 0xb6,
	0x10, 0xae, 0x40, 0x19, 0x93, 0x6b, 0x55, 0x30, 0xd7, 0xba, 0xdc, 0x06, 0xd7, 0x1a, 0x07, 0x05,
	0xf1, 0x60, 0x8a, 0xb9, 0xe4, 0x0f, 0x87, 0x0d, 0x5f, 0xc9, 0xa1, 0x59, 0x97, 0x3b, 0x8f, 0x60,
	0x60, 0xe8, 0x81, 0x19, 0xf4, 0x5f, 0x82, 0x7b, 0x99, 0x5e, 0x10, 0xbb, 0x03, 0xec, 0x70, 0xb8,
	0x2a, 0xe0, 0xbe, 0x22, 0xd8, 0xca, 0x8b, 0x29, 0xd6, 0x07, 0xb0, 0x84, 0x12, 0x06, 0x27, 0xc8,
	0xa6, 0x1e, 0x4b, 0x62, 0x53, 0xc1, 0x86, 0x34, 0x22, 0x75, 0x11, 0x47, 0xc8, 0xa7, 0x12, 0x23,
	0x64, 0xfb, 0x38, 0x76, 0x32, 0x20, 0xce, 0xc1, 0xae, 0xc1, 0xfe, 0xb5, 0x1e, 0x30, 0xd0, 0x7a,
	0xad, 0x03, 0x3c, 0x98, 0x06, 0x78, 0x92, 0xbe, 0x2d, 0xca, 0x69, 0xab, 0x7b, 0x94, 0xe9, 0x05,
	0xc1, 0x56, 0x5e, 0x66, 0xda, 0xc1, 0x5e, 0x16, 0x65, 0x0a, 0x80, 0x8b, 0x4c, 0xc6, 0xf2, 0x20,
	0x93, 0x2e, 0x85, 0x1a, 0xaf, 0x6a, 0x13, 0x69, 0x01, 0xdb, 0xce, 0x95, 0x44, 0xdb, 0x79, 0x14,
	0x7c, 0x5a, 0x9c, 0x48, 0xc7, 0xae, 0x68, 0xea, 0x61, 0x5a, 0x85, 0x0a, 0xe7, 0xd6, 0xd4, 0x2a,
	0x50, 0xd0, 0x2e, 0x6e, 0x0b, 0x60, 0x30, 0x72, 0xc3, 0x0d, 0xcb, 0x9b, 0xb3, 0xae, 0xc2, 0x49,
	0xe3, 0x14, 0xfe, 0x88, 0xb7, 0x95, 0x3f, 0x65, 0x7b, 0x73, 0x9f, 0x13, 0x05, 0x10, 0x14, 0x1f,
	0x0c, 0xd0, 0xa1, 0xc0, 0xf3, 0x16, 0x26, 0x74, 0x19, 0x47, 0xd2, 0xf3, 0x60, 0x77, 0xe0, 0x85,
	0x0c, 0x12, 0xd4, 0x69, 0xc7, 0x2d, 0x76, 0x6d, 0x06, 0xbf, 0xc9, 0x83, 0xc1, 0xc8, 0xad, 0x3c,
	0x2c, 0xa4, 0x58, 0xd7, 0xf7, 0x30, 0x09, 0xcf, 0x97, 0x78, 0x5b, 0xb9, 0xc9, 0x86, 0xc7, 0x27,
	0x3c, 0x41, 0x78, 0xf2, 0x74, 0xae, 0x13, 0xa8, 0x22, 0x4f, 0x8f, 0x62, 0x70, 0xf6, 0xc4, 0x80,
	0x93, 0xcc, 0x70, 0xe6, 0x46, 0xbb, 0xa3, 0x66, 0xf8, 0xba, 0x00, 0x60, 0xf4, 0x0e, 0x18, 0x58,
	0x88, 0x65, 0x37, 0xd1, 0x4b, 0x39, 0xc4, 0x3c, 0x63, 0x42, 0x04, 0xaa, 0xba, 0x5f, 0x09, 0xec,
	0xa4, 0xbf, 0xad, 0x3e, 0xbf, 0x09, 0x5e, 0x42, 0x20, 0x1e, 0x6a, 0x21, 0x38, 0xc1, 0x42, 0x26,
	0xc3, 0x41, 0x98, 0xe1, 0x3c, 0xd3, 0x06, 0xc3, 0x29, 0x82, 0x31, 0x51, 0x4e, 0x31, 0x51, 0x02,
	0x23, 0x62, 0xe3, 0x57, 0x76, 0x28, 0xce, 0x33, 0x9d, 0x87, 0x30, 0x38, 0xf8, 0xc0, 0x54, 0xf9,
	0x3f, 0xc1, 0xbd, 0x8f, 0x37, 0x04, 0xe1, 0x43, 0xec, 0xe0, 0xb5, 0x4a, 0xfc, 0x7e, 0x4d, 0xb0,
	0x95, 0x5b, 0xcc, 0xf0, 0x96, 0xf7, 0x69, 0x0e, 0x6e, 0x44, 0xe1, 0x39, 0x8f, 0x27, 0xf1, 0x9c,
	0x50, 0x4b, 0x1a, 0xd1, 0xf9, 0x1c, 0x0e, 0x56, 0x67, 0x13, 0x83, 0xd5, 0x2a, 0xe0, 0xec, 0x24,
	0xd3, 0xb9, 0x02, 0xbb, 0x87, 0xfe, 0x6f, 0xf5, 0x80, 0xc1, 0xc8, 0xbd, 0x2e, 0x50, 0x4e, 0x85,
	0xbf, 0x4f, 0x76, 0x0a, 0xa9, 0xeb, 0x7b, 0x6c, 0xe7, 0x96, 0x60, 0x2b, 0xdf, 0x4d, 0xb1, 0x90,
	0xd8, 0x42, 0x58, 0x82, 0x10, 0x23, 0x53, 0xfc, 0x4c, 0x7b, 0x74, 0x27, 0xdc, 0x5a, 0x9e, 0x5e,
	0xc4, 0xf6, 0xa0, 0x26, 0xda, 0xc3, 0x63, 0xe0, 0x33, 0xe2, 0xa7, 0xd2, 0x91, 0x17, 0xea, 0x70,
	0x3b, 0x69, 0x1c, 0x25, 0x78, 0x65, 0x6d, 0x8d, 0x23, 0xc4, 0x78, 0xbe, 0x2b, 0x00, 0x18, 0xbd,
	0xee, 0x8a, 0xe5, 0xe2, 0x99, 0x17, 0x63, 0xa5, 0x72, 0x11, 0x3f, 0xe4, 0x6d, 0xe5, 0xcf, 0xd8,
	0x2e, 0xde, 0x27, 0x3d, 0x41, 0x1c, 0xc5, 0xbd, 0x01, 0xd6, 0x13, 0x2c, 0x68, 0xa1, 0x3d, 0x73,
	0x38, 0xb2, 0x3e, 0x0d, 0xf2, 0xc1, 0x77, 0x32, 0x78, 0x4f, 0xc7, 0xdd, 0xb9, 0xd8, 0xbd, 0x09,
	0xfd, 0x4f, 0x3c, 0x80, 0xd1, 0x8b, 0xba, 0x58, 0x88, 0x31, 0xaf, 0xf4, 0x62, 0x72, 0x9f, 0x2f,
	0xf3, 0xb6, 0xf2, 0x75, 0x36, 0x4a, 0x3e, 0xf7, 0x09, 0xa1, 0xb4, 0x87, 0x4e, 0x7e, 0x82, 0x75,
	0xe4, 0xe9, 0x03, 0x18, 0xa3, 0x07, 0xe3, 0x30, 0x4a, 0xa6, 0x3f, 0x57, 0x46, 0xbb, 0xa4, 0x6c,
	0xf8, 0x07, 0x3d, 0xee, 0x3d, 0x85, 0xb4, 0x6b, 0x96, 0x58, 0x07, 0xa1, 0xe3, 0xaf, 0x91, 0x12,
	0x8f, 0xb4, 0xd9, 0xca, 0xf3, 0xa6, 0x77, 0x04, 0x5b, 0xf9, 0x93, 0x14, 0x99, 0x12, 0xee, 0x78,
	0x25, 0x6f, 0xbc, 0x52, 0xb3, 0xfb, 0x50, 0x94, 0x9d, 0x4a, 0x4a, 0xaf, 0xa1, 0x77, 0x41, 0x0b,
	0xb7, 0x35, 0xec, 0x5e, 0x17, 0x12, 0xdd, 0xeb, 0x13, 0xe0, 0x84, 0xa8, 0xa4, 0x4b, 0x98, 0x88,
	0xd1, 0x42, 0x27, 0x9d, 0xec, 0x2c, 0x9c, 0xe9, 0xb4, 0x0d, 0xf9, 0x53, 0x54, 0x14, 0x9e, 0xe7,
	0x73, 0xc7, 0x7f, 0xd8, 0x6b, 0x2b, 0xbf, 0xd2, 0x0b, 0x84, 0xa2, 0x3c, 0x06, 0xaf, 0x82, 0xed,
	0x54, 0xe8, 0x24, 0x65, 0x66, 0x0a, 0x9e, 0x9a, 0x31, 0xf4, 0x65, 0xad, 0x82, 0x30, 0x49, 0x55,
	0x5d, 0xc5, 0xb9, 0xdc, 0xd5, 0x8b, 0x6c, 0x5a, 0x55, 0xb3, 0x56, 0x24, 0x4b, 0xf7, 0xae, 0xc5,
	0x09, 0x74, 0xb3, 0x14, 0xe8, 0x46, 0x2e, 0xae, 0x1b, 0x97, 0xc7, 0xe4, 0xb1, 0x51, 0x8e, 0x2f,
	0x0e, 0xa8, 0xf5, 0x7a, 0x55, 0xc3, 0x84, 0xb6, 0x70, 0xd5, 0xd4, 0x6b, 0x13, 0x91, 0x27, 0xb3,
	0xa7, 0x1d, 0x65, 0x8e, 0x3b, 0xd0, 0xd0, 0x94, 0x89, 0xe1, 0xac, 0xe8, 0x08, 0x6b, 0xb3, 0xac,
	0xd7, 0x2c, 0x55, 0xf3, 0x68, 0x74, 0xc3, 0x44, 0xc6, 0xb0, 0xe9, 0x10, 0xe5, 0x0a, 0xaa, 0x59,
	0x9a, 0x5a, 0x35, 0xe5, 0xd9, 0x19, 0xa7, 0xb7, 0x43, 0x70, 0x0a, 0x4c, 0x46, 0x7b, 0x73, 0xea,
	0xfb, 0x5d, 0x2d, 0xaa, 0x0e, 0x09, 0x44, 0xc6, 0x92, 0x66, 0x9a, 0x8e, 0xe5, 0x59, 0x7a, 0x73,
	0xc8, 0x41, 0x18, 0xe5, 0xd9, 0xf6, 0xc1, 0x9e, 0x3d, 0x05, 0x84, 0x23, 0x63, 0x63, 0x4e, 0x30,
	0x0f, 0x37, 0x51, 0x6b, 0x52, 0xa3, 0x86, 0x3e, 0x5f, 0x47, 0x65, 0xc7, 0x34, 0x91, 0x61, 0xe8,
	0x86, 0xa4, 0x97, 0xcb, 0x0d, 0x03, 0x55, 0x24, 0x1d, 0xf7, 0x68, 0x22, 0x63, 0x19, 0x19, 0x92,
	0xa9, 0x55, 0x90, 0x3c, 0x3b, 0xe7, 0xbc, 0x7a, 0x0c, 0x3e, 0x0d, 0xce, 0xb3, 0x55, 0x53, 0xd2,
	0x2b, 0x2b, 0xce, 0xeb, 0x97, 0xd4, 0x2a, 0x9e, 0x45, 0x4e, 0xd7, 0x7a, 0x60, 0x9c, 0x4b, 0xaa,
	0x55, 0x5e, 0x74, 0x9b, 0x90, 0x37, 0x7b, 0x6d, 0xe5, 0x8b, 0xef, 0x72, 0xe0, 0x3f, 0x38, 0x62,
	0x97, 0x6f, 0x73, 0x7d, 0x02, 0xbc, 0xc1, 0x29, 0x9e, 0x16, 0x74, 0x06, 0xc6, 0xcd, 0x41, 0x9b,
	0xce, 0x6b, 0x0d, 0x64, 0x5a, 0x86, 0xe6, 0xf6, 0xea, 0x28, 0xb0, 0x61, 0x2d, 0x3a, 0x50, 0x94,
	0xdd, 0x2f, 0x17, 0x47, 0xdf, 0xa6, 0x2c, 0x9d, 0x75, 0x8c, 0xc9, 0x2f, 0x70, 0x74, 0x5d, 0x37,
	0x74, 0xf7, 0x1d, 0xf3, 0x7a, 0xb5, 0xaa, 0x5f, 0xc7, 0x1a, 0x77, 0x64, 0xd0, 0x0d, 0xed, 0x17,
	0x70, 0x8d, 0x13, 0x7a, 0x05, 0x49, 0xf3, 0x55, 0xfd, 0xba, 0x3c, 0xd2, 0x53, 0xec, 0x73, 0xa6,
	0x88, 0xd3, 0xc5, 0x44, 0xbf, 0xfb, 0xdf, 0x1b, 0xeb, 0xd7, 0x50, 0xed, 0xf8, 0x04, 0xd8, 0xe9,
	0x39, 0x63, 0xb8, 0x79, 0xd2, 0x50, 0x6b, 0x96, 0x29, 0xb9, 0x7f, 0x79, 0x28, 0x02, 0x11, 0xcf,
	0x32, 0x08, 0xbd, 0x42, 0xe7, 0x0f, 0xaf, 0xec, 0x67, 0xb8, 0x99, 0xdc, 0x45, 0xea, 0x7f, 0xe2,
	0xfc, 0x05, 0x2e, 0xf7, 0x3c, 0x97, 0xfb, 0x2a, 0x97, 0x7b, 0x8d, 0xcb, 0xfd, 0x84, 0xcb, 0xfd,
	0x0f, 0x97, 0xfb, 0x31, 0x9f, 0x2b, 0xf5, 0xba, 0x91, 0xe9, 0xd0, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x00, 0xfa, 0x45, 0x38, 0x7a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CounterpartyMetadataServiceClient is the client API for CounterpartyMetadataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CounterpartyMetadataServiceClient interface {
	// CreateCorporateLocation creates a new corporate location.
	CreateCorporateLocation(ctx context.Context, in *CreateCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error)
	// GetCorporateLocation retrieves a corporate location.
	GetCorporateLocation(ctx context.Context, in *GetCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error)
	// GetCorporateLocations retrieves all corporate locations.
	GetCorporateLocations(ctx context.Context, in *GetCorporateLocationsRequest, opts ...grpc.CallOption) (*GetCorporateLocationsResponse, error)
	// UpdateCorporateLocation updates the corporate location.
	UpdateCorporateLocation(ctx context.Context, in *UpdateCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error)
	// DeleteCorporateLocation deletes the corporate location.
	DeleteCorporateLocation(ctx context.Context, in *DeleteCorporateLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateMoreInfo creates a new more info.
	CreateMoreInfo(ctx context.Context, in *CreateMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error)
	// GetMoreInfo retrieves a more info.
	GetMoreInfo(ctx context.Context, in *GetMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error)
	// GetMoreInfos retrieves all more infos.
	GetMoreInfos(ctx context.Context, in *GetMoreInfosRequest, opts ...grpc.CallOption) (*GetMoreInfosResponse, error)
	// UpdateMoreInfo updates the more info.
	UpdateMoreInfo(ctx context.Context, in *UpdateMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error)
	// DeleteMoreInfo deletes the more info.
	DeleteMoreInfo(ctx context.Context, in *DeleteMoreInfoRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateOpenCorporatesURL creates a new open corporates url.
	CreateOpenCorporatesURL(ctx context.Context, in *CreateOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error)
	// GetOpenCorporatesURL retrieves a open corporates url.
	GetOpenCorporatesURL(ctx context.Context, in *GetOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error)
	// GetOpenCorporatesURLs retrieves all open corporates urls.
	GetOpenCorporatesURLs(ctx context.Context, in *GetOpenCorporatesURLsRequest, opts ...grpc.CallOption) (*GetOpenCorporatesURLsResponse, error)
	// UpdateOpenCorporatesURL updates the open corporates url.
	UpdateOpenCorporatesURL(ctx context.Context, in *UpdateOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error)
	// DeleteOpenCorporatesURL deletes the open corporates url.
	DeleteOpenCorporatesURL(ctx context.Context, in *DeleteOpenCorporatesURLRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateURL creates a new url.
	CreateURL(ctx context.Context, in *CreateURLRequest, opts ...grpc.CallOption) (*URL, error)
	// GetURL retrieves a url.
	GetURL(ctx context.Context, in *GetURLRequest, opts ...grpc.CallOption) (*URL, error)
	// GetURLs retrieves all urls.
	GetURLs(ctx context.Context, in *GetURLsRequest, opts ...grpc.CallOption) (*GetURLsResponse, error)
	// UpdateURL updates the url.
	UpdateURL(ctx context.Context, in *UpdateURLRequest, opts ...grpc.CallOption) (*URL, error)
	// DeleteURL deletes the url.
	DeleteURL(ctx context.Context, in *DeleteURLRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreateImageURL creates a new image url.
	CreateImageURL(ctx context.Context, in *CreateImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error)
	// GetImageURL retrieves a image url.
	GetImageURL(ctx context.Context, in *GetImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error)
	// GetImageURLs retrieves all image urls.
	GetImageURLs(ctx context.Context, in *GetImageURLsRequest, opts ...grpc.CallOption) (*GetImageURLsResponse, error)
	// UpdateImageURL updates the image url.
	UpdateImageURL(ctx context.Context, in *UpdateImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error)
	// DeleteImageURL deletes the image url.
	DeleteImageURL(ctx context.Context, in *DeleteImageURLRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreatePhysicalLocation creates a new physical location.
	CreatePhysicalLocation(ctx context.Context, in *CreatePhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error)
	// GetPhysicalLocation retrieves a physical location.
	GetPhysicalLocation(ctx context.Context, in *GetPhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error)
	// GetPhysicalLocations retrieves all physical locations.
	GetPhysicalLocations(ctx context.Context, in *GetPhysicalLocationsRequest, opts ...grpc.CallOption) (*GetPhysicalLocationsResponse, error)
	// UpdatePhysicalLocation updates the physical location.
	UpdatePhysicalLocation(ctx context.Context, in *UpdatePhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error)
	// DeletePhysicalLocation deletes the physical location.
	DeletePhysicalLocation(ctx context.Context, in *DeletePhysicalLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreatePublicAlias creates a new public alias.
	CreatePublicAlias(ctx context.Context, in *CreatePublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error)
	// GetPublicAlias retrieves a public alias.
	GetPublicAlias(ctx context.Context, in *GetPublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error)
	// GetPublicAliases retrieves all public aliases.
	GetPublicAliases(ctx context.Context, in *GetPublicAliasesRequest, opts ...grpc.CallOption) (*GetPublicAliasesResponse, error)
	// UpdatePublicAlias updates the public alias.
	UpdatePublicAlias(ctx context.Context, in *UpdatePublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error)
	// DeletePublicAlias deletes the public alias.
	DeletePublicAlias(ctx context.Context, in *DeletePublicAliasRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CreatePrivateAlias creates a new private alias.
	CreatePrivateAlias(ctx context.Context, in *CreatePrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error)
	// GetPrivateAlias retrieves a private alias.
	GetPrivateAlias(ctx context.Context, in *GetPrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error)
	// GetPrivateAliases retrieves all private aliases.
	GetPrivateAliases(ctx context.Context, in *GetPrivateAliasesRequest, opts ...grpc.CallOption) (*GetPrivateAliasesResponse, error)
	// UpdatePrivateAlias updates the private alias.
	UpdatePrivateAlias(ctx context.Context, in *UpdatePrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error)
	// DeletePrivateAlias deletes the private alias.
	DeletePrivateAlias(ctx context.Context, in *DeletePrivateAliasRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetOtherAccountMetadata retrieves other accounts metadata.
	GetOtherAccountMetadata(ctx context.Context, in *GetOtherAccountMetadataRequest, opts ...grpc.CallOption) (*GetOtherAccountMetadataResponse, error)
}

type counterpartyMetadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewCounterpartyMetadataServiceClient(cc *grpc.ClientConn) CounterpartyMetadataServiceClient {
	return &counterpartyMetadataServiceClient{cc}
}

func (c *counterpartyMetadataServiceClient) CreateCorporateLocation(ctx context.Context, in *CreateCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error) {
	out := new(CorporateLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreateCorporateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetCorporateLocation(ctx context.Context, in *GetCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error) {
	out := new(CorporateLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetCorporateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetCorporateLocations(ctx context.Context, in *GetCorporateLocationsRequest, opts ...grpc.CallOption) (*GetCorporateLocationsResponse, error) {
	out := new(GetCorporateLocationsResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetCorporateLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdateCorporateLocation(ctx context.Context, in *UpdateCorporateLocationRequest, opts ...grpc.CallOption) (*CorporateLocation, error) {
	out := new(CorporateLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdateCorporateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeleteCorporateLocation(ctx context.Context, in *DeleteCorporateLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeleteCorporateLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreateMoreInfo(ctx context.Context, in *CreateMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error) {
	out := new(MoreInfo)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreateMoreInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetMoreInfo(ctx context.Context, in *GetMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error) {
	out := new(MoreInfo)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetMoreInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetMoreInfos(ctx context.Context, in *GetMoreInfosRequest, opts ...grpc.CallOption) (*GetMoreInfosResponse, error) {
	out := new(GetMoreInfosResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetMoreInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdateMoreInfo(ctx context.Context, in *UpdateMoreInfoRequest, opts ...grpc.CallOption) (*MoreInfo, error) {
	out := new(MoreInfo)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdateMoreInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeleteMoreInfo(ctx context.Context, in *DeleteMoreInfoRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeleteMoreInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreateOpenCorporatesURL(ctx context.Context, in *CreateOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error) {
	out := new(OpenCorporatesURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreateOpenCorporatesURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetOpenCorporatesURL(ctx context.Context, in *GetOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error) {
	out := new(OpenCorporatesURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetOpenCorporatesURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetOpenCorporatesURLs(ctx context.Context, in *GetOpenCorporatesURLsRequest, opts ...grpc.CallOption) (*GetOpenCorporatesURLsResponse, error) {
	out := new(GetOpenCorporatesURLsResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetOpenCorporatesURLs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdateOpenCorporatesURL(ctx context.Context, in *UpdateOpenCorporatesURLRequest, opts ...grpc.CallOption) (*OpenCorporatesURL, error) {
	out := new(OpenCorporatesURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdateOpenCorporatesURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeleteOpenCorporatesURL(ctx context.Context, in *DeleteOpenCorporatesURLRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeleteOpenCorporatesURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreateURL(ctx context.Context, in *CreateURLRequest, opts ...grpc.CallOption) (*URL, error) {
	out := new(URL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreateURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetURL(ctx context.Context, in *GetURLRequest, opts ...grpc.CallOption) (*URL, error) {
	out := new(URL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetURLs(ctx context.Context, in *GetURLsRequest, opts ...grpc.CallOption) (*GetURLsResponse, error) {
	out := new(GetURLsResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetURLs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdateURL(ctx context.Context, in *UpdateURLRequest, opts ...grpc.CallOption) (*URL, error) {
	out := new(URL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdateURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeleteURL(ctx context.Context, in *DeleteURLRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeleteURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreateImageURL(ctx context.Context, in *CreateImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error) {
	out := new(ImageURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreateImageURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetImageURL(ctx context.Context, in *GetImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error) {
	out := new(ImageURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetImageURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetImageURLs(ctx context.Context, in *GetImageURLsRequest, opts ...grpc.CallOption) (*GetImageURLsResponse, error) {
	out := new(GetImageURLsResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetImageURLs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdateImageURL(ctx context.Context, in *UpdateImageURLRequest, opts ...grpc.CallOption) (*ImageURL, error) {
	out := new(ImageURL)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdateImageURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeleteImageURL(ctx context.Context, in *DeleteImageURLRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeleteImageURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreatePhysicalLocation(ctx context.Context, in *CreatePhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error) {
	out := new(PhysicalLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreatePhysicalLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPhysicalLocation(ctx context.Context, in *GetPhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error) {
	out := new(PhysicalLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPhysicalLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPhysicalLocations(ctx context.Context, in *GetPhysicalLocationsRequest, opts ...grpc.CallOption) (*GetPhysicalLocationsResponse, error) {
	out := new(GetPhysicalLocationsResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPhysicalLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdatePhysicalLocation(ctx context.Context, in *UpdatePhysicalLocationRequest, opts ...grpc.CallOption) (*PhysicalLocation, error) {
	out := new(PhysicalLocation)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdatePhysicalLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeletePhysicalLocation(ctx context.Context, in *DeletePhysicalLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeletePhysicalLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreatePublicAlias(ctx context.Context, in *CreatePublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error) {
	out := new(PublicAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreatePublicAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPublicAlias(ctx context.Context, in *GetPublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error) {
	out := new(PublicAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPublicAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPublicAliases(ctx context.Context, in *GetPublicAliasesRequest, opts ...grpc.CallOption) (*GetPublicAliasesResponse, error) {
	out := new(GetPublicAliasesResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPublicAliases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdatePublicAlias(ctx context.Context, in *UpdatePublicAliasRequest, opts ...grpc.CallOption) (*PublicAlias, error) {
	out := new(PublicAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdatePublicAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeletePublicAlias(ctx context.Context, in *DeletePublicAliasRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeletePublicAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) CreatePrivateAlias(ctx context.Context, in *CreatePrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error) {
	out := new(PrivateAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/CreatePrivateAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPrivateAlias(ctx context.Context, in *GetPrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error) {
	out := new(PrivateAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPrivateAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetPrivateAliases(ctx context.Context, in *GetPrivateAliasesRequest, opts ...grpc.CallOption) (*GetPrivateAliasesResponse, error) {
	out := new(GetPrivateAliasesResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetPrivateAliases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) UpdatePrivateAlias(ctx context.Context, in *UpdatePrivateAliasRequest, opts ...grpc.CallOption) (*PrivateAlias, error) {
	out := new(PrivateAlias)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/UpdatePrivateAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) DeletePrivateAlias(ctx context.Context, in *DeletePrivateAliasRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/DeletePrivateAlias", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterpartyMetadataServiceClient) GetOtherAccountMetadata(ctx context.Context, in *GetOtherAccountMetadataRequest, opts ...grpc.CallOption) (*GetOtherAccountMetadataResponse, error) {
	out := new(GetOtherAccountMetadataResponse)
	err := c.cc.Invoke(ctx, "/counterpartymetadata.CounterpartyMetadataService/GetOtherAccountMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CounterpartyMetadataServiceServer is the server API for CounterpartyMetadataService service.
type CounterpartyMetadataServiceServer interface {
	// CreateCorporateLocation creates a new corporate location.
	CreateCorporateLocation(context.Context, *CreateCorporateLocationRequest) (*CorporateLocation, error)
	// GetCorporateLocation retrieves a corporate location.
	GetCorporateLocation(context.Context, *GetCorporateLocationRequest) (*CorporateLocation, error)
	// GetCorporateLocations retrieves all corporate locations.
	GetCorporateLocations(context.Context, *GetCorporateLocationsRequest) (*GetCorporateLocationsResponse, error)
	// UpdateCorporateLocation updates the corporate location.
	UpdateCorporateLocation(context.Context, *UpdateCorporateLocationRequest) (*CorporateLocation, error)
	// DeleteCorporateLocation deletes the corporate location.
	DeleteCorporateLocation(context.Context, *DeleteCorporateLocationRequest) (*empty.Empty, error)
	// CreateMoreInfo creates a new more info.
	CreateMoreInfo(context.Context, *CreateMoreInfoRequest) (*MoreInfo, error)
	// GetMoreInfo retrieves a more info.
	GetMoreInfo(context.Context, *GetMoreInfoRequest) (*MoreInfo, error)
	// GetMoreInfos retrieves all more infos.
	GetMoreInfos(context.Context, *GetMoreInfosRequest) (*GetMoreInfosResponse, error)
	// UpdateMoreInfo updates the more info.
	UpdateMoreInfo(context.Context, *UpdateMoreInfoRequest) (*MoreInfo, error)
	// DeleteMoreInfo deletes the more info.
	DeleteMoreInfo(context.Context, *DeleteMoreInfoRequest) (*empty.Empty, error)
	// CreateOpenCorporatesURL creates a new open corporates url.
	CreateOpenCorporatesURL(context.Context, *CreateOpenCorporatesURLRequest) (*OpenCorporatesURL, error)
	// GetOpenCorporatesURL retrieves a open corporates url.
	GetOpenCorporatesURL(context.Context, *GetOpenCorporatesURLRequest) (*OpenCorporatesURL, error)
	// GetOpenCorporatesURLs retrieves all open corporates urls.
	GetOpenCorporatesURLs(context.Context, *GetOpenCorporatesURLsRequest) (*GetOpenCorporatesURLsResponse, error)
	// UpdateOpenCorporatesURL updates the open corporates url.
	UpdateOpenCorporatesURL(context.Context, *UpdateOpenCorporatesURLRequest) (*OpenCorporatesURL, error)
	// DeleteOpenCorporatesURL deletes the open corporates url.
	DeleteOpenCorporatesURL(context.Context, *DeleteOpenCorporatesURLRequest) (*empty.Empty, error)
	// CreateURL creates a new url.
	CreateURL(context.Context, *CreateURLRequest) (*URL, error)
	// GetURL retrieves a url.
	GetURL(context.Context, *GetURLRequest) (*URL, error)
	// GetURLs retrieves all urls.
	GetURLs(context.Context, *GetURLsRequest) (*GetURLsResponse, error)
	// UpdateURL updates the url.
	UpdateURL(context.Context, *UpdateURLRequest) (*URL, error)
	// DeleteURL deletes the url.
	DeleteURL(context.Context, *DeleteURLRequest) (*empty.Empty, error)
	// CreateImageURL creates a new image url.
	CreateImageURL(context.Context, *CreateImageURLRequest) (*ImageURL, error)
	// GetImageURL retrieves a image url.
	GetImageURL(context.Context, *GetImageURLRequest) (*ImageURL, error)
	// GetImageURLs retrieves all image urls.
	GetImageURLs(context.Context, *GetImageURLsRequest) (*GetImageURLsResponse, error)
	// UpdateImageURL updates the image url.
	UpdateImageURL(context.Context, *UpdateImageURLRequest) (*ImageURL, error)
	// DeleteImageURL deletes the image url.
	DeleteImageURL(context.Context, *DeleteImageURLRequest) (*empty.Empty, error)
	// CreatePhysicalLocation creates a new physical location.
	CreatePhysicalLocation(context.Context, *CreatePhysicalLocationRequest) (*PhysicalLocation, error)
	// GetPhysicalLocation retrieves a physical location.
	GetPhysicalLocation(context.Context, *GetPhysicalLocationRequest) (*PhysicalLocation, error)
	// GetPhysicalLocations retrieves all physical locations.
	GetPhysicalLocations(context.Context, *GetPhysicalLocationsRequest) (*GetPhysicalLocationsResponse, error)
	// UpdatePhysicalLocation updates the physical location.
	UpdatePhysicalLocation(context.Context, *UpdatePhysicalLocationRequest) (*PhysicalLocation, error)
	// DeletePhysicalLocation deletes the physical location.
	DeletePhysicalLocation(context.Context, *DeletePhysicalLocationRequest) (*empty.Empty, error)
	// CreatePublicAlias creates a new public alias.
	CreatePublicAlias(context.Context, *CreatePublicAliasRequest) (*PublicAlias, error)
	// GetPublicAlias retrieves a public alias.
	GetPublicAlias(context.Context, *GetPublicAliasRequest) (*PublicAlias, error)
	// GetPublicAliases retrieves all public aliases.
	GetPublicAliases(context.Context, *GetPublicAliasesRequest) (*GetPublicAliasesResponse, error)
	// UpdatePublicAlias updates the public alias.
	UpdatePublicAlias(context.Context, *UpdatePublicAliasRequest) (*PublicAlias, error)
	// DeletePublicAlias deletes the public alias.
	DeletePublicAlias(context.Context, *DeletePublicAliasRequest) (*empty.Empty, error)
	// CreatePrivateAlias creates a new private alias.
	CreatePrivateAlias(context.Context, *CreatePrivateAliasRequest) (*PrivateAlias, error)
	// GetPrivateAlias retrieves a private alias.
	GetPrivateAlias(context.Context, *GetPrivateAliasRequest) (*PrivateAlias, error)
	// GetPrivateAliases retrieves all private aliases.
	GetPrivateAliases(context.Context, *GetPrivateAliasesRequest) (*GetPrivateAliasesResponse, error)
	// UpdatePrivateAlias updates the private alias.
	UpdatePrivateAlias(context.Context, *UpdatePrivateAliasRequest) (*PrivateAlias, error)
	// DeletePrivateAlias deletes the private alias.
	DeletePrivateAlias(context.Context, *DeletePrivateAliasRequest) (*empty.Empty, error)
	// GetOtherAccountMetadata retrieves other accounts metadata.
	GetOtherAccountMetadata(context.Context, *GetOtherAccountMetadataRequest) (*GetOtherAccountMetadataResponse, error)
}

// UnimplementedCounterpartyMetadataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCounterpartyMetadataServiceServer struct {
}

func (*UnimplementedCounterpartyMetadataServiceServer) CreateCorporateLocation(ctx context.Context, req *CreateCorporateLocationRequest) (*CorporateLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCorporateLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetCorporateLocation(ctx context.Context, req *GetCorporateLocationRequest) (*CorporateLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCorporateLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetCorporateLocations(ctx context.Context, req *GetCorporateLocationsRequest) (*GetCorporateLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCorporateLocations not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdateCorporateLocation(ctx context.Context, req *UpdateCorporateLocationRequest) (*CorporateLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCorporateLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeleteCorporateLocation(ctx context.Context, req *DeleteCorporateLocationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCorporateLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreateMoreInfo(ctx context.Context, req *CreateMoreInfoRequest) (*MoreInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMoreInfo not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetMoreInfo(ctx context.Context, req *GetMoreInfoRequest) (*MoreInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoreInfo not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetMoreInfos(ctx context.Context, req *GetMoreInfosRequest) (*GetMoreInfosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoreInfos not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdateMoreInfo(ctx context.Context, req *UpdateMoreInfoRequest) (*MoreInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMoreInfo not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeleteMoreInfo(ctx context.Context, req *DeleteMoreInfoRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMoreInfo not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreateOpenCorporatesURL(ctx context.Context, req *CreateOpenCorporatesURLRequest) (*OpenCorporatesURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOpenCorporatesURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetOpenCorporatesURL(ctx context.Context, req *GetOpenCorporatesURLRequest) (*OpenCorporatesURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOpenCorporatesURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetOpenCorporatesURLs(ctx context.Context, req *GetOpenCorporatesURLsRequest) (*GetOpenCorporatesURLsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOpenCorporatesURLs not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdateOpenCorporatesURL(ctx context.Context, req *UpdateOpenCorporatesURLRequest) (*OpenCorporatesURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOpenCorporatesURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeleteOpenCorporatesURL(ctx context.Context, req *DeleteOpenCorporatesURLRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOpenCorporatesURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreateURL(ctx context.Context, req *CreateURLRequest) (*URL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetURL(ctx context.Context, req *GetURLRequest) (*URL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetURLs(ctx context.Context, req *GetURLsRequest) (*GetURLsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetURLs not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdateURL(ctx context.Context, req *UpdateURLRequest) (*URL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeleteURL(ctx context.Context, req *DeleteURLRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreateImageURL(ctx context.Context, req *CreateImageURLRequest) (*ImageURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateImageURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetImageURL(ctx context.Context, req *GetImageURLRequest) (*ImageURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImageURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetImageURLs(ctx context.Context, req *GetImageURLsRequest) (*GetImageURLsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetImageURLs not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdateImageURL(ctx context.Context, req *UpdateImageURLRequest) (*ImageURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateImageURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeleteImageURL(ctx context.Context, req *DeleteImageURLRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteImageURL not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreatePhysicalLocation(ctx context.Context, req *CreatePhysicalLocationRequest) (*PhysicalLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePhysicalLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPhysicalLocation(ctx context.Context, req *GetPhysicalLocationRequest) (*PhysicalLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhysicalLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPhysicalLocations(ctx context.Context, req *GetPhysicalLocationsRequest) (*GetPhysicalLocationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPhysicalLocations not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdatePhysicalLocation(ctx context.Context, req *UpdatePhysicalLocationRequest) (*PhysicalLocation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePhysicalLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeletePhysicalLocation(ctx context.Context, req *DeletePhysicalLocationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePhysicalLocation not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreatePublicAlias(ctx context.Context, req *CreatePublicAliasRequest) (*PublicAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePublicAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPublicAlias(ctx context.Context, req *GetPublicAliasRequest) (*PublicAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublicAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPublicAliases(ctx context.Context, req *GetPublicAliasesRequest) (*GetPublicAliasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublicAliases not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdatePublicAlias(ctx context.Context, req *UpdatePublicAliasRequest) (*PublicAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePublicAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeletePublicAlias(ctx context.Context, req *DeletePublicAliasRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePublicAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) CreatePrivateAlias(ctx context.Context, req *CreatePrivateAliasRequest) (*PrivateAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrivateAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPrivateAlias(ctx context.Context, req *GetPrivateAliasRequest) (*PrivateAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivateAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetPrivateAliases(ctx context.Context, req *GetPrivateAliasesRequest) (*GetPrivateAliasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivateAliases not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) UpdatePrivateAlias(ctx context.Context, req *UpdatePrivateAliasRequest) (*PrivateAlias, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePrivateAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) DeletePrivateAlias(ctx context.Context, req *DeletePrivateAliasRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePrivateAlias not implemented")
}
func (*UnimplementedCounterpartyMetadataServiceServer) GetOtherAccountMetadata(ctx context.Context, req *GetOtherAccountMetadataRequest) (*GetOtherAccountMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOtherAccountMetadata not implemented")
}

func RegisterCounterpartyMetadataServiceServer(s *grpc.Server, srv CounterpartyMetadataServiceServer) {
	s.RegisterService(&_CounterpartyMetadataService_serviceDesc, srv)
}

func _CounterpartyMetadataService_CreateCorporateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCorporateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreateCorporateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreateCorporateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreateCorporateLocation(ctx, req.(*CreateCorporateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetCorporateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCorporateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetCorporateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetCorporateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetCorporateLocation(ctx, req.(*GetCorporateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetCorporateLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCorporateLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetCorporateLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetCorporateLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetCorporateLocations(ctx, req.(*GetCorporateLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdateCorporateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCorporateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdateCorporateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdateCorporateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdateCorporateLocation(ctx, req.(*UpdateCorporateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeleteCorporateLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCorporateLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeleteCorporateLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeleteCorporateLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeleteCorporateLocation(ctx, req.(*DeleteCorporateLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreateMoreInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMoreInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreateMoreInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreateMoreInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreateMoreInfo(ctx, req.(*CreateMoreInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetMoreInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoreInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetMoreInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetMoreInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetMoreInfo(ctx, req.(*GetMoreInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetMoreInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoreInfosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetMoreInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetMoreInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetMoreInfos(ctx, req.(*GetMoreInfosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdateMoreInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMoreInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdateMoreInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdateMoreInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdateMoreInfo(ctx, req.(*UpdateMoreInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeleteMoreInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMoreInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeleteMoreInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeleteMoreInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeleteMoreInfo(ctx, req.(*DeleteMoreInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreateOpenCorporatesURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOpenCorporatesURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreateOpenCorporatesURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreateOpenCorporatesURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreateOpenCorporatesURL(ctx, req.(*CreateOpenCorporatesURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetOpenCorporatesURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpenCorporatesURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetOpenCorporatesURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetOpenCorporatesURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetOpenCorporatesURL(ctx, req.(*GetOpenCorporatesURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetOpenCorporatesURLs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpenCorporatesURLsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetOpenCorporatesURLs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetOpenCorporatesURLs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetOpenCorporatesURLs(ctx, req.(*GetOpenCorporatesURLsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdateOpenCorporatesURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOpenCorporatesURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdateOpenCorporatesURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdateOpenCorporatesURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdateOpenCorporatesURL(ctx, req.(*UpdateOpenCorporatesURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeleteOpenCorporatesURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOpenCorporatesURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeleteOpenCorporatesURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeleteOpenCorporatesURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeleteOpenCorporatesURL(ctx, req.(*DeleteOpenCorporatesURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreateURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreateURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreateURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreateURL(ctx, req.(*CreateURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetURL(ctx, req.(*GetURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetURLs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetURLsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetURLs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetURLs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetURLs(ctx, req.(*GetURLsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdateURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdateURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdateURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdateURL(ctx, req.(*UpdateURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeleteURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeleteURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeleteURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeleteURL(ctx, req.(*DeleteURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreateImageURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateImageURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreateImageURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreateImageURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreateImageURL(ctx, req.(*CreateImageURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetImageURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetImageURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetImageURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetImageURL(ctx, req.(*GetImageURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetImageURLs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageURLsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetImageURLs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetImageURLs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetImageURLs(ctx, req.(*GetImageURLsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdateImageURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateImageURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdateImageURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdateImageURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdateImageURL(ctx, req.(*UpdateImageURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeleteImageURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteImageURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeleteImageURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeleteImageURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeleteImageURL(ctx, req.(*DeleteImageURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreatePhysicalLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePhysicalLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreatePhysicalLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreatePhysicalLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreatePhysicalLocation(ctx, req.(*CreatePhysicalLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPhysicalLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhysicalLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPhysicalLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPhysicalLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPhysicalLocation(ctx, req.(*GetPhysicalLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPhysicalLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhysicalLocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPhysicalLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPhysicalLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPhysicalLocations(ctx, req.(*GetPhysicalLocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdatePhysicalLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePhysicalLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdatePhysicalLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdatePhysicalLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdatePhysicalLocation(ctx, req.(*UpdatePhysicalLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeletePhysicalLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePhysicalLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeletePhysicalLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeletePhysicalLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeletePhysicalLocation(ctx, req.(*DeletePhysicalLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreatePublicAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePublicAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreatePublicAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreatePublicAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreatePublicAlias(ctx, req.(*CreatePublicAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPublicAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPublicAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPublicAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPublicAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPublicAlias(ctx, req.(*GetPublicAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPublicAliases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPublicAliasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPublicAliases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPublicAliases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPublicAliases(ctx, req.(*GetPublicAliasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdatePublicAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePublicAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdatePublicAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdatePublicAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdatePublicAlias(ctx, req.(*UpdatePublicAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeletePublicAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePublicAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeletePublicAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeletePublicAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeletePublicAlias(ctx, req.(*DeletePublicAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_CreatePrivateAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePrivateAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).CreatePrivateAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/CreatePrivateAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).CreatePrivateAlias(ctx, req.(*CreatePrivateAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPrivateAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPrivateAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPrivateAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPrivateAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPrivateAlias(ctx, req.(*GetPrivateAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetPrivateAliases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPrivateAliasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetPrivateAliases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetPrivateAliases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetPrivateAliases(ctx, req.(*GetPrivateAliasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_UpdatePrivateAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePrivateAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).UpdatePrivateAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/UpdatePrivateAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).UpdatePrivateAlias(ctx, req.(*UpdatePrivateAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_DeletePrivateAlias_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePrivateAliasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).DeletePrivateAlias(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/DeletePrivateAlias",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).DeletePrivateAlias(ctx, req.(*DeletePrivateAliasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterpartyMetadataService_GetOtherAccountMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOtherAccountMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterpartyMetadataServiceServer).GetOtherAccountMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterpartymetadata.CounterpartyMetadataService/GetOtherAccountMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterpartyMetadataServiceServer).GetOtherAccountMetadata(ctx, req.(*GetOtherAccountMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CounterpartyMetadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "counterpartymetadata.CounterpartyMetadataService",
	HandlerType: (*CounterpartyMetadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCorporateLocation",
			Handler:    _CounterpartyMetadataService_CreateCorporateLocation_Handler,
		},
		{
			MethodName: "GetCorporateLocation",
			Handler:    _CounterpartyMetadataService_GetCorporateLocation_Handler,
		},
		{
			MethodName: "GetCorporateLocations",
			Handler:    _CounterpartyMetadataService_GetCorporateLocations_Handler,
		},
		{
			MethodName: "UpdateCorporateLocation",
			Handler:    _CounterpartyMetadataService_UpdateCorporateLocation_Handler,
		},
		{
			MethodName: "DeleteCorporateLocation",
			Handler:    _CounterpartyMetadataService_DeleteCorporateLocation_Handler,
		},
		{
			MethodName: "CreateMoreInfo",
			Handler:    _CounterpartyMetadataService_CreateMoreInfo_Handler,
		},
		{
			MethodName: "GetMoreInfo",
			Handler:    _CounterpartyMetadataService_GetMoreInfo_Handler,
		},
		{
			MethodName: "GetMoreInfos",
			Handler:    _CounterpartyMetadataService_GetMoreInfos_Handler,
		},
		{
			MethodName: "UpdateMoreInfo",
			Handler:    _CounterpartyMetadataService_UpdateMoreInfo_Handler,
		},
		{
			MethodName: "DeleteMoreInfo",
			Handler:    _CounterpartyMetadataService_DeleteMoreInfo_Handler,
		},
		{
			MethodName: "CreateOpenCorporatesURL",
			Handler:    _CounterpartyMetadataService_CreateOpenCorporatesURL_Handler,
		},
		{
			MethodName: "GetOpenCorporatesURL",
			Handler:    _CounterpartyMetadataService_GetOpenCorporatesURL_Handler,
		},
		{
			MethodName: "GetOpenCorporatesURLs",
			Handler:    _CounterpartyMetadataService_GetOpenCorporatesURLs_Handler,
		},
		{
			MethodName: "UpdateOpenCorporatesURL",
			Handler:    _CounterpartyMetadataService_UpdateOpenCorporatesURL_Handler,
		},
		{
			MethodName: "DeleteOpenCorporatesURL",
			Handler:    _CounterpartyMetadataService_DeleteOpenCorporatesURL_Handler,
		},
		{
			MethodName: "CreateURL",
			Handler:    _CounterpartyMetadataService_CreateURL_Handler,
		},
		{
			MethodName: "GetURL",
			Handler:    _CounterpartyMetadataService_GetURL_Handler,
		},
		{
			MethodName: "GetURLs",
			Handler:    _CounterpartyMetadataService_GetURLs_Handler,
		},
		{
			MethodName: "UpdateURL",
			Handler:    _CounterpartyMetadataService_UpdateURL_Handler,
		},
		{
			MethodName: "DeleteURL",
			Handler:    _CounterpartyMetadataService_DeleteURL_Handler,
		},
		{
			MethodName: "CreateImageURL",
			Handler:    _CounterpartyMetadataService_CreateImageURL_Handler,
		},
		{
			MethodName: "GetImageURL",
			Handler:    _CounterpartyMetadataService_GetImageURL_Handler,
		},
		{
			MethodName: "GetImageURLs",
			Handler:    _CounterpartyMetadataService_GetImageURLs_Handler,
		},
		{
			MethodName: "UpdateImageURL",
			Handler:    _CounterpartyMetadataService_UpdateImageURL_Handler,
		},
		{
			MethodName: "DeleteImageURL",
			Handler:    _CounterpartyMetadataService_DeleteImageURL_Handler,
		},
		{
			MethodName: "CreatePhysicalLocation",
			Handler:    _CounterpartyMetadataService_CreatePhysicalLocation_Handler,
		},
		{
			MethodName: "GetPhysicalLocation",
			Handler:    _CounterpartyMetadataService_GetPhysicalLocation_Handler,
		},
		{
			MethodName: "GetPhysicalLocations",
			Handler:    _CounterpartyMetadataService_GetPhysicalLocations_Handler,
		},
		{
			MethodName: "UpdatePhysicalLocation",
			Handler:    _CounterpartyMetadataService_UpdatePhysicalLocation_Handler,
		},
		{
			MethodName: "DeletePhysicalLocation",
			Handler:    _CounterpartyMetadataService_DeletePhysicalLocation_Handler,
		},
		{
			MethodName: "CreatePublicAlias",
			Handler:    _CounterpartyMetadataService_CreatePublicAlias_Handler,
		},
		{
			MethodName: "GetPublicAlias",
			Handler:    _CounterpartyMetadataService_GetPublicAlias_Handler,
		},
		{
			MethodName: "GetPublicAliases",
			Handler:    _CounterpartyMetadataService_GetPublicAliases_Handler,
		},
		{
			MethodName: "UpdatePublicAlias",
			Handler:    _CounterpartyMetadataService_UpdatePublicAlias_Handler,
		},
		{
			MethodName: "DeletePublicAlias",
			Handler:    _CounterpartyMetadataService_DeletePublicAlias_Handler,
		},
		{
			MethodName: "CreatePrivateAlias",
			Handler:    _CounterpartyMetadataService_CreatePrivateAlias_Handler,
		},
		{
			MethodName: "GetPrivateAlias",
			Handler:    _CounterpartyMetadataService_GetPrivateAlias_Handler,
		},
		{
			MethodName: "GetPrivateAliases",
			Handler:    _CounterpartyMetadataService_GetPrivateAliases_Handler,
		},
		{
			MethodName: "UpdatePrivateAlias",
			Handler:    _CounterpartyMetadataService_UpdatePrivateAlias_Handler,
		},
		{
			MethodName: "DeletePrivateAlias",
			Handler:    _CounterpartyMetadataService_DeletePrivateAlias_Handler,
		},
		{
			MethodName: "GetOtherAccountMetadata",
			Handler:    _CounterpartyMetadataService_GetOtherAccountMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/counterpartymetadata/all.proto",
}
