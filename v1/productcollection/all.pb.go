// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/productcollection/all.proto

package productcollection

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	product "github.com/openbank/openbank/v1/product"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductCollection struct {
	CollectionCode       string             `protobuf:"bytes,1,opt,name=CollectionCode,json=collection_code,proto3" json:"CollectionCode,omitempty"`
	Products             []*product.Product `protobuf:"bytes,2,rep,name=Products,json=products,proto3" json:"Products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ProductCollection) Reset()         { *m = ProductCollection{} }
func (m *ProductCollection) String() string { return proto.CompactTextString(m) }
func (*ProductCollection) ProtoMessage()    {}
func (*ProductCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_62bb3483d57949fb, []int{0}
}

func (m *ProductCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductCollection.Unmarshal(m, b)
}
func (m *ProductCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductCollection.Marshal(b, m, deterministic)
}
func (m *ProductCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductCollection.Merge(m, src)
}
func (m *ProductCollection) XXX_Size() int {
	return xxx_messageInfo_ProductCollection.Size(m)
}
func (m *ProductCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductCollection.DiscardUnknown(m)
}

var xxx_messageInfo_ProductCollection proto.InternalMessageInfo

func (m *ProductCollection) GetCollectionCode() string {
	if m != nil {
		return m.CollectionCode
	}
	return ""
}

func (m *ProductCollection) GetProducts() []*product.Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type CreateProductCollectionRequest struct {
	BankID               string             `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CollectionCode       string             `protobuf:"bytes,2,opt,name=CollectionCode,json=collection_code,proto3" json:"CollectionCode,omitempty"`
	ProductCollection    *ProductCollection `protobuf:"bytes,3,opt,name=ProductCollection,json=product_collection,proto3" json:"ProductCollection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateProductCollectionRequest) Reset()         { *m = CreateProductCollectionRequest{} }
func (m *CreateProductCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProductCollectionRequest) ProtoMessage()    {}
func (*CreateProductCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62bb3483d57949fb, []int{1}
}

func (m *CreateProductCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProductCollectionRequest.Unmarshal(m, b)
}
func (m *CreateProductCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProductCollectionRequest.Marshal(b, m, deterministic)
}
func (m *CreateProductCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProductCollectionRequest.Merge(m, src)
}
func (m *CreateProductCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProductCollectionRequest.Size(m)
}
func (m *CreateProductCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProductCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProductCollectionRequest proto.InternalMessageInfo

func (m *CreateProductCollectionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateProductCollectionRequest) GetCollectionCode() string {
	if m != nil {
		return m.CollectionCode
	}
	return ""
}

func (m *CreateProductCollectionRequest) GetProductCollection() *ProductCollection {
	if m != nil {
		return m.ProductCollection
	}
	return nil
}

type UpdateProductCollectionRequest struct {
	BankID               string             `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CollectionCode       string             `protobuf:"bytes,2,opt,name=CollectionCode,json=collection_code,proto3" json:"CollectionCode,omitempty"`
	ProductCollection    *ProductCollection `protobuf:"bytes,3,opt,name=ProductCollection,json=product_collection,proto3" json:"ProductCollection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateProductCollectionRequest) Reset()         { *m = UpdateProductCollectionRequest{} }
func (m *UpdateProductCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProductCollectionRequest) ProtoMessage()    {}
func (*UpdateProductCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62bb3483d57949fb, []int{2}
}

func (m *UpdateProductCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateProductCollectionRequest.Unmarshal(m, b)
}
func (m *UpdateProductCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateProductCollectionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateProductCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProductCollectionRequest.Merge(m, src)
}
func (m *UpdateProductCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateProductCollectionRequest.Size(m)
}
func (m *UpdateProductCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProductCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProductCollectionRequest proto.InternalMessageInfo

func (m *UpdateProductCollectionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *UpdateProductCollectionRequest) GetCollectionCode() string {
	if m != nil {
		return m.CollectionCode
	}
	return ""
}

func (m *UpdateProductCollectionRequest) GetProductCollection() *ProductCollection {
	if m != nil {
		return m.ProductCollection
	}
	return nil
}

type DeleteProductCollectionRequest struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CollectionCode       string   `protobuf:"bytes,2,opt,name=CollectionCode,json=collection_code,proto3" json:"CollectionCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProductCollectionRequest) Reset()         { *m = DeleteProductCollectionRequest{} }
func (m *DeleteProductCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductCollectionRequest) ProtoMessage()    {}
func (*DeleteProductCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62bb3483d57949fb, []int{3}
}

func (m *DeleteProductCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProductCollectionRequest.Unmarshal(m, b)
}
func (m *DeleteProductCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProductCollectionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProductCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProductCollectionRequest.Merge(m, src)
}
func (m *DeleteProductCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProductCollectionRequest.Size(m)
}
func (m *DeleteProductCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProductCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProductCollectionRequest proto.InternalMessageInfo

func (m *DeleteProductCollectionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *DeleteProductCollectionRequest) GetCollectionCode() string {
	if m != nil {
		return m.CollectionCode
	}
	return ""
}

type GetProductCollectionRequest struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	CollectionCode       string   `protobuf:"bytes,2,opt,name=CollectionCode,json=collection_code,proto3" json:"CollectionCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProductCollectionRequest) Reset()         { *m = GetProductCollectionRequest{} }
func (m *GetProductCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetProductCollectionRequest) ProtoMessage()    {}
func (*GetProductCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_62bb3483d57949fb, []int{4}
}

func (m *GetProductCollectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProductCollectionRequest.Unmarshal(m, b)
}
func (m *GetProductCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProductCollectionRequest.Marshal(b, m, deterministic)
}
func (m *GetProductCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProductCollectionRequest.Merge(m, src)
}
func (m *GetProductCollectionRequest) XXX_Size() int {
	return xxx_messageInfo_GetProductCollectionRequest.Size(m)
}
func (m *GetProductCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProductCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProductCollectionRequest proto.InternalMessageInfo

func (m *GetProductCollectionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetProductCollectionRequest) GetCollectionCode() string {
	if m != nil {
		return m.CollectionCode
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductCollection)(nil), "productcollection.ProductCollection")
	proto.RegisterType((*CreateProductCollectionRequest)(nil), "productcollection.CreateProductCollectionRequest")
	proto.RegisterType((*UpdateProductCollectionRequest)(nil), "productcollection.UpdateProductCollectionRequest")
	proto.RegisterType((*DeleteProductCollectionRequest)(nil), "productcollection.DeleteProductCollectionRequest")
	proto.RegisterType((*GetProductCollectionRequest)(nil), "productcollection.GetProductCollectionRequest")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/productcollection/all.proto", fileDescriptor_62bb3483d57949fb)
}

var fileDescriptor_62bb3483d57949fb = []byte{
	// 1219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0x51, 0x6f, 0x13, 0xc7,
	0x16, 0xde, 0x5d, 0x73, 0x43, 0x18, 0x24, 0x2e, 0x8c, 0xae, 0x20, 0x72, 0xee, 0x45, 0xa3, 0x70,
	0xa5, 0xb8, 0x29, 0x99, 0xb5, 0x4d, 0x5a, 0x20, 0xa5, 0xaa, 0x9c, 0x84, 0xd2, 0x44, 0x54, 0xb5,
	0xdc, 0x82, 0x2a, 0x24, 0x14, 0x8d, 0x77, 0x8f, 0xed, 0x25, 0xeb, 0x99, 0xed, 0xcc, 0x6c, 0x42,
	0x8a, 0x50, 0x29, 0x4f, 0xa8, 0x42, 0x88, 0xa6, 0x4f, 0xfd, 0x27, 0x7d, 0xea, 0x53, 0x91, 0xfa,
	0x50, 0xa9, 0x55, 0x79, 0xa9, 0xaa, 0xbe, 0xb5, 0x3f, 0xa2, 0xea, 0x53, 0x35, 0xbb, 0x1b, 0xdb,
	0xd1, 0xae, 0x43, 0x10, 0x48, 0x48, 0x7d, 0x8a, 0x77, 0xce, 0x9c, 0xef, 0x9c, 0x33, 0xdf, 0x99,
	0x6f, 0x4e, 0xd0, 0x5b, 0xdd, 0x40, 0xf7, 0xe2, 0x36, 0xf5, 0x44, 0xdf, 0x15, 0x11, 0xf0, 0x36,
	0xe3, 0x1b, 0xc3, 0x1f, 0x9b, 0x35, 0x37, 0x92, 0xc2, 0x8f, 0x3d, 0xed, 0x89, 0x30, 0x04, 0x4f,
	0x07, 0x82, 0xbb, 0x2c, 0x0c, 0x69, 0x24, 0x85, 0x16, 0xf8, 0x44, 0xce, 0x58, 0xfe, 0x6f, 0x57,
	0x88, 0x6e, 0x08, 0x2e, 0x8b, 0x02, 0x97, 0x71, 0x2e, 0x34, 0x33, 0xcb, 0x2a, 0x75, 0x28, 0x9f,
	0x4d, 0xfe, 0x78, 0xf3, 0x5d, 0xe0, 0xf3, 0x6a, 0x8b, 0x75, 0xbb, 0x20, 0x5d, 0x11, 0x25, 0x3b,
	0x0a, 0x76, 0x4f, 0x67, 0x58, 0xc9, 0x57, 0x3b, 0xee, 0xb8, 0xd0, 0x8f, 0xf4, 0x76, 0x66, 0xac,
	0x1d, 0x30, 0xf1, 0x61, 0xba, 0x33, 0x5f, 0xd8, 0xe8, 0x44, 0x33, 0x5d, 0x5d, 0x1e, 0x64, 0x8c,
	0xcf, 0xa1, 0x63, 0xc3, 0xaf, 0x65, 0xe1, 0xc3, 0x94, 0x4d, 0xec, 0xca, 0x91, 0x25, 0x34, 0x69,
	0x4d, 0x59, 0x15, 0xab, 0x6a, 0x35, 0xad, 0xd6, 0xbf, 0x87, 0x15, 0xae, 0x7b, 0xc2, 0x07, 0x7c,
	0x01, 0x4d, 0x66, 0x48, 0x6a, 0xca, 0x21, 0xa5, 0xca, 0xd1, 0xfa, 0x71, 0x9a, 0x05, 0xa4, 0x99,
	0x61, 0x0f, 0xc0, 0x64, 0x66, 0x54, 0x8b, 0x13, 0x93, 0xd6, 0x71, 0x6b, 0xca, 0x9a, 0xf9, 0xdd,
	0x46, 0xa7, 0x97, 0x25, 0x30, 0x0d, 0xb9, 0x94, 0x5a, 0xf0, 0x49, 0x0c, 0x4a, 0xe3, 0x33, 0x68,
	0x62, 0x89, 0xf1, 0x8d, 0xd5, 0x95, 0x82, 0x8c, 0x0e, 0x9b, 0x32, 0xd7, 0x03, 0xbf, 0x20, 0x7d,
	0xe7, 0xd9, 0xe9, 0xaf, 0x17, 0x1c, 0xc4, 0x54, 0x89, 0xd8, 0x95, 0xa3, 0xf5, 0xff, 0xd3, 0x1c,
	0xa9, 0x34, 0xb7, 0x77, 0x0f, 0x3a, 0xce, 0x1c, 0xd6, 0x87, 0x1e, 0x7b, 0xaa, 0xbc, 0x16, 0xf9,
	0xff, 0xf0, 0x2a, 0xef, 0xdb, 0xe8, 0xf4, 0x0a, 0x84, 0xf0, 0x2a, 0xaa, 0x1c, 0x24, 0xf1, 0x19,
	0x9a, 0xbe, 0x02, 0xfa, 0xd5, 0x25, 0x50, 0xff, 0xf6, 0x18, 0x9a, 0xca, 0x85, 0xff, 0x10, 0xe4,
	0x66, 0xe0, 0x01, 0x7e, 0x5a, 0x42, 0xa7, 0xc6, 0xb4, 0x3b, 0xae, 0x15, 0x90, 0xb1, 0xff, 0xd5,
	0x28, 0x1f, 0x88, 0xbf, 0x99, 0x5f, 0x9d, 0x9d, 0xc6, 0x23, 0x07, 0xe1, 0xcc, 0x42, 0x46, 0x62,
	0x4e, 0xa7, 0x01, 0x08, 0x23, 0x19, 0x10, 0x19, 0x11, 0xb1, 0x0b, 0xa9, 0x51, 0x11, 0x46, 0x38,
	0x6c, 0x15, 0xec, 0x20, 0x8c, 0xfb, 0x44, 0x82, 0x8e, 0x25, 0x57, 0x44, 0xf7, 0x80, 0x88, 0xf6,
	0x2d, 0xf0, 0x34, 0x5d, 0xeb, 0xa0, 0x52, 0xbd, 0x5a, 0xc3, 0xeb, 0x68, 0x36, 0x97, 0x0d, 0xf1,
	0x12, 0x50, 0x9f, 0xa8, 0xd8, 0xf3, 0x40, 0xa9, 0x4e, 0x1c, 0x86, 0xdb, 0x14, 0x2f, 0xa0, 0x7a,
	0xb9, 0x7a, 0xc6, 0xf5, 0xa1, 0x13, 0xf0, 0x20, 0x55, 0xc2, 0x5c, 0x69, 0x39, 0xac, 0xf6, 0x45,
	0x74, 0x1e, 0x4d, 0x7c, 0xd0, 0x88, 0x75, 0xaf, 0x8e, 0xe7, 0xd1, 0xeb, 0x3d, 0xad, 0x23, 0xb5,
	0xe8, 0xba, 0x2c, 0xd6, 0x3d, 0xda, 0xe6, 0x1b, 0x54, 0x8b, 0x3c, 0x0a, 0xdd, 0x92, 0x81, 0x86,
	0xfb, 0x4f, 0xff, 0xf8, 0xca, 0xb9, 0xb4, 0x68, 0xcf, 0xcd, 0x9c, 0x37, 0x2a, 0x69, 0x98, 0x57,
	0xee, 0x9d, 0xb4, 0x35, 0xee, 0xee, 0x3a, 0xcd, 0x0f, 0xbd, 0x94, 0x7b, 0x67, 0x6f, 0x4b, 0xdc,
	0x7d, 0xe0, 0x58, 0x8f, 0x9d, 0xa4, 0x1b, 0xf0, 0xe7, 0x87, 0xd0, 0x7f, 0x8a, 0x9a, 0x0e, 0xd3,
	0x02, 0x7e, 0xf6, 0xe9, 0xce, 0x03, 0xf2, 0xf9, 0xa8, 0xb4, 0xd3, 0x78, 0x52, 0xcc, 0xe7, 0x6c,
	0x0b, 0xb4, 0x0c, 0x60, 0x13, 0x8a, 0xd8, 0x0a, 0x78, 0x47, 0xc8, 0x7e, 0xf2, 0xb6, 0x94, 0x17,
	0x07, 0x1b, 0x47, 0x56, 0x09, 0x6b, 0x8b, 0x58, 0x27, 0x4c, 0xee, 0xba, 0xab, 0x08, 0xbc, 0xa0,
	0x13, 0x80, 0x4f, 0xda, 0xdb, 0x89, 0x61, 0x75, 0x65, 0xed, 0xa6, 0x61, 0xb7, 0x8a, 0xaf, 0xa3,
	0xd3, 0x59, 0xde, 0x04, 0x6e, 0x83, 0x17, 0xbf, 0x24, 0x52, 0xd7, 0x6a, 0xa8, 0xb4, 0x50, 0x5d,
	0xc0, 0x73, 0xa8, 0xd2, 0x4a, 0x5a, 0x0b, 0x7c, 0xb2, 0xd5, 0x03, 0x9e, 0x44, 0x97, 0xa0, 0x44,
	0x2c, 0x3d, 0x20, 0x81, 0x22, 0x5c, 0x68, 0xd2, 0x11, 0x31, 0xf7, 0x69, 0xfb, 0x02, 0x7a, 0x73,
	0xd0, 0x07, 0x67, 0xd1, 0xdc, 0xc1, 0xfa, 0x40, 0x02, 0xf3, 0x93, 0x36, 0xb8, 0x88, 0x5f, 0x42,
	0x0f, 0x3c, 0x29, 0xa1, 0x53, 0x63, 0x24, 0xbe, 0xf0, 0x66, 0xef, 0xff, 0x1c, 0x1c, 0xb0, 0x13,
	0x7e, 0x70, 0x76, 0x1a, 0xf7, 0xc6, 0xdc, 0xec, 0x34, 0x40, 0xf1, 0xcd, 0x9e, 0x4b, 0x8d, 0xaa,
	0xd0, 0x3a, 0xab, 0x46, 0x7b, 0x22, 0xbd, 0xcb, 0x0b, 0xc5, 0x77, 0x79, 0x94, 0x6e, 0x12, 0x27,
	0x98, 0xfe, 0x2b, 0xbc, 0xcb, 0xe5, 0x97, 0xc0, 0xe3, 0x5f, 0x0e, 0x3a, 0x35, 0xe6, 0x11, 0x2b,
	0xe4, 0x71, 0xff, 0x07, 0xaf, 0x7c, 0x92, 0xa6, 0xd3, 0x1b, 0xdd, 0x9d, 0xde, 0xe8, 0x65, 0x33,
	0xbd, 0xcd, 0x7c, 0xe9, 0xec, 0x34, 0xbe, 0xb7, 0x8b, 0x99, 0x4b, 0x21, 0x8b, 0x99, 0xab, 0x34,
	0x41, 0xf6, 0x19, 0x07, 0xae, 0xc3, 0x6d, 0xe2, 0x8f, 0xdf, 0x48, 0xd7, 0xaa, 0x29, 0x6f, 0xaf,
	0x3d, 0x93, 0xb7, 0x14, 0xc5, 0xa7, 0x2f, 0xca, 0xc0, 0xc5, 0xb9, 0x17, 0x3d, 0xfe, 0x72, 0xe9,
	0x81, 0x63, 0x2d, 0x3d, 0x3c, 0xbc, 0xd3, 0xf8, 0x6d, 0x02, 0x95, 0xea, 0xb4, 0x8a, 0x6f, 0xa2,
	0x93, 0xf9, 0x13, 0x22, 0x8d, 0xe6, 0x2a, 0xbe, 0xd4, 0x94, 0x62, 0x33, 0xf0, 0x41, 0x91, 0xe5,
	0xd6, 0xb5, 0x15, 0x22, 0x22, 0x90, 0xe9, 0xd4, 0x4c, 0x44, 0x2a, 0x15, 0x05, 0x7e, 0xbb, 0xea,
	0x41, 0xeb, 0xff, 0xaa, 0xd1, 0x2a, 0xad, 0xce, 0xd9, 0x4e, 0xfd, 0x38, 0x8b, 0xa2, 0x30, 0xf0,
	0x12, 0x5f, 0xf7, 0x96, 0x12, 0x7c, 0x31, 0xb7, 0xd2, 0x6a, 0x1a, 0x45, 0x3a, 0x87, 0x57, 0xd1,
	0x95, 0xbc, 0x22, 0xc5, 0x0a, 0x24, 0xf1, 0x05, 0xa4, 0x7a, 0xd4, 0x63, 0x46, 0x7a, 0x41, 0xf6,
	0x03, 0xa5, 0x4c, 0x44, 0x2d, 0x08, 0x4b, 0x8e, 0x7a, 0x8f, 0x7a, 0xd1, 0xd6, 0xf3, 0x6b, 0x5c,
	0xeb, 0x5d, 0x54, 0x7a, 0xa3, 0x5a, 0xc5, 0xef, 0xa0, 0xb7, 0xf7, 0xba, 0x30, 0x4e, 0x62, 0x0e,
	0xb7, 0x23, 0xf0, 0x8c, 0x00, 0x83, 0x94, 0x42, 0x12, 0xe1, 0x79, 0xb1, 0x04, 0x7f, 0xf7, 0x28,
	0x14, 0xc8, 0x4d, 0x90, 0x44, 0x05, 0x3e, 0xd0, 0xd6, 0xba, 0x09, 0x5d, 0xc5, 0x1f, 0xa3, 0xeb,
	0x45, 0xa1, 0x53, 0x3d, 0x6f, 0x0b, 0x7f, 0xdb, 0x84, 0xef, 0xb3, 0x30, 0x15, 0x02, 0x03, 0x2d,
	0x46, 0xea, 0xec, 0x33, 0xed, 0xf5, 0x12, 0x97, 0x41, 0xe4, 0xcc, 0x97, 0xb6, 0xae, 0x9a, 0x00,
	0x35, 0x7c, 0x19, 0x2d, 0x8f, 0x0f, 0x30, 0x00, 0xf2, 0x04, 0xd7, 0x2c, 0xc8, 0xc6, 0x07, 0x73,
	0x96, 0xb3, 0xca, 0x4c, 0x08, 0x3e, 0x70, 0x1d, 0xb0, 0x50, 0xd1, 0x1b, 0x3f, 0x3b, 0xe8, 0x47,
	0x67, 0xd0, 0x96, 0xdf, 0x39, 0x93, 0x25, 0xfc, 0xd0, 0x6e, 0x64, 0x67, 0x2a, 0x8a, 0x9e, 0xb9,
	0xdd, 0xf3, 0x53, 0xa6, 0x02, 0x09, 0x4a, 0xcb, 0x20, 0x49, 0xd0, 0x70, 0x11, 0xeb, 0x9e, 0x41,
	0xf6, 0x92, 0x09, 0xc4, 0x84, 0x53, 0x94, 0x7c, 0xd4, 0x83, 0x51, 0x83, 0x81, 0x88, 0xa4, 0x48,
	0x02, 0x74, 0x44, 0x18, 0x8a, 0xad, 0x34, 0x39, 0x93, 0x80, 0x90, 0xc1, 0xa7, 0xe9, 0x0e, 0xd3,
	0xb7, 0xa4, 0x13, 0x8a, 0x2d, 0x5a, 0x39, 0x54, 0x9f, 0x34, 0x7d, 0x6f, 0x20, 0x16, 0x8f, 0x98,
	0x5f, 0x5a, 0x6c, 0x00, 0x5f, 0xfa, 0xda, 0x46, 0xab, 0xcf, 0xf3, 0x14, 0xe1, 0xe9, 0xeb, 0xc1,
	0x70, 0xca, 0x1a, 0xa9, 0xc7, 0x67, 0x9a, 0xa1, 0xab, 0xcf, 0x75, 0x1f, 0xf1, 0xff, 0xde, 0x67,
	0x9c, 0x75, 0x61, 0x0c, 0xda, 0x7b, 0x76, 0xd3, 0xba, 0x91, 0xff, 0xaf, 0xf5, 0x9e, 0x6d, 0x3d,
	0xb0, 0xad, 0xc7, 0xb6, 0xf5, 0x8d, 0x6d, 0xfd, 0x62, 0x5b, 0x7f, 0xda, 0xd6, 0x4f, 0x8e, 0xd5,
	0x9e, 0x48, 0x94, 0xeb, 0xdc, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0x47, 0xfe, 0xbd, 0x23,
	0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProductCollectionServiceClient is the client API for ProductCollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProductCollectionServiceClient interface {
	// CreateProductCollection creates a new product collection.
	CreateProductCollection(ctx context.Context, in *CreateProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error)
	// GetProductCollection retrieves the details of a specific product information, selected by its ID.
	GetProductCollection(ctx context.Context, in *GetProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error)
	// UpdateProductCollection updates the product collection.
	UpdateProductCollection(ctx context.Context, in *UpdateProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error)
	// DeleteProductCollection deletes a product collection.
	DeleteProductCollection(ctx context.Context, in *DeleteProductCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type productCollectionServiceClient struct {
	cc *grpc.ClientConn
}

func NewProductCollectionServiceClient(cc *grpc.ClientConn) ProductCollectionServiceClient {
	return &productCollectionServiceClient{cc}
}

func (c *productCollectionServiceClient) CreateProductCollection(ctx context.Context, in *CreateProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error) {
	out := new(ProductCollection)
	err := c.cc.Invoke(ctx, "/productcollection.ProductCollectionService/CreateProductCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productCollectionServiceClient) GetProductCollection(ctx context.Context, in *GetProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error) {
	out := new(ProductCollection)
	err := c.cc.Invoke(ctx, "/productcollection.ProductCollectionService/GetProductCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productCollectionServiceClient) UpdateProductCollection(ctx context.Context, in *UpdateProductCollectionRequest, opts ...grpc.CallOption) (*ProductCollection, error) {
	out := new(ProductCollection)
	err := c.cc.Invoke(ctx, "/productcollection.ProductCollectionService/UpdateProductCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productCollectionServiceClient) DeleteProductCollection(ctx context.Context, in *DeleteProductCollectionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/productcollection.ProductCollectionService/DeleteProductCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProductCollectionServiceServer is the server API for ProductCollectionService service.
type ProductCollectionServiceServer interface {
	// CreateProductCollection creates a new product collection.
	CreateProductCollection(context.Context, *CreateProductCollectionRequest) (*ProductCollection, error)
	// GetProductCollection retrieves the details of a specific product information, selected by its ID.
	GetProductCollection(context.Context, *GetProductCollectionRequest) (*ProductCollection, error)
	// UpdateProductCollection updates the product collection.
	UpdateProductCollection(context.Context, *UpdateProductCollectionRequest) (*ProductCollection, error)
	// DeleteProductCollection deletes a product collection.
	DeleteProductCollection(context.Context, *DeleteProductCollectionRequest) (*empty.Empty, error)
}

// UnimplementedProductCollectionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProductCollectionServiceServer struct {
}

func (*UnimplementedProductCollectionServiceServer) CreateProductCollection(ctx context.Context, req *CreateProductCollectionRequest) (*ProductCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductCollection not implemented")
}
func (*UnimplementedProductCollectionServiceServer) GetProductCollection(ctx context.Context, req *GetProductCollectionRequest) (*ProductCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductCollection not implemented")
}
func (*UnimplementedProductCollectionServiceServer) UpdateProductCollection(ctx context.Context, req *UpdateProductCollectionRequest) (*ProductCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductCollection not implemented")
}
func (*UnimplementedProductCollectionServiceServer) DeleteProductCollection(ctx context.Context, req *DeleteProductCollectionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProductCollection not implemented")
}

func RegisterProductCollectionServiceServer(s *grpc.Server, srv ProductCollectionServiceServer) {
	s.RegisterService(&_ProductCollectionService_serviceDesc, srv)
}

func _ProductCollectionService_CreateProductCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductCollectionServiceServer).CreateProductCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productcollection.ProductCollectionService/CreateProductCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductCollectionServiceServer).CreateProductCollection(ctx, req.(*CreateProductCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductCollectionService_GetProductCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductCollectionServiceServer).GetProductCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productcollection.ProductCollectionService/GetProductCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductCollectionServiceServer).GetProductCollection(ctx, req.(*GetProductCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductCollectionService_UpdateProductCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductCollectionServiceServer).UpdateProductCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productcollection.ProductCollectionService/UpdateProductCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductCollectionServiceServer).UpdateProductCollection(ctx, req.(*UpdateProductCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProductCollectionService_DeleteProductCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProductCollectionServiceServer).DeleteProductCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/productcollection.ProductCollectionService/DeleteProductCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProductCollectionServiceServer).DeleteProductCollection(ctx, req.(*DeleteProductCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProductCollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "productcollection.ProductCollectionService",
	HandlerType: (*ProductCollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProductCollection",
			Handler:    _ProductCollectionService_CreateProductCollection_Handler,
		},
		{
			MethodName: "GetProductCollection",
			Handler:    _ProductCollectionService_GetProductCollection_Handler,
		},
		{
			MethodName: "UpdateProductCollection",
			Handler:    _ProductCollectionService_UpdateProductCollection_Handler,
		},
		{
			MethodName: "DeleteProductCollection",
			Handler:    _ProductCollectionService_DeleteProductCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/productcollection/all.proto",
}
