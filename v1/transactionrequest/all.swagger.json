{
  "swagger": "2.0",
  "info": {
    "title": "Transacton Request API",
    "description": "Provides CRUD operations on the transaction request resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types": {
      "get": {
        "summary": "Retrieve transaction types",
        "description": "Retrieves list of transaction request types for an account_id",
        "operationId": "GetTransactionRequestTypes",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestGetTransactionRequestTypesResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/ACCOUNT/transactionrequest": {
      "post": {
        "summary": "Create an account transaction request",
        "description": "Creates a new account transaction request",
        "operationId": "CreateAccountTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "201": {
            "description": "Account Transaction request created successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/ACCOUNT_OTP/transactionrequest": {
      "post": {
        "summary": "Create an account otp transaction request",
        "description": "Creates a new account otp transaction request",
        "operationId": "CreateAccountOTPTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "201": {
            "description": "Account OTP Transaction request created successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/COUNTERPARTY/transactionrequest": {
      "post": {
        "summary": "Create an counter party transaction request",
        "description": "Creates a new counter party transaction request",
        "operationId": "CreateCounterPartyTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "201": {
            "description": "Counter Party Transaction request created successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestCounterPartyTransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/FREE_FORM/transactionrequest": {
      "post": {
        "summary": "Create an free form transaction request",
        "description": "Creates a new free form transaction request",
        "operationId": "CreateFreeFormTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "201": {
            "description": "Free Form Transaction request created successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestFreeFormTransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/SEPA/transactionrequest": {
      "post": {
        "summary": "Create an sepa transaction request",
        "description": "Creates a new sepa transaction request",
        "operationId": "CreateSEPATransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "201": {
            "description": "SEPA Transaction request created successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestTransactionResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestSEPATransactionRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transaction-request-types/{transactionRequestType}/transactionrequest/{transactionRequestID}/challenge": {
      "post": {
        "summary": "Answer the transaction reqeust challenge",
        "description": "Answer the transaction request challenge",
        "operationId": "AnswerTransactionRequestChallenge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestAnswerTransactionRequestChallengeResponse"
            }
          },
          "201": {
            "description": "Answered the transaction request challenge",
            "schema": {
              "$ref": "#/definitions/transactionrequestAnswerTransactionRequestChallengeResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionRequestType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "transactionRequestID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestAnswerTransactionRequestChallengeRequest"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/accounts/{accountID}/transactionrequests": {
      "get": {
        "summary": "Retrieve transaction requests",
        "description": "Retrieves list of transaction requests for an account_id",
        "operationId": "GetTransactionRequests",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestGetTransactionRequestsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.read"
            ]
          }
        ]
      }
    },
    "/v1/banks/{bankID}/transaction-request-types": {
      "get": {
        "summary": "Retrieve transaction types",
        "description": "Retrieves list of transaction request types",
        "operationId": "GetSupportedTransactionRequestTypes",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestGetSupportedTransactionRequestTypesResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "bankID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.read"
            ]
          }
        ]
      }
    },
    "/v1/transactionrequest/import": {
      "post": {
        "summary": "Import a historic transaction",
        "description": "Import a historic transaction",
        "operationId": "SaveHistoricTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transactionrequestHistoricTransaction"
            }
          },
          "201": {
            "description": "A Historic Transaction has been imported successfully.",
            "schema": {
              "$ref": "#/definitions/transactionrequestHistoricTransaction"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionrequestHistoricTransaction"
            }
          }
        ],
        "tags": [
          "Transaction Request"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/transactionrequest.write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "transactionrequestAnswerTransactionRequestChallengeRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "transaction_request_type": {
          "type": "string"
        },
        "transaction_request_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      }
    },
    "transactionrequestAnswerTransactionRequestChallengeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "details": {
          "$ref": "#/definitions/transactionrequestChallengeDetails"
        },
        "transaction_ids": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "challenge": {
          "$ref": "#/definitions/transactionrequestChallenge"
        },
        "charge": {
          "$ref": "#/definitions/transactionrequestCharge"
        }
      }
    },
    "transactionrequestBankAccount": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        }
      }
    },
    "transactionrequestChallenge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "allowed_attempts": {
          "type": "integer",
          "format": "int32"
        },
        "challenge_type": {
          "type": "string"
        }
      }
    },
    "transactionrequestChallengeDetails": {
      "type": "object",
      "properties": {
        "to": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "transactionrequestCharge": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        }
      }
    },
    "transactionrequestCounterPartyTransactionRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestToCounterparty"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        },
        "charge_policy": {
          "type": "string"
        },
        "future_date": {
          "type": "string"
        }
      }
    },
    "transactionrequestCreditorAccount": {
      "type": "object",
      "properties": {
        "iban": {
          "type": "string"
        }
      }
    },
    "transactionrequestDebtorAccount": {
      "type": "object",
      "properties": {
        "iban": {
          "type": "string"
        }
      }
    },
    "transactionrequestDetails": {
      "type": "object",
      "properties": {
        "to_sandbox_tan": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "to_sepa": {
          "$ref": "#/definitions/transactionrequestToSepa"
        },
        "to_counterparty": {
          "$ref": "#/definitions/transactionrequestToCounterparty"
        },
        "to_transfer_to_phone": {
          "$ref": "#/definitions/transactionrequestToTransferToPhone"
        },
        "to_transfer_to_atm": {
          "$ref": "#/definitions/transactionrequestToTransferToAtm"
        },
        "to_transfer_to_account": {
          "$ref": "#/definitions/transactionrequestToTransferToAccount"
        },
        "to_sepa_credit_transfers": {
          "$ref": "#/definitions/transactionrequestToSepaCreditTransfers"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "transactionrequestFreeFormTransactionRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "transactionrequestFromPhone": {
      "type": "object",
      "properties": {
        "mobile_phone_number": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        }
      }
    },
    "transactionrequestGetSupportedTransactionRequestTypesResponse": {
      "type": "object",
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transactionrequestTransactionRequestType"
          }
        }
      }
    },
    "transactionrequestGetTransactionRequestTypesResponse": {
      "type": "object",
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transactionrequestTransactionRequestType"
          }
        }
      }
    },
    "transactionrequestGetTransactionRequestsResponse": {
      "type": "object",
      "properties": {
        "transaction_requests_with_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transactionrequestTransactionRequestsWithCharges"
          }
        }
      }
    },
    "transactionrequestHistoricTransaction": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        },
        "posted": {
          "type": "string",
          "format": "date-time"
        },
        "completed": {
          "type": "string",
          "format": "date-time"
        },
        "transaction_request_type": {
          "type": "string"
        },
        "charge_policy": {
          "type": "string"
        }
      }
    },
    "transactionrequestKycDocument": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "transactionrequestSEPATransactionRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestToSepa"
        },
        "description": {
          "type": "string"
        },
        "charge_policy": {
          "type": "string"
        },
        "future_date": {
          "type": "string"
        }
      }
    },
    "transactionrequestTo": {
      "type": "object",
      "properties": {
        "legal_name": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "mobile_phone_number": {
          "type": "string"
        },
        "kyc_document": {
          "$ref": "#/definitions/transactionrequestKycDocument"
        }
      }
    },
    "transactionrequestToCounterparty": {
      "type": "object",
      "properties": {
        "counterparty_id": {
          "type": "string"
        }
      }
    },
    "transactionrequestToPhone": {
      "type": "object",
      "properties": {
        "mobile_phone_number": {
          "type": "string"
        }
      }
    },
    "transactionrequestToSepa": {
      "type": "object",
      "properties": {
        "iban": {
          "type": "string"
        }
      }
    },
    "transactionrequestToSepaCreditTransfers": {
      "type": "object",
      "properties": {
        "debtor_account": {
          "$ref": "#/definitions/transactionrequestDebtorAccount"
        },
        "instructed_amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "creditor_account": {
          "$ref": "#/definitions/transactionrequestCreditorAccount"
        },
        "creditor_name": {
          "type": "string"
        }
      }
    },
    "transactionrequestToTransferToAccount": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        },
        "transfer_type": {
          "type": "string"
        },
        "future_date": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestTo"
        }
      }
    },
    "transactionrequestToTransferToAtm": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/transactionrequestFromPhone"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestToPhone"
        }
      }
    },
    "transactionrequestToTransferToPhone": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/transactionrequestFromPhone"
        },
        "to": {
          "$ref": "#/definitions/transactionrequestToPhone"
        }
      }
    },
    "transactionrequestTransactionRequest": {
      "type": "object",
      "properties": {
        "bank_id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "to_bank": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "amount": {
          "$ref": "#/definitions/typesAmount"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "transactionrequestTransactionRequestType": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "charge": {
          "$ref": "#/definitions/transactionrequestCharge"
        }
      }
    },
    "transactionrequestTransactionRequestsWithCharges": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/transactionrequestFromPhone"
        },
        "details": {
          "$ref": "#/definitions/transactionrequestDetails"
        },
        "transaction_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "challenge": {
          "$ref": "#/definitions/transactionrequestChallenge"
        },
        "charge": {
          "$ref": "#/definitions/transactionrequestCharge"
        }
      }
    },
    "transactionrequestTransactionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "from": {
          "$ref": "#/definitions/transactionrequestBankAccount"
        },
        "details": {
          "$ref": "#/definitions/transactionrequestDetails"
        },
        "transaction_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "start_date": {
          "type": "string",
          "format": "date-time"
        },
        "end_date": {
          "type": "string",
          "format": "date-time"
        },
        "challenge": {
          "$ref": "#/definitions/transactionrequestChallenge"
        },
        "charge": {
          "$ref": "#/definitions/transactionrequestCharge"
        }
      }
    },
    "typesAmount": {
      "type": "object",
      "properties": {
        "cur": {
          "type": "string",
          "description": "Cur is the currency of the amount."
        },
        "num": {
          "type": "string",
          "description": "Num is the value of the amount."
        }
      },
      "description": "Amount defines a transaction amount."
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to transaction request resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "https://auth.bnk.to/transactionrequest.read": "View transactionrequest data",
        "https://auth.bnk.to/transactionrequest.write": "Manage transactionrequest data"
      }
    }
  }
}
