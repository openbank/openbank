// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/transactionrequest/all.proto

package transactionrequest

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransactionRequest struct {
	BankID               string        `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string        `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	To                   *BankAccount  `protobuf:"bytes,3,opt,name=To,json=to_bank,proto3" json:"to_bank,omitempty"`
	Amount               *types.Amount `protobuf:"bytes,4,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{0}
}

func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *TransactionRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *TransactionRequest) GetTo() *BankAccount {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TransactionRequest) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransactionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type BankAccount struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankAccount) Reset()         { *m = BankAccount{} }
func (m *BankAccount) String() string { return proto.CompactTextString(m) }
func (*BankAccount) ProtoMessage()    {}
func (*BankAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{1}
}

func (m *BankAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAccount.Unmarshal(m, b)
}
func (m *BankAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAccount.Marshal(b, m, deterministic)
}
func (m *BankAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAccount.Merge(m, src)
}
func (m *BankAccount) XXX_Size() int {
	return xxx_messageInfo_BankAccount.Size(m)
}
func (m *BankAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankAccount proto.InternalMessageInfo

func (m *BankAccount) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *BankAccount) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type TransactionResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=Type,json=type,proto3" json:"type,omitempty"`
	From                 *BankAccount         `protobuf:"bytes,3,opt,name=From,json=from,proto3" json:"from,omitempty"`
	Details              *Details             `protobuf:"bytes,4,opt,name=Details,json=details,proto3" json:"details,omitempty"`
	TransactionIds       []string             `protobuf:"bytes,5,rep,name=TransactionIds,json=transaction_ids,proto3" json:"transaction_ids,omitempty"`
	Status               string               `protobuf:"bytes,6,opt,name=Status,json=status,proto3" json:"status,omitempty"`
	StartDate            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=StartDate,json=start_date,proto3" json:"start_date,omitempty"`
	EndDate              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=EndDate,json=end_date,proto3" json:"end_date,omitempty"`
	Challenge            *Challenge           `protobuf:"bytes,9,opt,name=Challenge,json=challenge,proto3" json:"challenge,omitempty"`
	Charge               *Charge              `protobuf:"bytes,10,opt,name=Charge,json=charge,proto3" json:"charge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{2}
}

func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResponse.Unmarshal(m, b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
}
func (m *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(m, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionResponse.Size(m)
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (m *TransactionResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TransactionResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionResponse) GetFrom() *BankAccount {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransactionResponse) GetDetails() *Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TransactionResponse) GetTransactionIds() []string {
	if m != nil {
		return m.TransactionIds
	}
	return nil
}

func (m *TransactionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TransactionResponse) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *TransactionResponse) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *TransactionResponse) GetChallenge() *Challenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *TransactionResponse) GetCharge() *Charge {
	if m != nil {
		return m.Charge
	}
	return nil
}

type ToSepa struct {
	Iban                 string   `protobuf:"bytes,1,opt,name=Iban,json=iban,proto3" json:"iban,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToSepa) Reset()         { *m = ToSepa{} }
func (m *ToSepa) String() string { return proto.CompactTextString(m) }
func (*ToSepa) ProtoMessage()    {}
func (*ToSepa) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{3}
}

func (m *ToSepa) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToSepa.Unmarshal(m, b)
}
func (m *ToSepa) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToSepa.Marshal(b, m, deterministic)
}
func (m *ToSepa) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToSepa.Merge(m, src)
}
func (m *ToSepa) XXX_Size() int {
	return xxx_messageInfo_ToSepa.Size(m)
}
func (m *ToSepa) XXX_DiscardUnknown() {
	xxx_messageInfo_ToSepa.DiscardUnknown(m)
}

var xxx_messageInfo_ToSepa proto.InternalMessageInfo

func (m *ToSepa) GetIban() string {
	if m != nil {
		return m.Iban
	}
	return ""
}

type ToCounterparty struct {
	CounterpartyID       string   `protobuf:"bytes,1,opt,name=CounterpartyID,json=counterparty_id,proto3" json:"counterparty_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToCounterparty) Reset()         { *m = ToCounterparty{} }
func (m *ToCounterparty) String() string { return proto.CompactTextString(m) }
func (*ToCounterparty) ProtoMessage()    {}
func (*ToCounterparty) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{4}
}

func (m *ToCounterparty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToCounterparty.Unmarshal(m, b)
}
func (m *ToCounterparty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToCounterparty.Marshal(b, m, deterministic)
}
func (m *ToCounterparty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToCounterparty.Merge(m, src)
}
func (m *ToCounterparty) XXX_Size() int {
	return xxx_messageInfo_ToCounterparty.Size(m)
}
func (m *ToCounterparty) XXX_DiscardUnknown() {
	xxx_messageInfo_ToCounterparty.DiscardUnknown(m)
}

var xxx_messageInfo_ToCounterparty proto.InternalMessageInfo

func (m *ToCounterparty) GetCounterpartyID() string {
	if m != nil {
		return m.CounterpartyID
	}
	return ""
}

type ToTransferToPhone struct {
	Amount               *types.Amount `protobuf:"bytes,1,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	Message              string        `protobuf:"bytes,3,opt,name=Message,json=message,proto3" json:"message,omitempty"`
	From                 *FromPhone    `protobuf:"bytes,4,opt,name=From,json=from,proto3" json:"from,omitempty"`
	To                   *ToPhone      `protobuf:"bytes,5,opt,name=To,json=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ToTransferToPhone) Reset()         { *m = ToTransferToPhone{} }
func (m *ToTransferToPhone) String() string { return proto.CompactTextString(m) }
func (*ToTransferToPhone) ProtoMessage()    {}
func (*ToTransferToPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{5}
}

func (m *ToTransferToPhone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToTransferToPhone.Unmarshal(m, b)
}
func (m *ToTransferToPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToTransferToPhone.Marshal(b, m, deterministic)
}
func (m *ToTransferToPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToTransferToPhone.Merge(m, src)
}
func (m *ToTransferToPhone) XXX_Size() int {
	return xxx_messageInfo_ToTransferToPhone.Size(m)
}
func (m *ToTransferToPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_ToTransferToPhone.DiscardUnknown(m)
}

var xxx_messageInfo_ToTransferToPhone proto.InternalMessageInfo

func (m *ToTransferToPhone) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ToTransferToPhone) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToTransferToPhone) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ToTransferToPhone) GetFrom() *FromPhone {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ToTransferToPhone) GetTo() *ToPhone {
	if m != nil {
		return m.To
	}
	return nil
}

type FromPhone struct {
	MobilePhoneNumber    string   `protobuf:"bytes,1,opt,name=MobilePhoneNumber,json=mobile_phone_number,proto3" json:"mobile_phone_number,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=Nickname,json=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FromPhone) Reset()         { *m = FromPhone{} }
func (m *FromPhone) String() string { return proto.CompactTextString(m) }
func (*FromPhone) ProtoMessage()    {}
func (*FromPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{6}
}

func (m *FromPhone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FromPhone.Unmarshal(m, b)
}
func (m *FromPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FromPhone.Marshal(b, m, deterministic)
}
func (m *FromPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FromPhone.Merge(m, src)
}
func (m *FromPhone) XXX_Size() int {
	return xxx_messageInfo_FromPhone.Size(m)
}
func (m *FromPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_FromPhone.DiscardUnknown(m)
}

var xxx_messageInfo_FromPhone proto.InternalMessageInfo

func (m *FromPhone) GetMobilePhoneNumber() string {
	if m != nil {
		return m.MobilePhoneNumber
	}
	return ""
}

func (m *FromPhone) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type ToPhone struct {
	MobilePhoneNumber    string   `protobuf:"bytes,1,opt,name=MobilePhoneNumber,json=mobile_phone_number,proto3" json:"mobile_phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToPhone) Reset()         { *m = ToPhone{} }
func (m *ToPhone) String() string { return proto.CompactTextString(m) }
func (*ToPhone) ProtoMessage()    {}
func (*ToPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{7}
}

func (m *ToPhone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToPhone.Unmarshal(m, b)
}
func (m *ToPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToPhone.Marshal(b, m, deterministic)
}
func (m *ToPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToPhone.Merge(m, src)
}
func (m *ToPhone) XXX_Size() int {
	return xxx_messageInfo_ToPhone.Size(m)
}
func (m *ToPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_ToPhone.DiscardUnknown(m)
}

var xxx_messageInfo_ToPhone proto.InternalMessageInfo

func (m *ToPhone) GetMobilePhoneNumber() string {
	if m != nil {
		return m.MobilePhoneNumber
	}
	return ""
}

type KycDocument struct {
	Type                 string   `protobuf:"bytes,1,opt,name=Type,json=type,proto3" json:"type,omitempty"`
	Number               string   `protobuf:"bytes,2,opt,name=Number,json=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KycDocument) Reset()         { *m = KycDocument{} }
func (m *KycDocument) String() string { return proto.CompactTextString(m) }
func (*KycDocument) ProtoMessage()    {}
func (*KycDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{8}
}

func (m *KycDocument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KycDocument.Unmarshal(m, b)
}
func (m *KycDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KycDocument.Marshal(b, m, deterministic)
}
func (m *KycDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KycDocument.Merge(m, src)
}
func (m *KycDocument) XXX_Size() int {
	return xxx_messageInfo_KycDocument.Size(m)
}
func (m *KycDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_KycDocument.DiscardUnknown(m)
}

var xxx_messageInfo_KycDocument proto.InternalMessageInfo

func (m *KycDocument) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *KycDocument) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type To struct {
	LegalName            string       `protobuf:"bytes,1,opt,name=LegalName,json=legal_name,proto3" json:"legal_name,omitempty"`
	DateOfBirth          string       `protobuf:"bytes,2,opt,name=DateOfBirth,json=date_of_birth,proto3" json:"date_of_birth,omitempty"`
	MobilePhoneNumber    string       `protobuf:"bytes,3,opt,name=MobilePhoneNumber,json=mobile_phone_number,proto3" json:"mobile_phone_number,omitempty"`
	KycDocument          *KycDocument `protobuf:"bytes,4,opt,name=KycDocument,json=kyc_document,proto3" json:"kyc_document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *To) Reset()         { *m = To{} }
func (m *To) String() string { return proto.CompactTextString(m) }
func (*To) ProtoMessage()    {}
func (*To) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{9}
}

func (m *To) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_To.Unmarshal(m, b)
}
func (m *To) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_To.Marshal(b, m, deterministic)
}
func (m *To) XXX_Merge(src proto.Message) {
	xxx_messageInfo_To.Merge(m, src)
}
func (m *To) XXX_Size() int {
	return xxx_messageInfo_To.Size(m)
}
func (m *To) XXX_DiscardUnknown() {
	xxx_messageInfo_To.DiscardUnknown(m)
}

var xxx_messageInfo_To proto.InternalMessageInfo

func (m *To) GetLegalName() string {
	if m != nil {
		return m.LegalName
	}
	return ""
}

func (m *To) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *To) GetMobilePhoneNumber() string {
	if m != nil {
		return m.MobilePhoneNumber
	}
	return ""
}

func (m *To) GetKycDocument() *KycDocument {
	if m != nil {
		return m.KycDocument
	}
	return nil
}

type ToTransferToAtm struct {
	Amount               *types.Amount `protobuf:"bytes,1,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	Message              string        `protobuf:"bytes,3,opt,name=Message,json=message,proto3" json:"message,omitempty"`
	From                 *FromPhone    `protobuf:"bytes,4,opt,name=From,json=from,proto3" json:"from,omitempty"`
	To                   *ToPhone      `protobuf:"bytes,5,opt,name=To,json=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ToTransferToAtm) Reset()         { *m = ToTransferToAtm{} }
func (m *ToTransferToAtm) String() string { return proto.CompactTextString(m) }
func (*ToTransferToAtm) ProtoMessage()    {}
func (*ToTransferToAtm) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{10}
}

func (m *ToTransferToAtm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToTransferToAtm.Unmarshal(m, b)
}
func (m *ToTransferToAtm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToTransferToAtm.Marshal(b, m, deterministic)
}
func (m *ToTransferToAtm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToTransferToAtm.Merge(m, src)
}
func (m *ToTransferToAtm) XXX_Size() int {
	return xxx_messageInfo_ToTransferToAtm.Size(m)
}
func (m *ToTransferToAtm) XXX_DiscardUnknown() {
	xxx_messageInfo_ToTransferToAtm.DiscardUnknown(m)
}

var xxx_messageInfo_ToTransferToAtm proto.InternalMessageInfo

func (m *ToTransferToAtm) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ToTransferToAtm) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToTransferToAtm) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ToTransferToAtm) GetFrom() *FromPhone {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *ToTransferToAtm) GetTo() *ToPhone {
	if m != nil {
		return m.To
	}
	return nil
}

type Account struct {
	Number               string   `protobuf:"bytes,1,opt,name=Number,json=number,proto3" json:"number,omitempty"`
	Iban                 string   `protobuf:"bytes,2,opt,name=Iban,json=iban,proto3" json:"iban,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{11}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Account) GetIban() string {
	if m != nil {
		return m.Iban
	}
	return ""
}

type ToAccount struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"name,omitempty"`
	BankCode             string   `protobuf:"bytes,2,opt,name=BankCode,json=bank_code,proto3" json:"bank_code,omitempty"`
	BranchNumber         string   `protobuf:"bytes,3,opt,name=BranchNumber,json=branch_number,proto3" json:"branch_number,omitempty"`
	Account              *Account `protobuf:"bytes,4,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToAccount) Reset()         { *m = ToAccount{} }
func (m *ToAccount) String() string { return proto.CompactTextString(m) }
func (*ToAccount) ProtoMessage()    {}
func (*ToAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{12}
}

func (m *ToAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToAccount.Unmarshal(m, b)
}
func (m *ToAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToAccount.Marshal(b, m, deterministic)
}
func (m *ToAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToAccount.Merge(m, src)
}
func (m *ToAccount) XXX_Size() int {
	return xxx_messageInfo_ToAccount.Size(m)
}
func (m *ToAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ToAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ToAccount proto.InternalMessageInfo

func (m *ToAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ToAccount) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *ToAccount) GetBranchNumber() string {
	if m != nil {
		return m.BranchNumber
	}
	return ""
}

func (m *ToAccount) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ToTransferToAccount struct {
	Amount               *types.Amount `protobuf:"bytes,1,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	TransferType         string        `protobuf:"bytes,3,opt,name=TransferType,json=transfer_type,proto3" json:"transfer_type,omitempty"`
	FutureDate           string        `protobuf:"bytes,4,opt,name=FutureDate,json=future_date,proto3" json:"future_date,omitempty"`
	To                   *To           `protobuf:"bytes,5,opt,name=To,json=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ToTransferToAccount) Reset()         { *m = ToTransferToAccount{} }
func (m *ToTransferToAccount) String() string { return proto.CompactTextString(m) }
func (*ToTransferToAccount) ProtoMessage()    {}
func (*ToTransferToAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{13}
}

func (m *ToTransferToAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToTransferToAccount.Unmarshal(m, b)
}
func (m *ToTransferToAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToTransferToAccount.Marshal(b, m, deterministic)
}
func (m *ToTransferToAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToTransferToAccount.Merge(m, src)
}
func (m *ToTransferToAccount) XXX_Size() int {
	return xxx_messageInfo_ToTransferToAccount.Size(m)
}
func (m *ToTransferToAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ToTransferToAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ToTransferToAccount proto.InternalMessageInfo

func (m *ToTransferToAccount) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ToTransferToAccount) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToTransferToAccount) GetTransferType() string {
	if m != nil {
		return m.TransferType
	}
	return ""
}

func (m *ToTransferToAccount) GetFutureDate() string {
	if m != nil {
		return m.FutureDate
	}
	return ""
}

func (m *ToTransferToAccount) GetTo() *To {
	if m != nil {
		return m.To
	}
	return nil
}

type DebtorAccount struct {
	Iban                 string   `protobuf:"bytes,1,opt,name=Iban,json=iban,proto3" json:"iban,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebtorAccount) Reset()         { *m = DebtorAccount{} }
func (m *DebtorAccount) String() string { return proto.CompactTextString(m) }
func (*DebtorAccount) ProtoMessage()    {}
func (*DebtorAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{14}
}

func (m *DebtorAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebtorAccount.Unmarshal(m, b)
}
func (m *DebtorAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebtorAccount.Marshal(b, m, deterministic)
}
func (m *DebtorAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebtorAccount.Merge(m, src)
}
func (m *DebtorAccount) XXX_Size() int {
	return xxx_messageInfo_DebtorAccount.Size(m)
}
func (m *DebtorAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_DebtorAccount.DiscardUnknown(m)
}

var xxx_messageInfo_DebtorAccount proto.InternalMessageInfo

func (m *DebtorAccount) GetIban() string {
	if m != nil {
		return m.Iban
	}
	return ""
}

type CreditorAccount struct {
	Iban                 string   `protobuf:"bytes,1,opt,name=Iban,json=iban,proto3" json:"iban,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditorAccount) Reset()         { *m = CreditorAccount{} }
func (m *CreditorAccount) String() string { return proto.CompactTextString(m) }
func (*CreditorAccount) ProtoMessage()    {}
func (*CreditorAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{15}
}

func (m *CreditorAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditorAccount.Unmarshal(m, b)
}
func (m *CreditorAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditorAccount.Marshal(b, m, deterministic)
}
func (m *CreditorAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditorAccount.Merge(m, src)
}
func (m *CreditorAccount) XXX_Size() int {
	return xxx_messageInfo_CreditorAccount.Size(m)
}
func (m *CreditorAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditorAccount.DiscardUnknown(m)
}

var xxx_messageInfo_CreditorAccount proto.InternalMessageInfo

func (m *CreditorAccount) GetIban() string {
	if m != nil {
		return m.Iban
	}
	return ""
}

type ToSepaCreditTransfers struct {
	DebtorAccount        *DebtorAccount   `protobuf:"bytes,1,opt,name=DebtorAccount,json=debtor_account,proto3" json:"debtor_account,omitempty"`
	InstructedAmount     *types.Amount    `protobuf:"bytes,2,opt,name=InstructedAmount,json=instructed_amount,proto3" json:"instructed_amount,omitempty"`
	CreditorAccount      *CreditorAccount `protobuf:"bytes,3,opt,name=CreditorAccount,json=creditor_account,proto3" json:"creditor_account,omitempty"`
	CreditorName         string           `protobuf:"bytes,4,opt,name=CreditorName,json=creditor_name,proto3" json:"creditor_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ToSepaCreditTransfers) Reset()         { *m = ToSepaCreditTransfers{} }
func (m *ToSepaCreditTransfers) String() string { return proto.CompactTextString(m) }
func (*ToSepaCreditTransfers) ProtoMessage()    {}
func (*ToSepaCreditTransfers) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{16}
}

func (m *ToSepaCreditTransfers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToSepaCreditTransfers.Unmarshal(m, b)
}
func (m *ToSepaCreditTransfers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToSepaCreditTransfers.Marshal(b, m, deterministic)
}
func (m *ToSepaCreditTransfers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToSepaCreditTransfers.Merge(m, src)
}
func (m *ToSepaCreditTransfers) XXX_Size() int {
	return xxx_messageInfo_ToSepaCreditTransfers.Size(m)
}
func (m *ToSepaCreditTransfers) XXX_DiscardUnknown() {
	xxx_messageInfo_ToSepaCreditTransfers.DiscardUnknown(m)
}

var xxx_messageInfo_ToSepaCreditTransfers proto.InternalMessageInfo

func (m *ToSepaCreditTransfers) GetDebtorAccount() *DebtorAccount {
	if m != nil {
		return m.DebtorAccount
	}
	return nil
}

func (m *ToSepaCreditTransfers) GetInstructedAmount() *types.Amount {
	if m != nil {
		return m.InstructedAmount
	}
	return nil
}

func (m *ToSepaCreditTransfers) GetCreditorAccount() *CreditorAccount {
	if m != nil {
		return m.CreditorAccount
	}
	return nil
}

func (m *ToSepaCreditTransfers) GetCreditorName() string {
	if m != nil {
		return m.CreditorName
	}
	return ""
}

type Details struct {
	ToSandboxTan          *BankAccount           `protobuf:"bytes,1,opt,name=ToSandboxTan,json=to_sandbox_tan,proto3" json:"to_sandbox_tan,omitempty"`
	ToSepa                *ToSepa                `protobuf:"bytes,2,opt,name=ToSepa,json=to_sepa,proto3" json:"to_sepa,omitempty"`
	ToCounterparty        *ToCounterparty        `protobuf:"bytes,3,opt,name=ToCounterparty,json=to_counterparty,proto3" json:"to_counterparty,omitempty"`
	ToTransferToPhone     *ToTransferToPhone     `protobuf:"bytes,4,opt,name=ToTransferToPhone,json=to_transfer_to_phone,proto3" json:"to_transfer_to_phone,omitempty"`
	ToTransferToAtm       *ToTransferToAtm       `protobuf:"bytes,5,opt,name=ToTransferToAtm,json=to_transfer_to_atm,proto3" json:"to_transfer_to_atm,omitempty"`
	ToTransferToAccount   *ToTransferToAccount   `protobuf:"bytes,6,opt,name=ToTransferToAccount,json=to_transfer_to_account,proto3" json:"to_transfer_to_account,omitempty"`
	ToSepaCreditTransfers *ToSepaCreditTransfers `protobuf:"bytes,7,opt,name=ToSepaCreditTransfers,json=to_sepa_credit_transfers,proto3" json:"to_sepa_credit_transfers,omitempty"`
	Amount                *types.Amount          `protobuf:"bytes,8,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description           string                 `protobuf:"bytes,9,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *Details) Reset()         { *m = Details{} }
func (m *Details) String() string { return proto.CompactTextString(m) }
func (*Details) ProtoMessage()    {}
func (*Details) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{17}
}

func (m *Details) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Details.Unmarshal(m, b)
}
func (m *Details) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Details.Marshal(b, m, deterministic)
}
func (m *Details) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Details.Merge(m, src)
}
func (m *Details) XXX_Size() int {
	return xxx_messageInfo_Details.Size(m)
}
func (m *Details) XXX_DiscardUnknown() {
	xxx_messageInfo_Details.DiscardUnknown(m)
}

var xxx_messageInfo_Details proto.InternalMessageInfo

func (m *Details) GetToSandboxTan() *BankAccount {
	if m != nil {
		return m.ToSandboxTan
	}
	return nil
}

func (m *Details) GetToSepa() *ToSepa {
	if m != nil {
		return m.ToSepa
	}
	return nil
}

func (m *Details) GetToCounterparty() *ToCounterparty {
	if m != nil {
		return m.ToCounterparty
	}
	return nil
}

func (m *Details) GetToTransferToPhone() *ToTransferToPhone {
	if m != nil {
		return m.ToTransferToPhone
	}
	return nil
}

func (m *Details) GetToTransferToAtm() *ToTransferToAtm {
	if m != nil {
		return m.ToTransferToAtm
	}
	return nil
}

func (m *Details) GetToTransferToAccount() *ToTransferToAccount {
	if m != nil {
		return m.ToTransferToAccount
	}
	return nil
}

func (m *Details) GetToSepaCreditTransfers() *ToSepaCreditTransfers {
	if m != nil {
		return m.ToSepaCreditTransfers
	}
	return nil
}

func (m *Details) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Details) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Challenge struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	AllowedAttempts      int32    `protobuf:"varint,2,opt,name=AllowedAttempts,json=allowed_attempts,proto3" json:"allowed_attempts,omitempty"`
	ChallengeType        string   `protobuf:"bytes,3,opt,name=ChallengeType,json=challenge_type,proto3" json:"challenge_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Challenge) Reset()         { *m = Challenge{} }
func (m *Challenge) String() string { return proto.CompactTextString(m) }
func (*Challenge) ProtoMessage()    {}
func (*Challenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{18}
}

func (m *Challenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Challenge.Unmarshal(m, b)
}
func (m *Challenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Challenge.Marshal(b, m, deterministic)
}
func (m *Challenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Challenge.Merge(m, src)
}
func (m *Challenge) XXX_Size() int {
	return xxx_messageInfo_Challenge.Size(m)
}
func (m *Challenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Challenge.DiscardUnknown(m)
}

var xxx_messageInfo_Challenge proto.InternalMessageInfo

func (m *Challenge) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Challenge) GetAllowedAttempts() int32 {
	if m != nil {
		return m.AllowedAttempts
	}
	return 0
}

func (m *Challenge) GetChallengeType() string {
	if m != nil {
		return m.ChallengeType
	}
	return ""
}

type Charge struct {
	Summary              string        `protobuf:"bytes,1,opt,name=Summary,json=summary,proto3" json:"summary,omitempty"`
	Amount               *types.Amount `protobuf:"bytes,2,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Charge) Reset()         { *m = Charge{} }
func (m *Charge) String() string { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()    {}
func (*Charge) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{19}
}

func (m *Charge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charge.Unmarshal(m, b)
}
func (m *Charge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charge.Marshal(b, m, deterministic)
}
func (m *Charge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charge.Merge(m, src)
}
func (m *Charge) XXX_Size() int {
	return xxx_messageInfo_Charge.Size(m)
}
func (m *Charge) XXX_DiscardUnknown() {
	xxx_messageInfo_Charge.DiscardUnknown(m)
}

var xxx_messageInfo_Charge proto.InternalMessageInfo

func (m *Charge) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Charge) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

type CounterPartyTransactionRequest struct {
	BankID               string          `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string          `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	To                   *ToCounterparty `protobuf:"bytes,3,opt,name=To,json=to,proto3" json:"to,omitempty"`
	Amount               *types.Amount   `protobuf:"bytes,4,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string          `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	ChargePolicy         string          `protobuf:"bytes,6,opt,name=ChargePolicy,json=charge_policy,proto3" json:"charge_policy,omitempty"`
	FutureDate           string          `protobuf:"bytes,7,opt,name=FutureDate,json=future_date,proto3" json:"future_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CounterPartyTransactionRequest) Reset()         { *m = CounterPartyTransactionRequest{} }
func (m *CounterPartyTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CounterPartyTransactionRequest) ProtoMessage()    {}
func (*CounterPartyTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{20}
}

func (m *CounterPartyTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterPartyTransactionRequest.Unmarshal(m, b)
}
func (m *CounterPartyTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterPartyTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CounterPartyTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterPartyTransactionRequest.Merge(m, src)
}
func (m *CounterPartyTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CounterPartyTransactionRequest.Size(m)
}
func (m *CounterPartyTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterPartyTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CounterPartyTransactionRequest proto.InternalMessageInfo

func (m *CounterPartyTransactionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CounterPartyTransactionRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CounterPartyTransactionRequest) GetTo() *ToCounterparty {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *CounterPartyTransactionRequest) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *CounterPartyTransactionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CounterPartyTransactionRequest) GetChargePolicy() string {
	if m != nil {
		return m.ChargePolicy
	}
	return ""
}

func (m *CounterPartyTransactionRequest) GetFutureDate() string {
	if m != nil {
		return m.FutureDate
	}
	return ""
}

type FreeFormTransactionRequest struct {
	BankID               string        `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string        `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	Amount               *types.Amount `protobuf:"bytes,3,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,4,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FreeFormTransactionRequest) Reset()         { *m = FreeFormTransactionRequest{} }
func (m *FreeFormTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*FreeFormTransactionRequest) ProtoMessage()    {}
func (*FreeFormTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{21}
}

func (m *FreeFormTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FreeFormTransactionRequest.Unmarshal(m, b)
}
func (m *FreeFormTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FreeFormTransactionRequest.Marshal(b, m, deterministic)
}
func (m *FreeFormTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FreeFormTransactionRequest.Merge(m, src)
}
func (m *FreeFormTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_FreeFormTransactionRequest.Size(m)
}
func (m *FreeFormTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FreeFormTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FreeFormTransactionRequest proto.InternalMessageInfo

func (m *FreeFormTransactionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *FreeFormTransactionRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *FreeFormTransactionRequest) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *FreeFormTransactionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type SEPATransactionRequest struct {
	BankID               string        `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string        `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	Amount               *types.Amount `protobuf:"bytes,3,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	To                   *ToSepa       `protobuf:"bytes,4,opt,name=To,json=to,proto3" json:"to,omitempty"`
	Description          string        `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	ChargePolicy         string        `protobuf:"bytes,6,opt,name=ChargePolicy,json=charge_policy,proto3" json:"charge_policy,omitempty"`
	FutureDate           string        `protobuf:"bytes,7,opt,name=FutureDate,json=future_date,proto3" json:"future_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SEPATransactionRequest) Reset()         { *m = SEPATransactionRequest{} }
func (m *SEPATransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SEPATransactionRequest) ProtoMessage()    {}
func (*SEPATransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{22}
}

func (m *SEPATransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SEPATransactionRequest.Unmarshal(m, b)
}
func (m *SEPATransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SEPATransactionRequest.Marshal(b, m, deterministic)
}
func (m *SEPATransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SEPATransactionRequest.Merge(m, src)
}
func (m *SEPATransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SEPATransactionRequest.Size(m)
}
func (m *SEPATransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SEPATransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SEPATransactionRequest proto.InternalMessageInfo

func (m *SEPATransactionRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *SEPATransactionRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *SEPATransactionRequest) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SEPATransactionRequest) GetTo() *ToSepa {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SEPATransactionRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SEPATransactionRequest) GetChargePolicy() string {
	if m != nil {
		return m.ChargePolicy
	}
	return ""
}

func (m *SEPATransactionRequest) GetFutureDate() string {
	if m != nil {
		return m.FutureDate
	}
	return ""
}

type GetTransactionRequestTypesRequest struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequestTypesRequest) Reset()         { *m = GetTransactionRequestTypesRequest{} }
func (m *GetTransactionRequestTypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequestTypesRequest) ProtoMessage()    {}
func (*GetTransactionRequestTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{23}
}

func (m *GetTransactionRequestTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequestTypesRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequestTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequestTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequestTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequestTypesRequest.Merge(m, src)
}
func (m *GetTransactionRequestTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequestTypesRequest.Size(m)
}
func (m *GetTransactionRequestTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequestTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequestTypesRequest proto.InternalMessageInfo

func (m *GetTransactionRequestTypesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetTransactionRequestTypesRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type GetTransactionRequestTypesResponse struct {
	TransactionRequestTypes []*TransactionRequestType `protobuf:"bytes,1,rep,name=TransactionRequestTypes,json=transaction_request_types,proto3" json:"transaction_request_types,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *GetTransactionRequestTypesResponse) Reset()         { *m = GetTransactionRequestTypesResponse{} }
func (m *GetTransactionRequestTypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequestTypesResponse) ProtoMessage()    {}
func (*GetTransactionRequestTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{24}
}

func (m *GetTransactionRequestTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequestTypesResponse.Unmarshal(m, b)
}
func (m *GetTransactionRequestTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequestTypesResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequestTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequestTypesResponse.Merge(m, src)
}
func (m *GetTransactionRequestTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequestTypesResponse.Size(m)
}
func (m *GetTransactionRequestTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequestTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequestTypesResponse proto.InternalMessageInfo

func (m *GetTransactionRequestTypesResponse) GetTransactionRequestTypes() []*TransactionRequestType {
	if m != nil {
		return m.TransactionRequestTypes
	}
	return nil
}

type TransactionRequestType struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,json=value,proto3" json:"value,omitempty"`
	Charge               *Charge  `protobuf:"bytes,2,opt,name=Charge,json=charge,proto3" json:"charge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRequestType) Reset()         { *m = TransactionRequestType{} }
func (m *TransactionRequestType) String() string { return proto.CompactTextString(m) }
func (*TransactionRequestType) ProtoMessage()    {}
func (*TransactionRequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{25}
}

func (m *TransactionRequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequestType.Unmarshal(m, b)
}
func (m *TransactionRequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequestType.Marshal(b, m, deterministic)
}
func (m *TransactionRequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequestType.Merge(m, src)
}
func (m *TransactionRequestType) XXX_Size() int {
	return xxx_messageInfo_TransactionRequestType.Size(m)
}
func (m *TransactionRequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequestType.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequestType proto.InternalMessageInfo

func (m *TransactionRequestType) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TransactionRequestType) GetCharge() *Charge {
	if m != nil {
		return m.Charge
	}
	return nil
}

type GetTransactionRequestsRequest struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID            string   `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequestsRequest) Reset()         { *m = GetTransactionRequestsRequest{} }
func (m *GetTransactionRequestsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequestsRequest) ProtoMessage()    {}
func (*GetTransactionRequestsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{26}
}

func (m *GetTransactionRequestsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequestsRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequestsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequestsRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequestsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequestsRequest.Merge(m, src)
}
func (m *GetTransactionRequestsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequestsRequest.Size(m)
}
func (m *GetTransactionRequestsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequestsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequestsRequest proto.InternalMessageInfo

func (m *GetTransactionRequestsRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *GetTransactionRequestsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type GetTransactionRequestsResponse struct {
	TransactionRequestsWithCharges []*TransactionRequestsWithCharges `protobuf:"bytes,1,rep,name=TransactionRequestsWithCharges,json=transaction_requests_with_charges,proto3" json:"transaction_requests_with_charges,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                          `json:"-"`
	XXX_unrecognized               []byte                            `json:"-"`
	XXX_sizecache                  int32                             `json:"-"`
}

func (m *GetTransactionRequestsResponse) Reset()         { *m = GetTransactionRequestsResponse{} }
func (m *GetTransactionRequestsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequestsResponse) ProtoMessage()    {}
func (*GetTransactionRequestsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{27}
}

func (m *GetTransactionRequestsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequestsResponse.Unmarshal(m, b)
}
func (m *GetTransactionRequestsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequestsResponse.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequestsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequestsResponse.Merge(m, src)
}
func (m *GetTransactionRequestsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequestsResponse.Size(m)
}
func (m *GetTransactionRequestsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequestsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequestsResponse proto.InternalMessageInfo

func (m *GetTransactionRequestsResponse) GetTransactionRequestsWithCharges() []*TransactionRequestsWithCharges {
	if m != nil {
		return m.TransactionRequestsWithCharges
	}
	return nil
}

type TransactionRequestsWithCharges struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=Type,json=type,proto3" json:"type,omitempty"`
	From                 *FromPhone           `protobuf:"bytes,3,opt,name=From,json=from,proto3" json:"from,omitempty"`
	Details              *Details             `protobuf:"bytes,4,opt,name=Details,json=details,proto3" json:"details,omitempty"`
	TransactionIds       []string             `protobuf:"bytes,5,rep,name=TransactionIds,json=transaction_ids,proto3" json:"transaction_ids,omitempty"`
	Status               string               `protobuf:"bytes,6,opt,name=Status,json=status,proto3" json:"status,omitempty"`
	StartDate            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=StartDate,json=start_date,proto3" json:"start_date,omitempty"`
	EndDate              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=EndDate,json=end_date,proto3" json:"end_date,omitempty"`
	Challenge            *Challenge           `protobuf:"bytes,9,opt,name=Challenge,json=challenge,proto3" json:"challenge,omitempty"`
	Charge               *Charge              `protobuf:"bytes,10,opt,name=Charge,json=charge,proto3" json:"charge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TransactionRequestsWithCharges) Reset()         { *m = TransactionRequestsWithCharges{} }
func (m *TransactionRequestsWithCharges) String() string { return proto.CompactTextString(m) }
func (*TransactionRequestsWithCharges) ProtoMessage()    {}
func (*TransactionRequestsWithCharges) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{28}
}

func (m *TransactionRequestsWithCharges) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequestsWithCharges.Unmarshal(m, b)
}
func (m *TransactionRequestsWithCharges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequestsWithCharges.Marshal(b, m, deterministic)
}
func (m *TransactionRequestsWithCharges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequestsWithCharges.Merge(m, src)
}
func (m *TransactionRequestsWithCharges) XXX_Size() int {
	return xxx_messageInfo_TransactionRequestsWithCharges.Size(m)
}
func (m *TransactionRequestsWithCharges) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequestsWithCharges.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequestsWithCharges proto.InternalMessageInfo

func (m *TransactionRequestsWithCharges) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TransactionRequestsWithCharges) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TransactionRequestsWithCharges) GetFrom() *FromPhone {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetDetails() *Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetTransactionIds() []string {
	if m != nil {
		return m.TransactionIds
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TransactionRequestsWithCharges) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetChallenge() *Challenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *TransactionRequestsWithCharges) GetCharge() *Charge {
	if m != nil {
		return m.Charge
	}
	return nil
}

type GetSupportedTransactionRequestTypesRequest struct {
	BankID               string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSupportedTransactionRequestTypesRequest) Reset() {
	*m = GetSupportedTransactionRequestTypesRequest{}
}
func (m *GetSupportedTransactionRequestTypesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*GetSupportedTransactionRequestTypesRequest) ProtoMessage() {}
func (*GetSupportedTransactionRequestTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{29}
}

func (m *GetSupportedTransactionRequestTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesRequest.Unmarshal(m, b)
}
func (m *GetSupportedTransactionRequestTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetSupportedTransactionRequestTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSupportedTransactionRequestTypesRequest.Merge(m, src)
}
func (m *GetSupportedTransactionRequestTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesRequest.Size(m)
}
func (m *GetSupportedTransactionRequestTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSupportedTransactionRequestTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSupportedTransactionRequestTypesRequest proto.InternalMessageInfo

func (m *GetSupportedTransactionRequestTypesRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

type GetSupportedTransactionRequestTypesResponse struct {
	TransactionRequestTypes []*TransactionRequestType `protobuf:"bytes,1,rep,name=TransactionRequestTypes,json=transaction_request_types,proto3" json:"transaction_request_types,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *GetSupportedTransactionRequestTypesResponse) Reset() {
	*m = GetSupportedTransactionRequestTypesResponse{}
}
func (m *GetSupportedTransactionRequestTypesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetSupportedTransactionRequestTypesResponse) ProtoMessage() {}
func (*GetSupportedTransactionRequestTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{30}
}

func (m *GetSupportedTransactionRequestTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesResponse.Unmarshal(m, b)
}
func (m *GetSupportedTransactionRequestTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesResponse.Marshal(b, m, deterministic)
}
func (m *GetSupportedTransactionRequestTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSupportedTransactionRequestTypesResponse.Merge(m, src)
}
func (m *GetSupportedTransactionRequestTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetSupportedTransactionRequestTypesResponse.Size(m)
}
func (m *GetSupportedTransactionRequestTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSupportedTransactionRequestTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSupportedTransactionRequestTypesResponse proto.InternalMessageInfo

func (m *GetSupportedTransactionRequestTypesResponse) GetTransactionRequestTypes() []*TransactionRequestType {
	if m != nil {
		return m.TransactionRequestTypes
	}
	return nil
}

type AnswerTransactionRequestChallengeRequest struct {
	BankID                 string   `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"bank_id,omitempty"`
	AccountID              string   `protobuf:"bytes,2,opt,name=AccountID,json=account_id,proto3" json:"account_id,omitempty"`
	TransactionRequestType string   `protobuf:"bytes,3,opt,name=TransactionRequestType,json=transaction_request_type,proto3" json:"transaction_request_type,omitempty"`
	TransactionRequestID   string   `protobuf:"bytes,4,opt,name=TransactionRequestID,json=transaction_request_id,proto3" json:"transaction_request_id,omitempty"`
	ID                     string   `protobuf:"bytes,5,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Answer                 string   `protobuf:"bytes,6,opt,name=Answer,json=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AnswerTransactionRequestChallengeRequest) Reset() {
	*m = AnswerTransactionRequestChallengeRequest{}
}
func (m *AnswerTransactionRequestChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*AnswerTransactionRequestChallengeRequest) ProtoMessage()    {}
func (*AnswerTransactionRequestChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{31}
}

func (m *AnswerTransactionRequestChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerTransactionRequestChallengeRequest.Unmarshal(m, b)
}
func (m *AnswerTransactionRequestChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerTransactionRequestChallengeRequest.Marshal(b, m, deterministic)
}
func (m *AnswerTransactionRequestChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerTransactionRequestChallengeRequest.Merge(m, src)
}
func (m *AnswerTransactionRequestChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_AnswerTransactionRequestChallengeRequest.Size(m)
}
func (m *AnswerTransactionRequestChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerTransactionRequestChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerTransactionRequestChallengeRequest proto.InternalMessageInfo

func (m *AnswerTransactionRequestChallengeRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeRequest) GetTransactionRequestType() string {
	if m != nil {
		return m.TransactionRequestType
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeRequest) GetTransactionRequestID() string {
	if m != nil {
		return m.TransactionRequestID
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeRequest) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

type AnswerTransactionRequestChallengeResponse struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Type                 string               `protobuf:"bytes,2,opt,name=Type,json=type,proto3" json:"type,omitempty"`
	From                 *BankAccount         `protobuf:"bytes,3,opt,name=From,json=from,proto3" json:"from,omitempty"`
	Details              *ChallengeDetails    `protobuf:"bytes,4,opt,name=Details,json=details,proto3" json:"details,omitempty"`
	TransactionIds       string               `protobuf:"bytes,5,opt,name=TransactionIds,json=transaction_ids,proto3" json:"transaction_ids,omitempty"`
	Status               string               `protobuf:"bytes,6,opt,name=Status,json=status,proto3" json:"status,omitempty"`
	StartDate            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=StartDate,json=start_date,proto3" json:"start_date,omitempty"`
	EndDate              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=EndDate,json=end_date,proto3" json:"end_date,omitempty"`
	Challenge            *Challenge           `protobuf:"bytes,9,opt,name=Challenge,json=challenge,proto3" json:"challenge,omitempty"`
	Charge               *Charge              `protobuf:"bytes,10,opt,name=Charge,json=charge,proto3" json:"charge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AnswerTransactionRequestChallengeResponse) Reset() {
	*m = AnswerTransactionRequestChallengeResponse{}
}
func (m *AnswerTransactionRequestChallengeResponse) String() string {
	return proto.CompactTextString(m)
}
func (*AnswerTransactionRequestChallengeResponse) ProtoMessage() {}
func (*AnswerTransactionRequestChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{32}
}

func (m *AnswerTransactionRequestChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerTransactionRequestChallengeResponse.Unmarshal(m, b)
}
func (m *AnswerTransactionRequestChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerTransactionRequestChallengeResponse.Marshal(b, m, deterministic)
}
func (m *AnswerTransactionRequestChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerTransactionRequestChallengeResponse.Merge(m, src)
}
func (m *AnswerTransactionRequestChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_AnswerTransactionRequestChallengeResponse.Size(m)
}
func (m *AnswerTransactionRequestChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerTransactionRequestChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerTransactionRequestChallengeResponse proto.InternalMessageInfo

func (m *AnswerTransactionRequestChallengeResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeResponse) GetFrom() *BankAccount {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *AnswerTransactionRequestChallengeResponse) GetDetails() *ChallengeDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *AnswerTransactionRequestChallengeResponse) GetTransactionIds() string {
	if m != nil {
		return m.TransactionIds
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AnswerTransactionRequestChallengeResponse) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *AnswerTransactionRequestChallengeResponse) GetEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *AnswerTransactionRequestChallengeResponse) GetChallenge() *Challenge {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *AnswerTransactionRequestChallengeResponse) GetCharge() *Charge {
	if m != nil {
		return m.Charge
	}
	return nil
}

type ChallengeDetails struct {
	To                   *BankAccount  `protobuf:"bytes,1,opt,name=To,json=to,proto3" json:"to,omitempty"`
	Amount               *types.Amount `protobuf:"bytes,2,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description          string        `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChallengeDetails) Reset()         { *m = ChallengeDetails{} }
func (m *ChallengeDetails) String() string { return proto.CompactTextString(m) }
func (*ChallengeDetails) ProtoMessage()    {}
func (*ChallengeDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{33}
}

func (m *ChallengeDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChallengeDetails.Unmarshal(m, b)
}
func (m *ChallengeDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChallengeDetails.Marshal(b, m, deterministic)
}
func (m *ChallengeDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChallengeDetails.Merge(m, src)
}
func (m *ChallengeDetails) XXX_Size() int {
	return xxx_messageInfo_ChallengeDetails.Size(m)
}
func (m *ChallengeDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ChallengeDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ChallengeDetails proto.InternalMessageInfo

func (m *ChallengeDetails) GetTo() *BankAccount {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *ChallengeDetails) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ChallengeDetails) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type HistoricTransaction struct {
	From                   *BankAccount         `protobuf:"bytes,1,opt,name=From,json=from,proto3" json:"from,omitempty"`
	To                     *BankAccount         `protobuf:"bytes,2,opt,name=To,json=to,proto3" json:"to,omitempty"`
	Amount                 *types.Amount        `protobuf:"bytes,3,opt,name=Amount,json=amount,proto3" json:"amount,omitempty"`
	Description            string               `protobuf:"bytes,4,opt,name=Description,json=description,proto3" json:"description,omitempty"`
	Posted                 *timestamp.Timestamp `protobuf:"bytes,5,opt,name=Posted,json=posted,proto3" json:"posted,omitempty"`
	Completed              *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Completed,json=completed,proto3" json:"completed,omitempty"`
	TransactionRequestType string               `protobuf:"bytes,7,opt,name=TransactionRequestType,json=transaction_request_type,proto3" json:"transaction_request_type,omitempty"`
	ChargePolicy           string               `protobuf:"bytes,8,opt,name=ChargePolicy,json=charge_policy,proto3" json:"charge_policy,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *HistoricTransaction) Reset()         { *m = HistoricTransaction{} }
func (m *HistoricTransaction) String() string { return proto.CompactTextString(m) }
func (*HistoricTransaction) ProtoMessage()    {}
func (*HistoricTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_40049e30d743c4e6, []int{34}
}

func (m *HistoricTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoricTransaction.Unmarshal(m, b)
}
func (m *HistoricTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoricTransaction.Marshal(b, m, deterministic)
}
func (m *HistoricTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoricTransaction.Merge(m, src)
}
func (m *HistoricTransaction) XXX_Size() int {
	return xxx_messageInfo_HistoricTransaction.Size(m)
}
func (m *HistoricTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoricTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_HistoricTransaction proto.InternalMessageInfo

func (m *HistoricTransaction) GetFrom() *BankAccount {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *HistoricTransaction) GetTo() *BankAccount {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *HistoricTransaction) GetAmount() *types.Amount {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *HistoricTransaction) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *HistoricTransaction) GetPosted() *timestamp.Timestamp {
	if m != nil {
		return m.Posted
	}
	return nil
}

func (m *HistoricTransaction) GetCompleted() *timestamp.Timestamp {
	if m != nil {
		return m.Completed
	}
	return nil
}

func (m *HistoricTransaction) GetTransactionRequestType() string {
	if m != nil {
		return m.TransactionRequestType
	}
	return ""
}

func (m *HistoricTransaction) GetChargePolicy() string {
	if m != nil {
		return m.ChargePolicy
	}
	return ""
}

func init() {
	proto.RegisterType((*TransactionRequest)(nil), "transactionrequest.TransactionRequest")
	proto.RegisterType((*BankAccount)(nil), "transactionrequest.BankAccount")
	proto.RegisterType((*TransactionResponse)(nil), "transactionrequest.TransactionResponse")
	proto.RegisterType((*ToSepa)(nil), "transactionrequest.ToSepa")
	proto.RegisterType((*ToCounterparty)(nil), "transactionrequest.ToCounterparty")
	proto.RegisterType((*ToTransferToPhone)(nil), "transactionrequest.ToTransferToPhone")
	proto.RegisterType((*FromPhone)(nil), "transactionrequest.FromPhone")
	proto.RegisterType((*ToPhone)(nil), "transactionrequest.ToPhone")
	proto.RegisterType((*KycDocument)(nil), "transactionrequest.KycDocument")
	proto.RegisterType((*To)(nil), "transactionrequest.To")
	proto.RegisterType((*ToTransferToAtm)(nil), "transactionrequest.ToTransferToAtm")
	proto.RegisterType((*Account)(nil), "transactionrequest.Account")
	proto.RegisterType((*ToAccount)(nil), "transactionrequest.ToAccount")
	proto.RegisterType((*ToTransferToAccount)(nil), "transactionrequest.ToTransferToAccount")
	proto.RegisterType((*DebtorAccount)(nil), "transactionrequest.DebtorAccount")
	proto.RegisterType((*CreditorAccount)(nil), "transactionrequest.CreditorAccount")
	proto.RegisterType((*ToSepaCreditTransfers)(nil), "transactionrequest.ToSepaCreditTransfers")
	proto.RegisterType((*Details)(nil), "transactionrequest.Details")
	proto.RegisterType((*Challenge)(nil), "transactionrequest.Challenge")
	proto.RegisterType((*Charge)(nil), "transactionrequest.Charge")
	proto.RegisterType((*CounterPartyTransactionRequest)(nil), "transactionrequest.CounterPartyTransactionRequest")
	proto.RegisterType((*FreeFormTransactionRequest)(nil), "transactionrequest.FreeFormTransactionRequest")
	proto.RegisterType((*SEPATransactionRequest)(nil), "transactionrequest.SEPATransactionRequest")
	proto.RegisterType((*GetTransactionRequestTypesRequest)(nil), "transactionrequest.GetTransactionRequestTypesRequest")
	proto.RegisterType((*GetTransactionRequestTypesResponse)(nil), "transactionrequest.GetTransactionRequestTypesResponse")
	proto.RegisterType((*TransactionRequestType)(nil), "transactionrequest.TransactionRequestType")
	proto.RegisterType((*GetTransactionRequestsRequest)(nil), "transactionrequest.GetTransactionRequestsRequest")
	proto.RegisterType((*GetTransactionRequestsResponse)(nil), "transactionrequest.GetTransactionRequestsResponse")
	proto.RegisterType((*TransactionRequestsWithCharges)(nil), "transactionrequest.TransactionRequestsWithCharges")
	proto.RegisterType((*GetSupportedTransactionRequestTypesRequest)(nil), "transactionrequest.GetSupportedTransactionRequestTypesRequest")
	proto.RegisterType((*GetSupportedTransactionRequestTypesResponse)(nil), "transactionrequest.GetSupportedTransactionRequestTypesResponse")
	proto.RegisterType((*AnswerTransactionRequestChallengeRequest)(nil), "transactionrequest.AnswerTransactionRequestChallengeRequest")
	proto.RegisterType((*AnswerTransactionRequestChallengeResponse)(nil), "transactionrequest.AnswerTransactionRequestChallengeResponse")
	proto.RegisterType((*ChallengeDetails)(nil), "transactionrequest.ChallengeDetails")
	proto.RegisterType((*HistoricTransaction)(nil), "transactionrequest.HistoricTransaction")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/transactionrequest/all.proto", fileDescriptor_40049e30d743c4e6)
}

var fileDescriptor_40049e30d743c4e6 = []byte{
	// 3154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x9b, 0x5b, 0x6c, 0x1b, 0xc7,
	0xd5, 0x80, 0xb9, 0x4b, 0x8a, 0x92, 0x46, 0xbe, 0x65, 0x9c, 0x38, 0x0c, 0x13, 0x3b, 0x6b, 0x39,
	0x89, 0xef, 0xa4, 0x24, 0xc7, 0x71, 0xe2, 0xc4, 0x76, 0x28, 0xc9, 0x72, 0x24, 0xc7, 0x16, 0x7f,
	0x8a, 0x49, 0x7e, 0x07, 0x41, 0xf8, 0x0f, 0x77, 0x87, 0xe2, 0xfe, 0x26, 0x77, 0xd6, 0x3b, 0x43,
	0xc9, 0xaa, 0x61, 0xa0, 0x08, 0xfa, 0x90, 0x14, 0x6d, 0x92, 0xaa, 0x45, 0x91, 0x14, 0x6d, 0x11,
	0xb4, 0x7d, 0x69, 0x81, 0x3e, 0xb4, 0xc8, 0x43, 0x80, 0xbe, 0x17, 0x48, 0x5e, 0x12, 0xf4, 0x82,
	0xf6, 0xb9, 0x28, 0xd0, 0x3e, 0x16, 0x28, 0xd0, 0x0b, 0x82, 0x02, 0xc5, 0xcc, 0x2e, 0x97, 0xbb,
	0xe4, 0x2c, 0x6f, 0x8a, 0x12, 0x1b, 0xc8, 0x53, 0x62, 0xce, 0x99, 0x33, 0x73, 0xce, 0xf9, 0xce,
	0x99, 0x33, 0x43, 0x0a, 0x3c, 0xb3, 0x6a, 0xb2, 0x6a, 0xa3, 0x9c, 0xd1, 0x49, 0x3d, 0x4b, 0x6c,
	0x6c, 0x95, 0x91, 0x75, 0xbd, 0xf5, 0x3f, 0x6b, 0xd3, 0x59, 0xe6, 0x20, 0x8b, 0x22, 0x9d, 0x99,
	0xc4, 0x72, 0xf0, 0x8d, 0x06, 0xa6, 0x2c, 0x8b, 0x6a, 0xb5, 0x8c, 0xed, 0x10, 0x46, 0x20, 0xec,
	0x1c, 0x4d, 0x3f, 0xbc, 0x4a, 0xc8, 0x6a, 0x0d, 0x67, 0x85, 0x44, 0xb9, 0x51, 0xc9, 0x32, 0xb3,
	0x8e, 0x29, 0x43, 0x75, 0xdb, 0x9d, 0x94, 0x7e, 0xc8, 0x13, 0x40, 0xb6, 0x99, 0x45, 0x96, 0x45,
	0x18, 0xe2, 0xd3, 0xa9, 0x37, 0x7a, 0x42, 0xfc, 0x47, 0x3f, 0xb9, 0x8a, 0xad, 0x93, 0x74, 0x1d,
	0xad, 0xae, 0x62, 0x27, 0x4b, 0x6c, 0x21, 0x21, 0x91, 0xce, 0xf6, 0xdc, 0xfe, 0x86, 0x8d, 0x69,
	0x6b, 0xc7, 0x93, 0x6f, 0xa9, 0x00, 0x16, 0x5b, 0x9b, 0x2e, 0xb8, 0x9b, 0x86, 0x87, 0x40, 0x72,
	0x16, 0x59, 0xd7, 0x17, 0xe7, 0x53, 0x8a, 0xa6, 0x1c, 0x19, 0x9f, 0x05, 0x63, 0xb1, 0x54, 0xec,
	0x48, 0x6c, 0x2a, 0x96, 0x8f, 0x15, 0x46, 0xb9, 0xae, 0x92, 0x69, 0xc0, 0xa3, 0x60, 0x3c, 0xa7,
	0xeb, 0xa4, 0x61, 0xb1, 0xc5, 0xf9, 0x94, 0xda, 0x21, 0x07, 0x90, 0x3b, 0xc8, 0x45, 0x9f, 0x05,
	0x6a, 0x91, 0xa4, 0xe2, 0x9a, 0x72, 0x64, 0x62, 0xe6, 0xe1, 0x4c, 0xa7, 0x97, 0x32, 0x7c, 0x35,
	0x4f, 0x59, 0x78, 0x31, 0x46, 0x4a, 0x7c, 0x3d, 0x38, 0x0d, 0x92, 0xb9, 0x3a, 0x1f, 0x4e, 0x25,
	0x84, 0x96, 0x9d, 0x19, 0x61, 0x4a, 0xc6, 0xfd, 0x30, 0x34, 0x27, 0x89, 0xc4, 0x67, 0xf0, 0x04,
	0x98, 0x98, 0xc7, 0x54, 0x77, 0x4c, 0xe1, 0xae, 0xd4, 0x48, 0xc7, 0x0e, 0x27, 0x8c, 0xd6, 0xf0,
	0xd9, 0xe4, 0x58, 0x6c, 0x4f, 0x2c, 0x15, 0x9b, 0xc4, 0x60, 0x22, 0xb0, 0x99, 0xcf, 0xda, 0x13,
	0xfe, 0x32, 0x1f, 0x26, 0xc0, 0xde, 0x90, 0xe3, 0xa9, 0x4d, 0x2c, 0x8a, 0x61, 0x1a, 0xa8, 0xd2,
	0xb5, 0x54, 0xd3, 0x80, 0x07, 0x40, 0xa2, 0xb8, 0x61, 0x63, 0xc9, 0x0a, 0x09, 0xee, 0x0c, 0x78,
	0x01, 0x24, 0x16, 0x1c, 0x52, 0x1f, 0xc6, 0xcf, 0x89, 0x8a, 0x43, 0xea, 0x30, 0x07, 0x46, 0xe7,
	0x31, 0x43, 0x66, 0x8d, 0x7a, 0x5e, 0x7e, 0x50, 0xa6, 0xc3, 0x13, 0x09, 0xbb, 0xc2, 0x70, 0x3f,
	0x84, 0xa7, 0xc0, 0xae, 0x80, 0x59, 0x8b, 0x06, 0x4d, 0x8d, 0x68, 0xf1, 0xb6, 0xdd, 0xee, 0x0e,
	0x28, 0x2d, 0x99, 0x06, 0x85, 0x93, 0x20, 0xb9, 0xc2, 0x10, 0x6b, 0xd0, 0x54, 0xb2, 0xc3, 0xb4,
	0x24, 0x15, 0x23, 0xf0, 0x22, 0x18, 0x5f, 0x61, 0xc8, 0x61, 0xf3, 0x88, 0xe1, 0xd4, 0xa8, 0xd8,
	0x5d, 0x3a, 0xe3, 0xa6, 0x4e, 0xa6, 0x99, 0x5b, 0x99, 0x62, 0x33, 0xb7, 0xc2, 0xfe, 0xa7, 0x7c,
	0x62, 0xc9, 0x40, 0x0c, 0x73, 0x13, 0x2f, 0x5a, 0x86, 0x50, 0x32, 0x36, 0x90, 0x92, 0x31, 0x6c,
	0x19, 0xae, 0x8a, 0x4b, 0x60, 0x7c, 0xae, 0x8a, 0x6a, 0x35, 0x6c, 0xad, 0xe2, 0xd4, 0xb8, 0x50,
	0xb2, 0x5f, 0xe6, 0x27, 0x5f, 0x28, 0xa4, 0x67, 0x5c, 0x6f, 0x7e, 0x0c, 0xcf, 0x83, 0xe4, 0x5c,
	0x15, 0x39, 0xab, 0x38, 0x05, 0xbc, 0xad, 0xc8, 0xb5, 0x38, 0x6d, 0x2a, 0x92, 0xba, 0xf8, 0xcc,
	0x67, 0x69, 0x0a, 0x24, 0x8b, 0x64, 0x05, 0xdb, 0x88, 0x13, 0xb2, 0x58, 0x46, 0x96, 0x84, 0x9f,
	0x84, 0x59, 0x46, 0x2d, 0xc8, 0xaf, 0x80, 0x5d, 0x45, 0x32, 0xc7, 0x29, 0xc0, 0x8e, 0x8d, 0x1c,
	0xb6, 0xc1, 0xe3, 0x16, 0xfc, 0xb7, 0x94, 0xc1, 0xdd, 0x7a, 0x40, 0x22, 0x08, 0xf3, 0xf7, 0x54,
	0x70, 0x4f, 0x91, 0x88, 0xb8, 0x57, 0xb0, 0x53, 0x24, 0xf9, 0x2a, 0xb1, 0x70, 0x20, 0x65, 0x95,
	0x21, 0x53, 0x56, 0xed, 0x9a, 0xb2, 0xf0, 0x11, 0x30, 0x7a, 0x05, 0x53, 0x8a, 0x56, 0xb1, 0x40,
	0xbe, 0x2d, 0x39, 0xeb, 0xee, 0x10, 0x3c, 0xe7, 0x65, 0x45, 0x22, 0x3a, 0x52, 0x7c, 0x5c, 0xec,
	0x59, 0x92, 0x13, 0x67, 0x44, 0xe9, 0x1a, 0x89, 0x4e, 0x07, 0xcf, 0xdc, 0x70, 0xb6, 0x32, 0xe2,
	0x3b, 0x67, 0x1d, 0x8c, 0xfb, 0xfa, 0xe1, 0x59, 0x70, 0xcf, 0x15, 0x52, 0x36, 0x6b, 0x58, 0xfc,
	0xf3, 0x6a, 0xa3, 0x5e, 0xc6, 0x8e, 0xc4, 0xd3, 0x7b, 0xeb, 0x42, 0xa8, 0x64, 0x73, 0xa9, 0x92,
	0x25, 0xc4, 0xe0, 0x63, 0x60, 0xec, 0xaa, 0xa9, 0x5f, 0xb7, 0x50, 0x5d, 0x56, 0x02, 0xc6, 0x2c,
	0x6f, 0x2c, 0x10, 0xe4, 0xd1, 0x66, 0x28, 0xb6, 0xb0, 0xac, 0xaf, 0xee, 0x1a, 0x98, 0xb8, 0xbc,
	0xa1, 0xcf, 0x13, 0xbd, 0x51, 0xc7, 0x16, 0xf3, 0x8b, 0x91, 0x12, 0x51, 0x8c, 0x26, 0x41, 0xd2,
	0x5b, 0xa7, 0x73, 0xaf, 0xc9, 0x36, 0xd5, 0x7f, 0x57, 0xb8, 0x93, 0x79, 0x19, 0x7d, 0x1e, 0xaf,
	0xa2, 0xda, 0x55, 0x6e, 0x61, 0xa7, 0x5e, 0x50, 0xe3, 0x83, 0x25, 0x6e, 0x23, 0xcc, 0x80, 0x09,
	0x9e, 0xc3, 0xcb, 0x95, 0x59, 0xd3, 0x61, 0x55, 0xc9, 0x12, 0x3b, 0x79, 0xaa, 0x96, 0x48, 0xa5,
	0x54, 0xe6, 0x02, 0x72, 0x07, 0xc4, 0xfb, 0xf3, 0xfb, 0xd5, 0x90, 0xe1, 0x1e, 0x47, 0xd2, 0xea,
	0x1a, 0x10, 0x0b, 0xa9, 0xdd, 0x71, 0x7d, 0x43, 0x2f, 0x19, 0xde, 0x88, 0x6f, 0xf5, 0x3b, 0x2a,
	0xd8, 0x1d, 0xcc, 0x9a, 0x1c, 0xab, 0x7f, 0x99, 0x33, 0xae, 0x6b, 0x5e, 0x00, 0xa3, 0xcd, 0x03,
	0xb8, 0xc5, 0x91, 0x12, 0xc5, 0x91, 0x5f, 0xf6, 0xd4, 0x1e, 0x65, 0xef, 0x13, 0x05, 0x8c, 0x17,
	0x49, 0x53, 0xf3, 0x01, 0x90, 0x88, 0x20, 0x2d, 0x21, 0x18, 0x3b, 0x0c, 0xc6, 0xf8, 0x71, 0x39,
	0x47, 0x0c, 0x59, 0xbe, 0x8d, 0x8b, 0xc3, 0x5f, 0x27, 0x06, 0x86, 0x59, 0xb0, 0x63, 0xd6, 0x41,
	0x96, 0x5e, 0x8d, 0xe4, 0x6a, 0x67, 0x59, 0x8c, 0x37, 0x89, 0xca, 0xf9, 0xe6, 0x75, 0x3b, 0x67,
	0xa5, 0xfd, 0x90, 0xd7, 0x4a, 0xf8, 0x26, 0xbd, 0xad, 0x82, 0xbd, 0x21, 0x88, 0x3c, 0xe3, 0xb6,
	0x1d, 0xa4, 0x2c, 0xd8, 0xe1, 0xaf, 0xca, 0xeb, 0x80, 0xc4, 0x68, 0xe6, 0x8d, 0x97, 0x44, 0x41,
	0x38, 0x0e, 0xc0, 0x42, 0x83, 0x35, 0x1c, 0x2c, 0x0e, 0xdf, 0x44, 0xa7, 0xf6, 0x8a, 0x18, 0x75,
	0xcf, 0xd8, 0x99, 0x00, 0x41, 0xfb, 0xe4, 0x04, 0x45, 0xc2, 0x73, 0x06, 0xec, 0x9c, 0xc7, 0x65,
	0x46, 0x9c, 0x40, 0xa0, 0xfb, 0x3a, 0x15, 0x9f, 0x02, 0xbb, 0xe7, 0x1c, 0x6c, 0x98, 0x43, 0x4c,
	0xfd, 0x48, 0x05, 0xf7, 0xb9, 0x67, 0xb0, 0xab, 0xa1, 0xe9, 0x1a, 0x0a, 0x8b, 0x6d, 0xbb, 0xf1,
	0xe2, 0x71, 0x50, 0xde, 0x59, 0x05, 0x04, 0x43, 0xab, 0xed, 0x32, 0xc4, 0x50, 0xc9, 0x0b, 0x3f,
	0x5c, 0x00, 0x7b, 0x16, 0x2d, 0xca, 0x9c, 0x86, 0xce, 0xb0, 0xe1, 0x05, 0x5a, 0xed, 0x15, 0xe8,
	0x7b, 0x4c, 0x7f, 0x4a, 0xc9, 0x8b, 0xf9, 0xcb, 0x1d, 0x26, 0x7b, 0xdd, 0xe3, 0x21, 0x69, 0x2f,
	0x12, 0x16, 0x0d, 0x29, 0xdf, 0xa3, 0x7b, 0x83, 0xfe, 0x1e, 0xb3, 0x60, 0x47, 0x73, 0x82, 0xc8,
	0xb3, 0xce, 0x90, 0xef, 0xf4, 0xe7, 0x84, 0x0e, 0xae, 0x4f, 0x47, 0xfc, 0x3e, 0x14, 0xfe, 0x0f,
	0xd8, 0x51, 0x24, 0x2b, 0xc8, 0x32, 0xca, 0xe4, 0x66, 0xd1, 0x0b, 0xc4, 0x80, 0xbd, 0xed, 0x2e,
	0x46, 0x4a, 0xd4, 0xd5, 0x50, 0x62, 0xc8, 0x82, 0x17, 0x9a, 0xed, 0x92, 0xe7, 0xb1, 0xb4, 0x9c,
	0x2f, 0x2e, 0xd1, 0x71, 0x17, 0xa1, 0xbc, 0xcb, 0x7a, 0xa9, 0xbd, 0x7b, 0xf2, 0x7c, 0x36, 0x29,
	0x57, 0x14, 0x94, 0x6c, 0xeb, 0x83, 0x49, 0x29, 0xd8, 0x52, 0xc1, 0xb2, 0xa4, 0x8d, 0xf2, 0x2a,
	0xc4, 0xa3, 0x72, 0xdd, 0x6d, 0xc2, 0x21, 0xf5, 0xf7, 0x32, 0x52, 0x6a, 0xa5, 0x20, 0x71, 0x0f,
	0x35, 0xf8, 0x4a, 0xc7, 0xa1, 0xe3, 0xa5, 0xd9, 0xa1, 0x5e, 0x2b, 0xe4, 0x58, 0x3d, 0xa4, 0x1f,
	0xb6, 0xe9, 0x47, 0xac, 0x0e, 0xab, 0xd2, 0x6a, 0x24, 0xda, 0xfa, 0x89, 0x99, 0xc3, 0x3d, 0x57,
	0x90, 0x44, 0x6f, 0x5f, 0xfb, 0x2a, 0x1e, 0x5d, 0x56, 0x44, 0xc2, 0x79, 0x77, 0x83, 0xa3, 0xd1,
	0x41, 0x6d, 0x9b, 0x10, 0x5a, 0x2d, 0xe5, 0xc5, 0xb8, 0xe4, 0x92, 0xe9, 0xaf, 0x4c, 0x03, 0x05,
	0x75, 0x6c, 0xc8, 0x82, 0x3a, 0xde, 0xdf, 0x05, 0xf4, 0x5d, 0x25, 0x70, 0xbf, 0xe8, 0x7a, 0x1f,
	0x3c, 0x0d, 0x76, 0xe7, 0x6a, 0x35, 0xb2, 0x8e, 0x8d, 0x1c, 0x63, 0xb8, 0x6e, 0x33, 0x2a, 0x88,
	0x1e, 0x09, 0xe7, 0x25, 0x72, 0x45, 0x4a, 0xc8, 0x93, 0x81, 0xd3, 0x60, 0xa7, 0xaf, 0x3f, 0xa2,
	0x74, 0xef, 0xf2, 0x2f, 0x29, 0xa2, 0x76, 0xfb, 0x7b, 0x33, 0x9b, 0x37, 0x16, 0xde, 0x47, 0xac,
	0x34, 0xea, 0x75, 0xe4, 0x6c, 0xc8, 0x2e, 0xc6, 0xd4, 0x1d, 0x0a, 0x38, 0x4d, 0xed, 0xd3, 0x69,
	0xfe, 0x52, 0xff, 0x54, 0xc1, 0x01, 0x2f, 0x73, 0xf2, 0x3c, 0x39, 0x3e, 0x87, 0x57, 0x8a, 0xf3,
	0x81, 0x57, 0x8a, 0x41, 0x73, 0x59, 0x65, 0x64, 0xdb, 0xdf, 0x28, 0x44, 0x45, 0x15, 0xee, 0xcf,
	0x93, 0x9a, 0xa9, 0x6f, 0x48, 0x6e, 0xcb, 0x3b, 0xdd, 0xab, 0x61, 0xc9, 0x16, 0x02, 0x6d, 0x67,
	0xee, 0x68, 0xd7, 0x33, 0xd7, 0xf7, 0xfc, 0xef, 0x15, 0x90, 0x5e, 0x70, 0x30, 0x5e, 0x20, 0x4e,
	0xfd, 0x73, 0xf0, 0x7a, 0xcb, 0x6b, 0xf1, 0x21, 0xbd, 0x96, 0xe8, 0x2f, 0xb1, 0xfe, 0xa2, 0x82,
	0x7d, 0x2b, 0x17, 0xf3, 0xb9, 0x3b, 0xd3, 0xa6, 0x27, 0x04, 0x7c, 0x89, 0x81, 0x4e, 0x24, 0x0e,
	0xdd, 0x9d, 0x48, 0xd0, 0x2d, 0x70, 0xf0, 0x12, 0x66, 0x9d, 0x7e, 0xe6, 0xd5, 0x86, 0x6e, 0x93,
	0xcf, 0xfd, 0xc5, 0xdf, 0x53, 0xc0, 0x64, 0xb7, 0xd5, 0xbd, 0x87, 0x36, 0x07, 0xdc, 0x1f, 0x21,
	0x92, 0x52, 0xb4, 0xf8, 0x91, 0x89, 0x99, 0x63, 0xd2, 0x20, 0x48, 0xa7, 0x84, 0xf6, 0xf4, 0x40,
	0xf0, 0x75, 0xcb, 0x9b, 0x27, 0xaa, 0x28, 0xf5, 0xb7, 0xf8, 0x9a, 0x02, 0xf6, 0xc9, 0x35, 0x41,
	0x0d, 0x8c, 0xbc, 0x88, 0x6a, 0x0d, 0xd9, 0xad, 0x64, 0x64, 0x8d, 0x0f, 0x04, 0x5e, 0x8d, 0xd4,
	0x2d, 0xbd, 0x1a, 0xad, 0x83, 0xfd, 0x52, 0x37, 0x6d, 0x7b, 0x80, 0xde, 0x57, 0xc0, 0x81, 0xa8,
	0x95, 0xbd, 0xe0, 0xbc, 0xa1, 0x80, 0x03, 0x92, 0xf1, 0x97, 0x4c, 0x56, 0x75, 0x2d, 0x6b, 0x06,
	0x69, 0xa6, 0xbf, 0x20, 0x05, 0x67, 0x86, 0xf6, 0x77, 0x50, 0x12, 0x2c, 0x5a, 0x5a, 0x37, 0x59,
	0xb5, 0xe4, 0xba, 0xab, 0x15, 0xb4, 0xdf, 0x24, 0x7a, 0xed, 0x69, 0x4b, 0x8f, 0xb7, 0xe7, 0x42,
	0x8f, 0xb7, 0x03, 0x5f, 0xb9, 0xbf, 0x7c, 0xba, 0xbd, 0x2b, 0x9f, 0x6e, 0xaf, 0x81, 0x63, 0x97,
	0x30, 0x5b, 0x69, 0xd8, 0x36, 0x71, 0x18, 0x36, 0x3e, 0x83, 0x92, 0xe9, 0xab, 0xfe, 0xa9, 0x02,
	0x8e, 0xf7, 0xa5, 0xfb, 0x0e, 0x28, 0x88, 0x1f, 0xa9, 0xe0, 0x48, 0xce, 0xa2, 0xeb, 0xd8, 0xe9,
	0xd4, 0xe7, 0xc7, 0x62, 0xbb, 0x0e, 0xeb, 0xf9, 0xa8, 0x62, 0x2c, 0x69, 0x8c, 0x53, 0x51, 0xb6,
	0xc0, 0x67, 0xc1, 0xbd, 0x9d, 0x5a, 0x16, 0xe7, 0x25, 0xcd, 0xc9, 0x3e, 0x99, 0x0e, 0xd3, 0xf0,
	0xaa, 0xc7, 0x88, 0xb4, 0x7a, 0x4c, 0x82, 0xa4, 0xeb, 0x1f, 0x59, 0x9a, 0x21, 0x31, 0xe2, 0x3b,
	0xf3, 0xaf, 0x09, 0x70, 0xb4, 0x0f, 0x67, 0xde, 0x09, 0x5f, 0x38, 0x2d, 0xb5, 0x57, 0xad, 0x47,
	0xba, 0x66, 0xe3, 0xc0, 0xe5, 0x4b, 0xf9, 0xb2, 0x7c, 0x6d, 0x6b, 0xf9, 0xfa, 0x40, 0x01, 0x7b,
	0xda, 0xa3, 0x03, 0x9f, 0x16, 0x9d, 0xec, 0x10, 0x0f, 0x35, 0xe1, 0x3b, 0x94, 0x3a, 0xe4, 0x6d,
	0x20, 0xde, 0xdf, 0x6d, 0xe0, 0xdf, 0x71, 0xb0, 0xf7, 0x39, 0x93, 0x32, 0xe2, 0x98, 0x7a, 0x80,
	0x1b, 0x9f, 0x69, 0x65, 0x58, 0xa6, 0x5d, 0xf3, 0xd5, 0xad, 0x9a, 0xbf, 0x3d, 0x97, 0x21, 0x1e,
	0xf9, 0x3c, 0xa1, 0x0c, 0x1b, 0xde, 0xab, 0x4f, 0xbf, 0x10, 0x26, 0x6d, 0x31, 0x0b, 0xce, 0x83,
	0xf1, 0x39, 0x52, 0xb7, 0x6b, 0x98, 0xab, 0x48, 0x0e, 0xa4, 0x62, 0x5c, 0x6f, 0x4e, 0xec, 0x52,
	0x72, 0x47, 0x07, 0x28, 0xb9, 0xed, 0x97, 0x99, 0xb1, 0x1e, 0x97, 0x99, 0x66, 0xec, 0x67, 0xbe,
	0x7e, 0x0c, 0x3c, 0xd0, 0xb9, 0xfe, 0x0a, 0x76, 0xd6, 0x4c, 0x1d, 0xc3, 0x7f, 0x24, 0xc0, 0xc1,
	0x9e, 0xf5, 0x13, 0x3e, 0x23, 0x7d, 0xb2, 0xef, 0xf3, 0x0c, 0x4b, 0x9f, 0x1b, 0x72, 0xb6, 0x5b,
	0xb4, 0x27, 0x3f, 0x8e, 0x6f, 0xe6, 0x7e, 0xa6, 0x86, 0x7e, 0x41, 0xa0, 0x35, 0x8f, 0x47, 0xef,
	0x20, 0xd5, 0x58, 0x15, 0x6b, 0x81, 0x45, 0x34, 0x07, 0xdf, 0xc0, 0x0d, 0xca, 0x34, 0xbf, 0x0a,
	0xa4, 0xbb, 0x48, 0x72, 0x4d, 0x2d, 0xc9, 0xa5, 0xd7, 0x14, 0x10, 0x9f, 0x99, 0x9a, 0x86, 0xb7,
	0xc0, 0x31, 0x77, 0x0e, 0x36, 0x7a, 0xcf, 0x82, 0x57, 0xc0, 0xe5, 0xf4, 0xe2, 0xa1, 0xac, 0x81,
	0x2b, 0xa6, 0x65, 0xba, 0x3f, 0x59, 0xe9, 0xb4, 0xba, 0x6f, 0xa3, 0xcb, 0x67, 0xc1, 0x93, 0x20,
	0xb9, 0x9c, 0x6b, 0xb0, 0xea, 0x0c, 0xcc, 0x80, 0x13, 0x55, 0xc6, 0x6c, 0x7a, 0x36, 0x9b, 0x45,
	0x0d, 0x56, 0xcd, 0x94, 0xad, 0xeb, 0x19, 0x46, 0x24, 0xea, 0x33, 0xeb, 0x8e, 0xc9, 0xf0, 0x6b,
	0xbf, 0xfd, 0xf3, 0xb7, 0xd5, 0xef, 0x28, 0x67, 0x95, 0x63, 0x93, 0x6f, 0x2a, 0xd9, 0xb5, 0xe9,
	0x2c, 0x6f, 0x13, 0x68, 0xf6, 0x96, 0xdb, 0x47, 0xdc, 0xce, 0x7a, 0xdd, 0x00, 0xcd, 0xde, 0xf2,
	0x9b, 0x86, 0xdb, 0x41, 0x65, 0x27, 0x3d, 0x6d, 0x27, 0xdd, 0xdf, 0xcf, 0xdc, 0x92, 0xc3, 0x7b,
	0x5b, 0xf6, 0xeb, 0xa0, 0x5b, 0xb2, 0xae, 0xe0, 0x76, 0xd6, 0xf7, 0xd2, 0xeb, 0x6a, 0xec, 0x6d,
	0x55, 0xf0, 0x0a, 0x3f, 0x8d, 0x83, 0xd4, 0x9c, 0x83, 0x11, 0xc3, 0xde, 0x2e, 0x82, 0x75, 0xe9,
	0xb1, 0xfe, 0xba, 0xaf, 0xf4, 0xe1, 0x9e, 0x72, 0x1e, 0x43, 0x6f, 0xc4, 0x37, 0x73, 0xef, 0x44,
	0x30, 0xf4, 0xa8, 0xbb, 0x0d, 0x0d, 0x59, 0x9a, 0xe7, 0x1a, 0x59, 0xa8, 0xd3, 0x47, 0x5d, 0x31,
	0xaa, 0x21, 0xcd, 0xc2, 0xeb, 0xdd, 0x44, 0x97, 0xa8, 0x0b, 0x50, 0x0d, 0x4c, 0x7b, 0xb6, 0x69,
	0x45, 0x19, 0x3b, 0x42, 0x9f, 0xa1, 0xd1, 0x86, 0xae, 0x63, 0x4a, 0x2b, 0x8d, 0x5a, 0x6d, 0x23,
	0x03, 0xcf, 0x80, 0xd3, 0xe9, 0x53, 0xbd, 0x38, 0x92, 0x98, 0xb8, 0x65, 0x62, 0x10, 0x07, 0xe6,
	0x95, 0xad, 0xf3, 0x92, 0x9b, 0x9b, 0x5b, 0x7e, 0xe1, 0x6a, 0x51, 0xb2, 0x58, 0x20, 0xfa, 0x6f,
	0x26, 0xc0, 0x83, 0xa1, 0xe8, 0x2f, 0x17, 0xf3, 0xdb, 0x0a, 0xc0, 0xbb, 0xf1, 0xcd, 0xdc, 0x4f,
	0x22, 0x00, 0x38, 0xda, 0x09, 0x00, 0x61, 0xb6, 0x14, 0x82, 0x93, 0x72, 0x08, 0x22, 0xc4, 0x97,
	0xd6, 0x5d, 0x10, 0x6c, 0x70, 0xba, 0x09, 0xc2, 0x72, 0x31, 0x7f, 0x37, 0xc0, 0x80, 0x39, 0x0c,
	0xff, 0xf7, 0x99, 0xc1, 0x50, 0x5a, 0x2e, 0xe6, 0xbb, 0x03, 0xf1, 0xe3, 0x04, 0xd8, 0xef, 0xfa,
	0x36, 0xe2, 0x1d, 0x1c, 0x4a, 0x5f, 0x3f, 0xba, 0x3f, 0x9a, 0xf7, 0x8f, 0xc7, 0x7b, 0x5d, 0xce,
	0x98, 0xe3, 0x2d, 0x3c, 0xbc, 0x2f, 0xb0, 0x34, 0xf1, 0x24, 0x2e, 0x05, 0x24, 0x1b, 0x06, 0xa4,
	0xe7, 0x84, 0xa5, 0x0d, 0x17, 0x11, 0x07, 0x9c, 0xf1, 0x6c, 0xd1, 0x84, 0x31, 0x77, 0x03, 0x24,
	0x15, 0x0e, 0x09, 0xda, 0x3a, 0x24, 0x02, 0x91, 0x8b, 0x85, 0x7c, 0xae, 0x50, 0xbc, 0xd6, 0x9d,
	0x92, 0x6f, 0x24, 0xc0, 0x03, 0xae, 0x83, 0x25, 0x6f, 0xf6, 0x30, 0x23, 0x7f, 0x47, 0x8a, 0x7a,
	0xdc, 0xef, 0x9f, 0x8e, 0x6f, 0xc5, 0x37, 0x73, 0x3f, 0x8c, 0xa0, 0xe3, 0x70, 0x8b, 0x8e, 0x8a,
	0x83, 0xb1, 0x56, 0x21, 0x4e, 0x5d, 0x4a, 0xc6, 0xf1, 0x30, 0x19, 0x5d, 0x85, 0x97, 0x1a, 0x2e,
	0x15, 0x16, 0x38, 0xc5, 0xf7, 0xaf, 0x71, 0x03, 0xee, 0x06, 0x22, 0x74, 0x4e, 0xc4, 0xab, 0x5b,
	0x27, 0x62, 0xa1, 0x70, 0xf1, 0x62, 0x69, 0x61, 0xb9, 0x70, 0xa5, 0x3b, 0x0e, 0x7f, 0x8b, 0x83,
	0xfb, 0x5c, 0xaf, 0xb6, 0x7d, 0xd5, 0x01, 0xa5, 0xcf, 0x37, 0xf2, 0xef, 0x43, 0xfa, 0xc7, 0xe0,
	0x3f, 0xea, 0x66, 0xee, 0xad, 0x08, 0x0c, 0x26, 0x5b, 0x18, 0x50, 0x6c, 0x23, 0x29, 0x01, 0x8f,
	0x85, 0x09, 0x88, 0x92, 0x5b, 0xb2, 0xdd, 0xe0, 0x9b, 0x40, 0xec, 0xf8, 0x6e, 0x88, 0xfb, 0xab,
	0x3c, 0xee, 0xd7, 0xb6, 0x1e, 0x77, 0x6e, 0x6f, 0xf7, 0x90, 0xbf, 0x9f, 0x00, 0xe9, 0xe8, 0x2f,
	0x3c, 0xe0, 0x69, 0x59, 0x2c, 0x7b, 0x7e, 0x3d, 0x93, 0x7e, 0x62, 0xd0, 0x69, 0x1e, 0x11, 0x3f,
	0x8a, 0x6f, 0xe6, 0x3e, 0x8e, 0x20, 0x22, 0x5d, 0xc0, 0xcc, 0x31, 0xf1, 0x5a, 0xf8, 0xe2, 0x20,
	0xec, 0x4c, 0x9f, 0x6b, 0x8e, 0x51, 0xad, 0x66, 0x52, 0xa6, 0x91, 0x8a, 0xf4, 0x76, 0x21, 0x84,
	0x79, 0x91, 0x08, 0xb4, 0x26, 0x25, 0xd3, 0x58, 0x22, 0x1c, 0x90, 0x29, 0x58, 0x05, 0x07, 0xbc,
	0xc5, 0x34, 0x7c, 0x13, 0xeb, 0x8d, 0x4e, 0x20, 0x16, 0xc0, 0x7c, 0x7a, 0xb6, 0x17, 0x10, 0xbd,
	0xed, 0x5c, 0x9a, 0x06, 0xf1, 0xc7, 0xa7, 0x1e, 0x87, 0xc7, 0xc0, 0x91, 0x02, 0x66, 0x0d, 0xc7,
	0xc2, 0x86, 0xb6, 0x5e, 0xc5, 0x96, 0xb8, 0x16, 0x39, 0x98, 0x92, 0x86, 0xa3, 0x63, 0xcd, 0xa4,
	0x9a, 0x45, 0x98, 0x56, 0x21, 0x0d, 0xcb, 0xc8, 0x94, 0x9f, 0x02, 0x67, 0x7c, 0xa4, 0x4e, 0x82,
	0xe3, 0x7d, 0x22, 0xe5, 0x60, 0x64, 0x08, 0xa2, 0xe6, 0x60, 0x6e, 0xcb, 0x38, 0x05, 0xb0, 0xf9,
	0x45, 0x02, 0x1c, 0xea, 0xe3, 0x7d, 0x18, 0x9e, 0x8f, 0x00, 0xa1, 0xcf, 0x47, 0xeb, 0xf4, 0x85,
	0xa1, 0xe7, 0x7b, 0x44, 0x7d, 0x2d, 0xbe, 0x99, 0xfb, 0xf5, 0x10, 0x44, 0x1d, 0x1f, 0x80, 0xa8,
	0xa5, 0x9b, 0x2e, 0x3f, 0x37, 0x7a, 0xf2, 0xb3, 0x0c, 0xae, 0xa4, 0x2f, 0xf7, 0xc1, 0x4f, 0xbf,
	0xe6, 0x7d, 0x01, 0x20, 0x65, 0xe0, 0x09, 0x09, 0x48, 0xfd, 0x30, 0xf3, 0xfd, 0x04, 0xd8, 0x27,
	0xff, 0xea, 0x0e, 0x4e, 0xf7, 0x5d, 0x2f, 0x7c, 0x32, 0x66, 0x06, 0x99, 0xe2, 0xc1, 0xf0, 0xdd,
	0xf8, 0x66, 0xee, 0xc3, 0x08, 0x18, 0xf6, 0x4b, 0x61, 0x68, 0x7e, 0xab, 0x97, 0x7e, 0xb2, 0x2f,
	0x1e, 0x64, 0xc5, 0xe5, 0xba, 0x0b, 0x87, 0xd1, 0x13, 0x8e, 0x59, 0xf0, 0x6c, 0xfa, 0xfc, 0x50,
	0xc5, 0xe5, 0x8b, 0xe4, 0xe1, 0x1c, 0x7c, 0x7a, 0x88, 0xc2, 0xd2, 0xf4, 0x57, 0x00, 0x8f, 0x9f,
	0xc7, 0xc1, 0xfd, 0x2b, 0x68, 0x0d, 0xcb, 0xde, 0x55, 0xa5, 0x2d, 0x85, 0x44, 0x30, 0xdd, 0xaf,
	0xe0, 0xe4, 0xaf, 0xd4, 0xcd, 0xdc, 0x1b, 0x51, 0x28, 0x2c, 0xd6, 0x79, 0xf6, 0x69, 0x48, 0xab,
	0x7a, 0x33, 0x83, 0xb1, 0x4e, 0x77, 0x1f, 0x76, 0x8b, 0xc1, 0x34, 0xbc, 0x01, 0x9e, 0xc8, 0x69,
	0xcd, 0x95, 0x43, 0x3d, 0x47, 0x15, 0x51, 0xad, 0x8c, 0xb1, 0xa5, 0x99, 0x75, 0x37, 0xc9, 0x87,
	0xe9, 0x3a, 0x24, 0x36, 0x6d, 0xb9, 0xeb, 0x98, 0xe4, 0x5d, 0xc7, 0xfe, 0x88, 0x3f, 0x54, 0x73,
	0x37, 0xdb, 0x8a, 0x57, 0x3a, 0xfe, 0xba, 0x1a, 0x9b, 0xfd, 0xe5, 0xe8, 0x66, 0xee, 0x4f, 0x49,
	0x10, 0x9f, 0xc9, 0x4c, 0xc1, 0x57, 0x5b, 0xef, 0xb2, 0x2d, 0x67, 0x6a, 0xb9, 0xfc, 0x22, 0x3c,
	0x97, 0x77, 0xc8, 0x9a, 0x69, 0x60, 0xaa, 0xcd, 0x15, 0x5e, 0x98, 0xd7, 0x88, 0x8d, 0x1d, 0xf7,
	0x2f, 0xcf, 0x34, 0x62, 0x45, 0x3e, 0x05, 0x36, 0x71, 0xcd, 0xcc, 0x8c, 0x4c, 0x67, 0xa6, 0x32,
	0x53, 0xc7, 0x14, 0x75, 0x66, 0x0f, 0xb2, 0xed, 0x9a, 0xa9, 0x8b, 0xc9, 0xd9, 0xff, 0xa7, 0xc4,
	0x3a, 0xdb, 0xf1, 0x49, 0xa1, 0xc4, 0x53, 0x60, 0x0a, 0xfe, 0x2f, 0x78, 0x51, 0x96, 0x02, 0xae,
	0xee, 0x32, 0x31, 0x36, 0x78, 0x1a, 0xd4, 0x51, 0x8d, 0x5f, 0x19, 0x10, 0xe3, 0x51, 0x20, 0x8e,
	0x66, 0x10, 0xec, 0xe6, 0x46, 0x1d, 0x31, 0xbd, 0x2a, 0xa6, 0xe0, 0x9b, 0x36, 0xd6, 0xf9, 0x70,
	0xd3, 0x5f, 0x85, 0xe7, 0xf9, 0x02, 0xd3, 0xf0, 0x22, 0x98, 0x8b, 0x5e, 0xc0, 0x57, 0xa4, 0x13,
	0x8b, 0x21, 0xd3, 0xa2, 0x62, 0xb4, 0x41, 0xb1, 0x73, 0x98, 0xf2, 0x66, 0xd3, 0xc0, 0x16, 0x33,
	0x51, 0x8d, 0x66, 0x0a, 0x79, 0xae, 0xed, 0x14, 0x5c, 0x04, 0x97, 0x3a, 0xb5, 0x71, 0xf9, 0x96,
	0xaa, 0x2a, 0x5a, 0xc3, 0x9a, 0x8d, 0x9d, 0xba, 0x49, 0xa9, 0x38, 0xa8, 0x08, 0x2f, 0x33, 0x98,
	0xd2, 0x50, 0x76, 0x67, 0x0a, 0x83, 0xd7, 0x80, 0xc2, 0x02, 0x88, 0x9f, 0x9e, 0x9a, 0x82, 0x17,
	0xc0, 0xb9, 0xf0, 0x14, 0x64, 0x69, 0x0d, 0xcb, 0xf7, 0x00, 0x76, 0x1c, 0xe2, 0x68, 0x44, 0xd7,
	0x1b, 0x0e, 0x77, 0x97, 0xab, 0x91, 0x62, 0x67, 0x0d, 0x3b, 0x1a, 0x35, 0x0d, 0x9c, 0x79, 0xf9,
	0x0f, 0x2a, 0xf8, 0x9d, 0xea, 0x33, 0xf8, 0xa1, 0x3a, 0x16, 0x87, 0xdf, 0x54, 0x72, 0xde, 0x26,
	0x49, 0xd7, 0x30, 0x53, 0xbe, 0x25, 0x07, 0x53, 0xe6, 0x98, 0x62, 0x31, 0x6e, 0x5d, 0x83, 0x55,
	0xb9, 0x9f, 0x74, 0xd1, 0x9a, 0x73, 0x67, 0xd0, 0x8c, 0x56, 0xac, 0xe2, 0xe0, 0x00, 0x57, 0x65,
	0x3b, 0x44, 0xac, 0x50, 0x21, 0xb5, 0x1a, 0x59, 0x77, 0xdd, 0xc1, 0x77, 0x40, 0x1c, 0xf3, 0x2b,
	0xae, 0xc4, 0x1c, 0x31, 0xb0, 0x56, 0xa9, 0x91, 0xf5, 0xcc, 0x91, 0xc4, 0xcc, 0x18, 0x27, 0x9c,
	0xab, 0x38, 0x3b, 0x2e, 0x58, 0x27, 0xd7, 0xb1, 0x35, 0xfb, 0x03, 0x05, 0x5c, 0x1e, 0xa8, 0xf8,
	0xc1, 0x87, 0x5e, 0x34, 0xf1, 0xba, 0xd6, 0x39, 0xaa, 0x19, 0x88, 0x21, 0x70, 0x75, 0xb0, 0xfc,
	0x83, 0x07, 0xae, 0x20, 0x0b, 0xad, 0xe2, 0x48, 0x7d, 0xfb, 0x19, 0x11, 0x3a, 0x90, 0x6d, 0x4a,
	0x4a, 0xdc, 0x73, 0x4a, 0x5e, 0x79, 0x59, 0xf2, 0x07, 0xa4, 0x5f, 0x55, 0x62, 0xaf, 0x2b, 0xb1,
	0xb7, 0x95, 0xd8, 0x07, 0x4a, 0xec, 0x8f, 0x4a, 0xec, 0x5f, 0x4a, 0xec, 0x13, 0x35, 0x56, 0x4e,
	0x8a, 0xef, 0x5a, 0x4e, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x40, 0x98, 0x2a, 0x5c, 0xb0, 0x3a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransactionRequestServiceClient is the client API for TransactionRequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionRequestServiceClient interface {
	// AnswerTransactionRequestChallenge sends the answer to the challenge for transaction request
	AnswerTransactionRequestChallenge(ctx context.Context, in *AnswerTransactionRequestChallengeRequest, opts ...grpc.CallOption) (*AnswerTransactionRequestChallengeResponse, error)
	// CreateAccountTransaction creates a new account transaction request
	CreateAccountTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// CreateAccountOTPTransaction creates a new account otp transaction request
	CreateAccountOTPTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// CreateCounterPartyTransaction creates a counter party transaction request
	CreateCounterPartyTransaction(ctx context.Context, in *CounterPartyTransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// CreateFreeFormTransaction creates a free form transaction request
	CreateFreeFormTransaction(ctx context.Context, in *FreeFormTransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// CreateSEPATransaction creates a SEPA transaction request
	CreateSEPATransaction(ctx context.Context, in *SEPATransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// GetTransactionRequestTypes retrieves the list of transaction request types
	GetTransactionRequestTypes(ctx context.Context, in *GetTransactionRequestTypesRequest, opts ...grpc.CallOption) (*GetTransactionRequestTypesResponse, error)
	// GetSupportedTransactionRequestTypes retrieves the list of supported transaction request types
	GetSupportedTransactionRequestTypes(ctx context.Context, in *GetSupportedTransactionRequestTypesRequest, opts ...grpc.CallOption) (*GetSupportedTransactionRequestTypesResponse, error)
	// GetTransactionRequests retrieves the list of transaction request for an account
	GetTransactionRequests(ctx context.Context, in *GetTransactionRequestsRequest, opts ...grpc.CallOption) (*GetTransactionRequestsResponse, error)
	// SaveHistoricTransaction imports a transaction
	SaveHistoricTransaction(ctx context.Context, in *HistoricTransaction, opts ...grpc.CallOption) (*HistoricTransaction, error)
}

type transactionRequestServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionRequestServiceClient(cc *grpc.ClientConn) TransactionRequestServiceClient {
	return &transactionRequestServiceClient{cc}
}

func (c *transactionRequestServiceClient) AnswerTransactionRequestChallenge(ctx context.Context, in *AnswerTransactionRequestChallengeRequest, opts ...grpc.CallOption) (*AnswerTransactionRequestChallengeResponse, error) {
	out := new(AnswerTransactionRequestChallengeResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/AnswerTransactionRequestChallenge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) CreateAccountTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/CreateAccountTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) CreateAccountOTPTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/CreateAccountOTPTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) CreateCounterPartyTransaction(ctx context.Context, in *CounterPartyTransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/CreateCounterPartyTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) CreateFreeFormTransaction(ctx context.Context, in *FreeFormTransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/CreateFreeFormTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) CreateSEPATransaction(ctx context.Context, in *SEPATransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/CreateSEPATransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) GetTransactionRequestTypes(ctx context.Context, in *GetTransactionRequestTypesRequest, opts ...grpc.CallOption) (*GetTransactionRequestTypesResponse, error) {
	out := new(GetTransactionRequestTypesResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/GetTransactionRequestTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) GetSupportedTransactionRequestTypes(ctx context.Context, in *GetSupportedTransactionRequestTypesRequest, opts ...grpc.CallOption) (*GetSupportedTransactionRequestTypesResponse, error) {
	out := new(GetSupportedTransactionRequestTypesResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/GetSupportedTransactionRequestTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) GetTransactionRequests(ctx context.Context, in *GetTransactionRequestsRequest, opts ...grpc.CallOption) (*GetTransactionRequestsResponse, error) {
	out := new(GetTransactionRequestsResponse)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/GetTransactionRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionRequestServiceClient) SaveHistoricTransaction(ctx context.Context, in *HistoricTransaction, opts ...grpc.CallOption) (*HistoricTransaction, error) {
	out := new(HistoricTransaction)
	err := c.cc.Invoke(ctx, "/transactionrequest.TransactionRequestService/SaveHistoricTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionRequestServiceServer is the server API for TransactionRequestService service.
type TransactionRequestServiceServer interface {
	// AnswerTransactionRequestChallenge sends the answer to the challenge for transaction request
	AnswerTransactionRequestChallenge(context.Context, *AnswerTransactionRequestChallengeRequest) (*AnswerTransactionRequestChallengeResponse, error)
	// CreateAccountTransaction creates a new account transaction request
	CreateAccountTransaction(context.Context, *TransactionRequest) (*TransactionResponse, error)
	// CreateAccountOTPTransaction creates a new account otp transaction request
	CreateAccountOTPTransaction(context.Context, *TransactionRequest) (*TransactionResponse, error)
	// CreateCounterPartyTransaction creates a counter party transaction request
	CreateCounterPartyTransaction(context.Context, *CounterPartyTransactionRequest) (*TransactionResponse, error)
	// CreateFreeFormTransaction creates a free form transaction request
	CreateFreeFormTransaction(context.Context, *FreeFormTransactionRequest) (*TransactionResponse, error)
	// CreateSEPATransaction creates a SEPA transaction request
	CreateSEPATransaction(context.Context, *SEPATransactionRequest) (*TransactionResponse, error)
	// GetTransactionRequestTypes retrieves the list of transaction request types
	GetTransactionRequestTypes(context.Context, *GetTransactionRequestTypesRequest) (*GetTransactionRequestTypesResponse, error)
	// GetSupportedTransactionRequestTypes retrieves the list of supported transaction request types
	GetSupportedTransactionRequestTypes(context.Context, *GetSupportedTransactionRequestTypesRequest) (*GetSupportedTransactionRequestTypesResponse, error)
	// GetTransactionRequests retrieves the list of transaction request for an account
	GetTransactionRequests(context.Context, *GetTransactionRequestsRequest) (*GetTransactionRequestsResponse, error)
	// SaveHistoricTransaction imports a transaction
	SaveHistoricTransaction(context.Context, *HistoricTransaction) (*HistoricTransaction, error)
}

// UnimplementedTransactionRequestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionRequestServiceServer struct {
}

func (*UnimplementedTransactionRequestServiceServer) AnswerTransactionRequestChallenge(ctx context.Context, req *AnswerTransactionRequestChallengeRequest) (*AnswerTransactionRequestChallengeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnswerTransactionRequestChallenge not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) CreateAccountTransaction(ctx context.Context, req *TransactionRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccountTransaction not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) CreateAccountOTPTransaction(ctx context.Context, req *TransactionRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccountOTPTransaction not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) CreateCounterPartyTransaction(ctx context.Context, req *CounterPartyTransactionRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCounterPartyTransaction not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) CreateFreeFormTransaction(ctx context.Context, req *FreeFormTransactionRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFreeFormTransaction not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) CreateSEPATransaction(ctx context.Context, req *SEPATransactionRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSEPATransaction not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) GetTransactionRequestTypes(ctx context.Context, req *GetTransactionRequestTypesRequest) (*GetTransactionRequestTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionRequestTypes not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) GetSupportedTransactionRequestTypes(ctx context.Context, req *GetSupportedTransactionRequestTypesRequest) (*GetSupportedTransactionRequestTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSupportedTransactionRequestTypes not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) GetTransactionRequests(ctx context.Context, req *GetTransactionRequestsRequest) (*GetTransactionRequestsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionRequests not implemented")
}
func (*UnimplementedTransactionRequestServiceServer) SaveHistoricTransaction(ctx context.Context, req *HistoricTransaction) (*HistoricTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveHistoricTransaction not implemented")
}

func RegisterTransactionRequestServiceServer(s *grpc.Server, srv TransactionRequestServiceServer) {
	s.RegisterService(&_TransactionRequestService_serviceDesc, srv)
}

func _TransactionRequestService_AnswerTransactionRequestChallenge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnswerTransactionRequestChallengeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).AnswerTransactionRequestChallenge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/AnswerTransactionRequestChallenge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).AnswerTransactionRequestChallenge(ctx, req.(*AnswerTransactionRequestChallengeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_CreateAccountTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).CreateAccountTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/CreateAccountTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).CreateAccountTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_CreateAccountOTPTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).CreateAccountOTPTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/CreateAccountOTPTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).CreateAccountOTPTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_CreateCounterPartyTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CounterPartyTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).CreateCounterPartyTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/CreateCounterPartyTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).CreateCounterPartyTransaction(ctx, req.(*CounterPartyTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_CreateFreeFormTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FreeFormTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).CreateFreeFormTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/CreateFreeFormTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).CreateFreeFormTransaction(ctx, req.(*FreeFormTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_CreateSEPATransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SEPATransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).CreateSEPATransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/CreateSEPATransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).CreateSEPATransaction(ctx, req.(*SEPATransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_GetTransactionRequestTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequestTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).GetTransactionRequestTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/GetTransactionRequestTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).GetTransactionRequestTypes(ctx, req.(*GetTransactionRequestTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_GetSupportedTransactionRequestTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSupportedTransactionRequestTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).GetSupportedTransactionRequestTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/GetSupportedTransactionRequestTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).GetSupportedTransactionRequestTypes(ctx, req.(*GetSupportedTransactionRequestTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_GetTransactionRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequestsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).GetTransactionRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/GetTransactionRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).GetTransactionRequests(ctx, req.(*GetTransactionRequestsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionRequestService_SaveHistoricTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoricTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionRequestServiceServer).SaveHistoricTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transactionrequest.TransactionRequestService/SaveHistoricTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionRequestServiceServer).SaveHistoricTransaction(ctx, req.(*HistoricTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionRequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transactionrequest.TransactionRequestService",
	HandlerType: (*TransactionRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AnswerTransactionRequestChallenge",
			Handler:    _TransactionRequestService_AnswerTransactionRequestChallenge_Handler,
		},
		{
			MethodName: "CreateAccountTransaction",
			Handler:    _TransactionRequestService_CreateAccountTransaction_Handler,
		},
		{
			MethodName: "CreateAccountOTPTransaction",
			Handler:    _TransactionRequestService_CreateAccountOTPTransaction_Handler,
		},
		{
			MethodName: "CreateCounterPartyTransaction",
			Handler:    _TransactionRequestService_CreateCounterPartyTransaction_Handler,
		},
		{
			MethodName: "CreateFreeFormTransaction",
			Handler:    _TransactionRequestService_CreateFreeFormTransaction_Handler,
		},
		{
			MethodName: "CreateSEPATransaction",
			Handler:    _TransactionRequestService_CreateSEPATransaction_Handler,
		},
		{
			MethodName: "GetTransactionRequestTypes",
			Handler:    _TransactionRequestService_GetTransactionRequestTypes_Handler,
		},
		{
			MethodName: "GetSupportedTransactionRequestTypes",
			Handler:    _TransactionRequestService_GetSupportedTransactionRequestTypes_Handler,
		},
		{
			MethodName: "GetTransactionRequests",
			Handler:    _TransactionRequestService_GetTransactionRequests_Handler,
		},
		{
			MethodName: "SaveHistoricTransaction",
			Handler:    _TransactionRequestService_SaveHistoricTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/transactionrequest/all.proto",
}
