{
  "swagger": "2.0",
  "info": {
    "title": "Account Application API",
    "description": "Provides create and read operations on the account application resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account-applications": {
      "get": {
        "summary": "List all accounts",
        "description": "Returns a list containing up to 20 accounts. `next_starting_index` can be used for pagination.",
        "operationId": "GetAccountApplications",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsGetAccountApplicationsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "NextStartingIndex",
            "description": "NextStartingIndex is a cursor for pagination.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AccountApplication"
        ],
        "security": [
          {
            "OAuth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create an account application",
        "description": "Creates a new account application",
        "operationId": "CreateAccountApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsAccountApplication"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsCreateAccountApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountapplicationsCreateAccountApplicationRequest"
            }
          }
        ],
        "tags": [
          "AccountApplication"
        ],
        "security": [
          {
            "OAuth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/v1/account-applications/{ID}": {
      "get": {
        "summary": "Retrieve an account application",
        "description": "Retrieves all data from an account application selected by the supplied account_application_id.",
        "operationId": "GetAccountApplication",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsAccountApplication"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "OAuth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update an account application",
        "description": "Updates an account application with the given status",
        "operationId": "UpdateAccountApplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "Account Application status updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "ID",
            "description": "ID is the unique identifier of the account application to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountapplicationsUpdateAccountApplicationStatusRequest"
            }
          }
        ],
        "tags": [
          "AccountApplication"
        ],
        "security": [
          {
            "OAuth2": [
              "write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "accountapplicationsAccountApplication": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "CustomerProfileID": {
          "type": "string"
        },
        "DateOfApplication": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "$ref": "#/definitions/accountapplicationsAccountApplicationStatus"
        }
      },
      "title": "Structure of account application"
    },
    "accountapplicationsAccountApplicationStatus": {
      "type": "string",
      "enum": [
        "UnknownApplicationStatus",
        "Requested",
        "Accepted"
      ],
      "default": "UnknownApplicationStatus",
      "description": "- Requested: Account application is created\n - Accepted: Account application is accepted",
      "title": "Entity type defines the type of account application"
    },
    "accountapplicationsCreateAccountApplicationRequest": {
      "type": "object",
      "properties": {
        "ProductCode": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "ProfileID": {
          "type": "string"
        }
      },
      "title": "CreateAccountApplicationRequest is a request mesasge to create account application"
    },
    "accountapplicationsGetAccountApplicationsResponse": {
      "type": "object",
      "properties": {
        "Result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountapplicationsAccountApplication"
          },
          "description": "Result is a list containing up to 20 Accounts."
        },
        "HasMore": {
          "type": "boolean",
          "format": "boolean",
          "description": "HasMore indicates if there are more accounts available."
        }
      },
      "description": "GetAccountApplicationsResponse wraps the list of account applications."
    },
    "accountapplicationsUpdateAccountApplicationStatusRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "description": "ID is the unique identifier of the account application to update."
        },
        "Status": {
          "$ref": "#/definitions/accountapplicationsAccountApplicationStatus",
          "title": "Status of the account application"
        }
      },
      "description": "UpdateAccountApplicationStatusRequest is the request envelope to update an account application status."
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to transactions resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access"
      }
    }
  }
}
