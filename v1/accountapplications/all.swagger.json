{
  "swagger": "2.0",
  "info": {
    "title": "Account Application API",
    "description": "Provides create and read operations on the account application resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account-applications": {
      "get": {
        "summary": "List all accounts",
        "description": "Returns a list containing up to 20 accounts. `next_starting_index` can be used for pagination.",
        "operationId": "GetAccountApplications",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsGetAccountApplicationsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "NextStartingIndex",
            "description": "NextStartingIndex is a cursor for pagination.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Account Application"
        ],
        "security": [
          {
            "OAuth2": [
              "read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create an account application",
        "description": "Creates a new account application",
        "operationId": "CreateAccountApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsCreateAccountApplicationResponse"
            }
          },
          "201": {
            "description": "Account application created successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsCreateAccountApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountapplicationsCreateAccountApplicationRequest"
            }
          }
        ],
        "tags": [
          "Account Application"
        ],
        "security": [
          {
            "OAuth2": [
              "write"
            ]
          }
        ]
      }
    },
    "/v1/account-applications/{ID}": {
      "get": {
        "summary": "Retrieve an account application",
        "description": "Retrieves all data from an account application selected by the supplied account_application_id.",
        "operationId": "GetAccountApplication",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/accountapplicationsAccountApplication"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "OAuth2": [
              "read"
            ]
          }
        ]
      },
      "put": {
        "summary": "Update an account application",
        "description": "Updates an account application with the given status",
        "operationId": "UpdateAccountApplicationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "204": {
            "description": "Account Application status updated successfully.",
            "schema": {}
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "ID",
            "description": "ID is the unique identifier of the account application to update.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountapplicationsUpdateAccountApplicationStatusRequest"
            }
          }
        ],
        "tags": [
          "Account Application"
        ],
        "security": [
          {
            "OAuth2": [
              "write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "accountapplicationsAccountApplication": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "CustomerProfileID": {
          "type": "string"
        },
        "DateOfApplication": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "$ref": "#/definitions/accountapplicationsAccountApplicationStatus"
        }
      },
      "title": "/ AccountApplication is a structure of account application"
    },
    "accountapplicationsAccountApplicationStatus": {
      "type": "string",
      "enum": [
        "UnknownApplicationStatus",
        "Requested",
        "Accepted"
      ],
      "default": "UnknownApplicationStatus",
      "description": "- Requested: Account application is created\n - Accepted: Account application is accepted",
      "title": "Entity type defines the type of account application"
    },
    "accountapplicationsCreateAccountApplicationRequest": {
      "type": "object",
      "properties": {
        "ProductCode": {
          "type": "string"
        },
        "UserID": {
          "type": "string"
        },
        "ProfileID": {
          "type": "string"
        }
      },
      "title": "CreateAccountApplicationRequest is a request mesasge to create account application"
    },
    "accountapplicationsCreateAccountApplicationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/accountapplicationsUser"
        },
        "CustomerProfile": {
          "$ref": "#/definitions/typesProfile"
        },
        "DateOfApplication": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "$ref": "#/definitions/accountapplicationsAccountApplicationStatus"
        }
      },
      "title": "CreateAccountApplicationResponse is a response message for create account application"
    },
    "accountapplicationsGetAccountApplicationsResponse": {
      "type": "object",
      "properties": {
        "Result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountapplicationsAccountApplication"
          },
          "description": "Result is a list containing up to 20 Accounts."
        },
        "HasMore": {
          "type": "boolean",
          "format": "boolean",
          "description": "HasMore indicates if there are more accounts available."
        }
      },
      "description": "GetAccountApplicationsResponse wraps the list of account applications."
    },
    "accountapplicationsUpdateAccountApplicationStatusRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "description": "ID is the unique identifier of the account application to update."
        },
        "Status": {
          "$ref": "#/definitions/accountapplicationsAccountApplicationStatus",
          "title": "Status of the account application"
        }
      },
      "description": "UpdateAccountApplicationStatusRequest is the request envelope to update an account application status."
    },
    "accountapplicationsUser": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "User identifier used to login"
        },
        "Email": {
          "type": "string",
          "title": "Email of the user"
        },
        "Username": {
          "type": "string",
          "title": "Display name of the user"
        }
      },
      "title": "Structure of user information"
    },
    "typesAddress": {
      "type": "object",
      "properties": {
        "CountryName": {
          "type": "string",
          "description": "CountryName holds the country name information."
        },
        "CityName": {
          "type": "string",
          "description": "CityName holds the city name information."
        },
        "State": {
          "type": "string",
          "description": "State holds the state information."
        },
        "Street": {
          "type": "string",
          "description": "Street holds the street information."
        },
        "PostalCode": {
          "type": "string",
          "description": "PostalCode holds the postal code information."
        }
      },
      "title": "Address hold all details about Address"
    },
    "typesAmount": {
      "type": "object",
      "properties": {
        "Cur": {
          "type": "string",
          "description": "Cur is the currency of the amount."
        },
        "Num": {
          "type": "string",
          "description": "Num is the value of the amount."
        }
      },
      "description": "Amount defines a transaction amount."
    },
    "typesCreditRating": {
      "type": "object",
      "properties": {
        "Rating": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        }
      },
      "title": "Structure of credit rating information"
    },
    "typesProfile": {
      "type": "object",
      "properties": {
        "ProfileID": {
          "type": "string",
          "description": "ProfileID is the unique identifier of a profile."
        },
        "FullName": {
          "type": "string",
          "title": "Full name"
        },
        "UserName": {
          "type": "string",
          "title": "User name"
        },
        "BirthDate": {
          "type": "string",
          "title": "Birth date"
        },
        "Language": {
          "type": "string",
          "title": "Language code used"
        },
        "Country": {
          "type": "string",
          "description": "User country code (VN, US, ID, SG, ...)."
        },
        "Email": {
          "type": "string",
          "title": "User email address"
        },
        "EmailVefified": {
          "type": "boolean",
          "format": "boolean",
          "title": "True if email is verified, otherwise False"
        },
        "Mobile": {
          "type": "string",
          "title": "Mobile number"
        },
        "Photo": {
          "type": "string",
          "title": "User profile photo url"
        },
        "Title": {
          "type": "string",
          "title": "Title"
        },
        "PermanentAddress": {
          "$ref": "#/definitions/typesAddress",
          "title": "Permanent address"
        },
        "ContactAddress": {
          "$ref": "#/definitions/typesAddress",
          "title": "Contact address"
        },
        "ProfileNumber": {
          "type": "string",
          "title": "profile number"
        },
        "FaceImageUrl": {
          "type": "string",
          "title": "Face image of the customer"
        },
        "FaceImageDate": {
          "type": "string",
          "title": "Date when the face image was added/updated"
        },
        "RelationshipStatus": {
          "type": "string",
          "title": "RelationshipStatus. Ex: Single | Married"
        },
        "Dependents": {
          "type": "integer",
          "format": "int32",
          "title": "Number of dependents"
        },
        "DobOfDependents": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date-time"
          },
          "title": "Date of birth of dependents"
        },
        "CreditRating": {
          "$ref": "#/definitions/typesCreditRating",
          "title": "Credit rating"
        },
        "CreditLimit": {
          "$ref": "#/definitions/typesAmount",
          "title": "Credit Limit"
        },
        "HighestEducationAttained": {
          "type": "string",
          "title": "Highest education such as bachelor, masters etc"
        },
        "EmploymentStatus": {
          "type": "string",
          "title": "Current employment status"
        },
        "KycStatus": {
          "type": "boolean",
          "format": "boolean",
          "title": "Know Your Customer status"
        },
        "BranchID": {
          "type": "string",
          "title": "Branch Identifier"
        },
        "NameSuffix": {
          "type": "string",
          "title": "Name suffix"
        },
        "FirstName": {
          "type": "string",
          "title": "FirstName of the person"
        },
        "MiddleName": {
          "type": "string",
          "title": "MiddleName or middle names (space separated) of the person"
        },
        "LastName": {
          "type": "string",
          "title": "LastName or last names (space separated) of the person"
        }
      },
      "title": "Structure of customer profile information"
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to account applications resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "read": "Grants read access",
        "write": "Grants write access"
      }
    }
  }
}
