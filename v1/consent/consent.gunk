// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Consent API",
//                 Description: "Provides CRUD operations on the consent part resource.",
//                 Version:     "1.0.0",
//         },
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
//         Consumes: []string{
//                 "application/json",
//         },
//         Produces: []string{
//                 "application/json",
//         },
//         Responses: map[string]openapiv2.Response{
//                 "400": openapiv2.Response{
//                         Description: "Returned when the request body is malformatted or does not match the expected request.",
//                 },
//                 "401": openapiv2.Response{
//                         Description: "Returned when the request does not contains the user's credentials.",
//                 },
//                 "403": openapiv2.Response{
//                         Description: "Returned when the user does not have permission to access the resource.",
//                 },
//                 "404": openapiv2.Response{
//                         Description: "Returned when the resource is not found.",
//                 },
//                 "500": openapiv2.Response{
//                         Description: "Returned when an unexpected error occured on the server side.",
//                 },
//         },
//         SecurityDefinitions: openapiv2.SecurityDefinitions{
//                 Security: map[string]openapiv2.SecurityScheme{
//                         "OAuth2": openapiv2.SecurityScheme{
//                                 Type:             openapiv2.TYPE_OAUTH2,
//                                 Flow:             openapiv2.FLOW_ACCESS_CODE,
//                                 Description:      "Access to consent resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
//                                 AuthorizationURL: "/v1/auth",
//                                 TokenURL:         "/v1/token",
//                                 Scopes: openapiv2.Scopes{
//                                         Scope: map[string]string{
//                                                 "https://auth.bnk.to/consent.read":  "View consent data",
//                                                 "https://auth.bnk.to/consent.write": "Manage consent data",
//                                         },
//                                 },
//                         },
//                 },
//         },
// }
package consent

import (
	"time"

	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

type Status int

const (
	UnknownStatus Status = iota
	INITIATED
	ACCEPTED
	REJECTED
	REVOKED
	RECEIVED
	VALID
	REVOKEDBYPSU
	EXPIRED
	TERMINATEDBYTPP
)

// AnswerConsentChallengeRequest is a request mesasge to answer consent challenge request
type AnswerConsentChallengeRequest struct {
	BankID    string `pb:"1" json:"bank_id"`
	ConsentID string `pb:"2" json:"consent_id"`
	Answer    string `pb:"3" json:"answer"`
}

// Consent is a response mesasge
type Consent struct {
	ConsentID string `pb:"1" json:"consent_id"`
	Jwt       string `pb:"2" json:"jwt"`
	Status    Status `pb:"3" json:"status"`
}

// CreateConsentEmailRequest
type CreateConsentEmailRequest struct {
	BankID string `pb:"1" json:"bank_id"`
	For    string `pb:"2" json:"for"`
	View   string `pb:"3" json:"view"`
	Email  string `pb:"4" json:"email"`
}

// CreateConsentSMSRequest
type CreateConsentSMSRequest struct {
	BankID      string `pb:"1" json:"bank_id"`
	For         string `pb:"2" json:"for"`
	View        string `pb:"3" json:"view"`
	PhoneNumber string `pb:"4" json:"phone_number"`
}

// GetConsentsRequest
type GetConsentsRequest struct {
	BankID            string `pb:"1" json:"bank_id"`
	NexeStartingIndex string `pb:"2" json:"next_starting_index"`
}

// GetConsentsResponse
type GetConsentsResponse struct {
	Consents []Consent `pb:"1" json:"consents"`
}

// RevokeConsentRequest
type RevokeConsentRequest struct {
	BankID    string `pb:"1" json:"bank_id"`
	ConsentID string `pb:"2" json:"consent_id"`
}

// ConsentService provides consent related operations.
type ConsentService interface {
	// AnswerConsentChallenge sends the answer to the challenge for consnet challenge request
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/consents/{ConsentID}/challenge",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Consent"},
	//         Description: "Answer the consent request challenge",
	//         Summary:     "Answer the consent reqeust challenge",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Answered the consent request challenge",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/consentConsent",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/consent.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	AnswerConsentChallenge(AnswerConsentChallengeRequest) Consent

	// CreateConsentEmail creates a new email consent
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/consents/email",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Consent"},
	//         Description: "Creates a new email consent",
	//         Summary:     "Create an email consent",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Email consent created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/consentConsent",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/consent.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	CreateConsentEmail(CreateConsentEmailRequest) Consent

	// CreateConsentSMS creates a new sms consent
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/consents/sms",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Consent"},
	//         Description: "Creates a new sms consent",
	//         Summary:     "Create an sms consent",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "SMS consent created successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/consentConsent",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/consent.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	CreateConsentSMS(CreateConsentSMSRequest) Consent

	// GetConsents returns a list containing up to 20 consents.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/banks/{BankID}/consents",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Consent"},
	//         Description: "Returns a list containing up to 20 consents. `next_starting_index` can be used for pagination.",
	//         Summary:     "List all consents",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/consentGetConsentsResponse",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/consent.read",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	GetConsents(GetConsentsRequest) GetConsentsResponse

	// RevokeConsent revokes the consent
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/banks/{BankID}/consents/{ConsentID}/revoke",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Consent"},
	//         Description: "Revoke the consent",
	//         Summary:     "Revoke the  consent",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Consent revoked successfully.",
	//                         Schema: openapiv2.Schema{
	//                                 JSONSchema: openapiv2.JSONSchema{
	//                                         Ref: "#/definitions/consentConsent",
	//                                 },
	//                         },
	//                 },
	//         },
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "https://auth.bnk.to/consent.write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	RevokeConsent(RevokeConsentRequest) Consent
}
