// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/accounts/all.proto

package accounts

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EntityType describes the type of the entity.
type EntityType int32

const (
	EntityType_UnknownEntityType EntityType = 0
	// EntityType_Pers is an individual customer.
	EntityType_Pers EntityType = 1
	// EntityType_Org is an organisation customer.
	EntityType_Org EntityType = 2
)

var EntityType_name = map[int32]string{
	0: "UnknownEntityType",
	1: "Pers",
	2: "Org",
}

var EntityType_value = map[string]int32{
	"UnknownEntityType": 0,
	"Pers":              1,
	"Org":               2,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}

func (EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{0}
}

// Account holds all details about a bank account.
type Account struct {
	// AccountID is the unique identifier of an account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// Branch is the branch code for the branch associated with the account.
	Branch string `protobuf:"bytes,2,opt,name=Branch,json=branch,proto3" json:"Branch,omitempty"`
	// BranchName is the long-form name of the branch associated with the account.
	BranchName string `protobuf:"bytes,3,opt,name=BranchName,json=branch_name,proto3" json:"BranchName,omitempty"`
	// Status is the status of the account.
	Status string `protobuf:"bytes,4,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	// TODO: add comment.
	AccruedInterestAtMaturityDate *timestamp.Timestamp `protobuf:"bytes,5,opt,name=AccruedInterestAtMaturityDate,json=accrued_interest_at_maturity_date,proto3" json:"AccruedInterestAtMaturityDate,omitempty"`
	// TODO: add comment.
	AmountDue *types.Amount `protobuf:"bytes,6,opt,name=AmountDue,json=amount_due,proto3" json:"AmountDue,omitempty"`
	// AvailableBalance is the available balance of the account.
	AvailableBalance *types.Amount `protobuf:"bytes,7,opt,name=AvailableBalance,json=available_balance,proto3" json:"AvailableBalance,omitempty"`
	// AvailableCreditLimit is the available credit limit for the account.
	AvailableCreditLimit string `protobuf:"bytes,8,opt,name=AvailableCreditLimit,json=available_credit_limit,proto3" json:"AvailableCreditLimit,omitempty"`
	// CheckingInterestRate is the interest rate of the account if it is a checking account.
	CheckingInterestRate string `protobuf:"bytes,9,opt,name=CheckingInterestRate,json=checking_interest_rate,proto3" json:"CheckingInterestRate,omitempty"`
	// ContractDate is the date of the contract initialization.
	ContractDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=ContractDate,json=contract_date,proto3" json:"ContractDate,omitempty"`
	// CreditLimit is the allowed credit limit.
	CreditLimit string `protobuf:"bytes,11,opt,name=CreditLimit,json=credit_limit,proto3" json:"CreditLimit,omitempty"`
	// TODO: add comment.
	CurrentAccruedInterest string `protobuf:"bytes,12,opt,name=CurrentAccruedInterest,json=current_accrued_interest,proto3" json:"CurrentAccruedInterest,omitempty"`
	// CurrentBalance is the current balance of the account.
	CurrentBalance *types.Amount `protobuf:"bytes,13,opt,name=CurrentBalance,json=current_balance,proto3" json:"CurrentBalance,omitempty"`
	// CurrentTerm is the account validity period.
	CurrentTerm string `protobuf:"bytes,14,opt,name=CurrentTerm,json=current_term,proto3" json:"CurrentTerm,omitempty"`
	// DueDate is the loan maturity date.
	DueDate *timestamp.Timestamp `protobuf:"bytes,15,opt,name=DueDate,json=due_date,proto3" json:"DueDate,omitempty"`
	// InterestRate is the interest rate for the account.
	InterestRate string `protobuf:"bytes,16,opt,name=InterestRate,json=interest_rate,proto3" json:"InterestRate,omitempty"`
	// MajorType is the account type.
	MajorType types.MajorType `protobuf:"varint,17,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// MajorCategory is the account category.
	MajorCategory types.MajorCategory `protobuf:"varint,18,opt,name=MajorCategory,json=major_category,proto3,enum=types.MajorCategory" json:"MajorCategory,omitempty"`
	// MaturityDate is the maturity date, format is ISO 8601
	MaturityDate *timestamp.Timestamp `protobuf:"bytes,19,opt,name=MaturityDate,json=maturity_date,proto3" json:"MaturityDate,omitempty"`
	// TODO: add comment.
	NextPaymentDueDate *timestamp.Timestamp `protobuf:"bytes,20,opt,name=NextPaymentDueDate,json=next_payment_due_date,proto3" json:"NextPaymentDueDate,omitempty"`
	// OwnerName is the name of the account's owner.
	OwnerName string `protobuf:"bytes,21,opt,name=OwnerName,json=owner_name,proto3" json:"OwnerName,omitempty"`
	// TODO: add comment.
	StartDate            *timestamp.Timestamp `protobuf:"bytes,22,opt,name=StartDate,json=start_date,proto3" json:"StartDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Account) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Account) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Account) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Account) GetAccruedInterestAtMaturityDate() *timestamp.Timestamp {
	if m != nil {
		return m.AccruedInterestAtMaturityDate
	}
	return nil
}

func (m *Account) GetAmountDue() *types.Amount {
	if m != nil {
		return m.AmountDue
	}
	return nil
}

func (m *Account) GetAvailableBalance() *types.Amount {
	if m != nil {
		return m.AvailableBalance
	}
	return nil
}

func (m *Account) GetAvailableCreditLimit() string {
	if m != nil {
		return m.AvailableCreditLimit
	}
	return ""
}

func (m *Account) GetCheckingInterestRate() string {
	if m != nil {
		return m.CheckingInterestRate
	}
	return ""
}

func (m *Account) GetContractDate() *timestamp.Timestamp {
	if m != nil {
		return m.ContractDate
	}
	return nil
}

func (m *Account) GetCreditLimit() string {
	if m != nil {
		return m.CreditLimit
	}
	return ""
}

func (m *Account) GetCurrentAccruedInterest() string {
	if m != nil {
		return m.CurrentAccruedInterest
	}
	return ""
}

func (m *Account) GetCurrentBalance() *types.Amount {
	if m != nil {
		return m.CurrentBalance
	}
	return nil
}

func (m *Account) GetCurrentTerm() string {
	if m != nil {
		return m.CurrentTerm
	}
	return ""
}

func (m *Account) GetDueDate() *timestamp.Timestamp {
	if m != nil {
		return m.DueDate
	}
	return nil
}

func (m *Account) GetInterestRate() string {
	if m != nil {
		return m.InterestRate
	}
	return ""
}

func (m *Account) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType_UnknownMajorType
}

func (m *Account) GetMajorCategory() types.MajorCategory {
	if m != nil {
		return m.MajorCategory
	}
	return types.MajorCategory_UnknownMajorCategory
}

func (m *Account) GetMaturityDate() *timestamp.Timestamp {
	if m != nil {
		return m.MaturityDate
	}
	return nil
}

func (m *Account) GetNextPaymentDueDate() *timestamp.Timestamp {
	if m != nil {
		return m.NextPaymentDueDate
	}
	return nil
}

func (m *Account) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *Account) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

// GetAccountRequest is the request envelope to get an account by its identifier.
type GetAccountRequest struct {
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{1}
}

func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(m, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// GetAccountsRequest is the request envelope to get a list of filtered accounts.
type GetAccountsRequest struct {
	// NextStartingIndex is a cursor for pagination. It's an AccountID that defines
	//the current place in the total list of Accounts.
	NextStartingIndex    string   `protobuf:"bytes,1,opt,name=NextStartingIndex,json=next_starting_index,proto3" json:"NextStartingIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountsRequest) Reset()         { *m = GetAccountsRequest{} }
func (m *GetAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountsRequest) ProtoMessage()    {}
func (*GetAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{2}
}

func (m *GetAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountsRequest.Unmarshal(m, b)
}
func (m *GetAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountsRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountsRequest.Merge(m, src)
}
func (m *GetAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountsRequest.Size(m)
}
func (m *GetAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountsRequest proto.InternalMessageInfo

func (m *GetAccountsRequest) GetNextStartingIndex() string {
	if m != nil {
		return m.NextStartingIndex
	}
	return ""
}

// GetAccountsResponse wraps the list of accounts.
type GetAccountsResponse struct {
	// Result is a list containing up to 20 Accounts.
	Result []*Account `protobuf:"bytes,1,rep,name=Result,json=result,proto3" json:"Result,omitempty"`
	// HasMore indicates if there are more accounts available.
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,json=has_more,proto3" json:"HasMore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountsResponse) Reset()         { *m = GetAccountsResponse{} }
func (m *GetAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountsResponse) ProtoMessage()    {}
func (*GetAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{3}
}

func (m *GetAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountsResponse.Unmarshal(m, b)
}
func (m *GetAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountsResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountsResponse.Merge(m, src)
}
func (m *GetAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountsResponse.Size(m)
}
func (m *GetAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountsResponse proto.InternalMessageInfo

func (m *GetAccountsResponse) GetResult() []*Account {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetAccountsResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// TODO: add comment.
type AccountRole struct {
	// TODO: add comment.
	EntityNumber string `protobuf:"bytes,1,opt,name=EntityNumber,json=entity_number,proto3" json:"EntityNumber,omitempty"`
	// TODO: add comment.
	EntityType EntityType `protobuf:"varint,2,opt,name=EntityType,json=entity_type,proto3,enum=accounts.EntityType" json:"EntityType,omitempty"`
	// TODO: add comment.
	Role                 string   `protobuf:"bytes,3,opt,name=Role,json=role,proto3" json:"Role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRole) Reset()         { *m = AccountRole{} }
func (m *AccountRole) String() string { return proto.CompactTextString(m) }
func (*AccountRole) ProtoMessage()    {}
func (*AccountRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{4}
}

func (m *AccountRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRole.Unmarshal(m, b)
}
func (m *AccountRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRole.Marshal(b, m, deterministic)
}
func (m *AccountRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRole.Merge(m, src)
}
func (m *AccountRole) XXX_Size() int {
	return xxx_messageInfo_AccountRole.Size(m)
}
func (m *AccountRole) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRole.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRole proto.InternalMessageInfo

func (m *AccountRole) GetEntityNumber() string {
	if m != nil {
		return m.EntityNumber
	}
	return ""
}

func (m *AccountRole) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType_UnknownEntityType
}

func (m *AccountRole) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

// DebitTransaction represents a debit transaction instance.
type DebitTransaction struct {
	// Amount is the amount debited.
	Amount string `protobuf:"bytes,1,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	// DebitAccount is the account number to debit from.
	DebitAccount string `protobuf:"bytes,2,opt,name=DebitAccount,json=debit_account,proto3" json:"DebitAccount,omitempty"`
	// Exchange rate is the exchange rate for the transaction (if applicable).
	ExchangeRate string `protobuf:"bytes,3,opt,name=ExchangeRate,json=exchange_rate,proto3" json:"ExchangeRate,omitempty"`
	// IsFx is a boolean indicating whether the transaction required foreign exchange.
	IsFx                 bool     `protobuf:"varint,4,opt,name=IsFx,json=is_fx,proto3" json:"IsFx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebitTransaction) Reset()         { *m = DebitTransaction{} }
func (m *DebitTransaction) String() string { return proto.CompactTextString(m) }
func (*DebitTransaction) ProtoMessage()    {}
func (*DebitTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{5}
}

func (m *DebitTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebitTransaction.Unmarshal(m, b)
}
func (m *DebitTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebitTransaction.Marshal(b, m, deterministic)
}
func (m *DebitTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebitTransaction.Merge(m, src)
}
func (m *DebitTransaction) XXX_Size() int {
	return xxx_messageInfo_DebitTransaction.Size(m)
}
func (m *DebitTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_DebitTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_DebitTransaction proto.InternalMessageInfo

func (m *DebitTransaction) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *DebitTransaction) GetDebitAccount() string {
	if m != nil {
		return m.DebitAccount
	}
	return ""
}

func (m *DebitTransaction) GetExchangeRate() string {
	if m != nil {
		return m.ExchangeRate
	}
	return ""
}

func (m *DebitTransaction) GetIsFx() bool {
	if m != nil {
		return m.IsFx
	}
	return false
}

// CreateAccountRequest wraps all required fields for account creation.
type CreateAccountRequest struct {
	// AccountID is the identifier of the account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TODO: add comment.
	Description string `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	// TODO: add comment.
	AccountRoles []*AccountRole `protobuf:"bytes,3,rep,name=AccountRoles,json=account_roles,proto3" json:"AccountRoles,omitempty"`
	// Branch is the branch code of the associated branch.
	Branch string `protobuf:"bytes,4,opt,name=Branch,json=branch,proto3" json:"Branch,omitempty"`
	// TODO: add comment.
	Customer string `protobuf:"bytes,5,opt,name=Customer,json=customer,proto3" json:"Customer,omitempty"`
	// TODO: add comment.
	DebitTransaction *DebitTransaction `protobuf:"bytes,6,opt,name=DebitTransaction,json=debit_transaction,proto3" json:"DebitTransaction,omitempty"`
	// TODO: add comment.
	InterestRate string `protobuf:"bytes,7,opt,name=InterestRate,json=interest_rate,proto3" json:"InterestRate,omitempty"`
	// MajorType is the type of the account.
	MajorType types.MajorType `protobuf:"varint,8,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// TODO: add comment.
	MaturityDate *timestamp.Timestamp `protobuf:"bytes,9,opt,name=MaturityDate,json=maturity_date,proto3" json:"MaturityDate,omitempty"`
	// TODO: add comment.
	Minor                string   `protobuf:"bytes,10,opt,name=Minor,json=minor,proto3" json:"Minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{6}
}

func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(m, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateAccountRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateAccountRequest) GetAccountRoles() []*AccountRole {
	if m != nil {
		return m.AccountRoles
	}
	return nil
}

func (m *CreateAccountRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *CreateAccountRequest) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *CreateAccountRequest) GetDebitTransaction() *DebitTransaction {
	if m != nil {
		return m.DebitTransaction
	}
	return nil
}

func (m *CreateAccountRequest) GetInterestRate() string {
	if m != nil {
		return m.InterestRate
	}
	return ""
}

func (m *CreateAccountRequest) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType_UnknownMajorType
}

func (m *CreateAccountRequest) GetMaturityDate() *timestamp.Timestamp {
	if m != nil {
		return m.MaturityDate
	}
	return nil
}

func (m *CreateAccountRequest) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

// CreateAccountResponse is the response envelope for account creation.
type CreateAccountResponse struct {
	// AccountID is the unique identifier of the newly created account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// CreditTransactionNumber is the transaction number of the credited account.
	CreditTransactionNumber string `protobuf:"bytes,2,opt,name=CreditTransactionNumber,json=credit_transaction_number,proto3" json:"CreditTransactionNumber,omitempty"`
	// DebitTransactionNumber is the transaction number of the debited account.
	DebitTransactionNumber string `protobuf:"bytes,3,opt,name=DebitTransactionNumber,json=debit_transaction_number,proto3" json:"DebitTransactionNumber,omitempty"`
	// MajorType is the type of the account.
	MajorType types.MajorType `protobuf:"varint,4,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// TODO: add comment.
	Minor                string   `protobuf:"bytes,5,opt,name=Minor,json=minor,proto3" json:"Minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountResponse) Reset()         { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()    {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{7}
}

func (m *CreateAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountResponse.Unmarshal(m, b)
}
func (m *CreateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountResponse.Marshal(b, m, deterministic)
}
func (m *CreateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountResponse.Merge(m, src)
}
func (m *CreateAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccountResponse.Size(m)
}
func (m *CreateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountResponse proto.InternalMessageInfo

func (m *CreateAccountResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateAccountResponse) GetCreditTransactionNumber() string {
	if m != nil {
		return m.CreditTransactionNumber
	}
	return ""
}

func (m *CreateAccountResponse) GetDebitTransactionNumber() string {
	if m != nil {
		return m.DebitTransactionNumber
	}
	return ""
}

func (m *CreateAccountResponse) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType_UnknownMajorType
}

func (m *CreateAccountResponse) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

// UpdateAccountRequest is the request envelope to update an account.
type UpdateAccountRequest struct {
	// AccountID is the unique identifier of the account to update.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TODO: add comment.
	Description          string   `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountRequest) Reset()         { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()    {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{8}
}

func (m *UpdateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountRequest.Unmarshal(m, b)
}
func (m *UpdateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountRequest.Merge(m, src)
}
func (m *UpdateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountRequest.Size(m)
}
func (m *UpdateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountRequest proto.InternalMessageInfo

func (m *UpdateAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateAccountRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// UpdateAccountStatusRequest is the request envelope to update
//the account status.
type UpdateAccountStatusRequest struct {
	// AccountID is the account unique identifier.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// Status is the status to be updated
	Status               string   `protobuf:"bytes,2,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountStatusRequest) Reset()         { *m = UpdateAccountStatusRequest{} }
func (m *UpdateAccountStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountStatusRequest) ProtoMessage()    {}
func (*UpdateAccountStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{9}
}

func (m *UpdateAccountStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountStatusRequest.Unmarshal(m, b)
}
func (m *UpdateAccountStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateAccountStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountStatusRequest.Merge(m, src)
}
func (m *UpdateAccountStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountStatusRequest.Size(m)
}
func (m *UpdateAccountStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountStatusRequest proto.InternalMessageInfo

func (m *UpdateAccountStatusRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateAccountStatusRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// GetAccountStatusRequest is the request envelope to get an account's current status.
type GetAccountStatusRequest struct {
	// AccountID is the unique identifier of the account.
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountStatusRequest) Reset()         { *m = GetAccountStatusRequest{} }
func (m *GetAccountStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountStatusRequest) ProtoMessage()    {}
func (*GetAccountStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{10}
}

func (m *GetAccountStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStatusRequest.Unmarshal(m, b)
}
func (m *GetAccountStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStatusRequest.Merge(m, src)
}
func (m *GetAccountStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountStatusRequest.Size(m)
}
func (m *GetAccountStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStatusRequest proto.InternalMessageInfo

func (m *GetAccountStatusRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// GetAccountStatusResponse is the response envelope for requesting an account's status.
type GetAccountStatusResponse struct {
	// AccountID is the account unique identifier.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// EffectiveDate is the date of the request.
	EffectiveDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=EffectiveDate,json=effetive_date,proto3" json:"EffectiveDate,omitempty"`
	// Status is the current status of the account.
	Status string `protobuf:"bytes,3,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	// StatusDescription describe about the Status.
	StatusDescription    string   `protobuf:"bytes,4,opt,name=StatusDescription,json=status_description,proto3" json:"StatusDescription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountStatusResponse) Reset()         { *m = GetAccountStatusResponse{} }
func (m *GetAccountStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountStatusResponse) ProtoMessage()    {}
func (*GetAccountStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{11}
}

func (m *GetAccountStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountStatusResponse.Unmarshal(m, b)
}
func (m *GetAccountStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetAccountStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStatusResponse.Merge(m, src)
}
func (m *GetAccountStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountStatusResponse.Size(m)
}
func (m *GetAccountStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStatusResponse proto.InternalMessageInfo

func (m *GetAccountStatusResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetAccountStatusResponse) GetEffectiveDate() *timestamp.Timestamp {
	if m != nil {
		return m.EffectiveDate
	}
	return nil
}

func (m *GetAccountStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetAccountStatusResponse) GetStatusDescription() string {
	if m != nil {
		return m.StatusDescription
	}
	return ""
}

// DeleteAccountRequest is the request envelope to delete an account.
type DeleteAccountRequest struct {
	// AccountID is the account unique identifier.
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountRequest) Reset()         { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()    {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{12}
}

func (m *DeleteAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountRequest.Unmarshal(m, b)
}
func (m *DeleteAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountRequest.Merge(m, src)
}
func (m *DeleteAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountRequest.Size(m)
}
func (m *DeleteAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountRequest proto.InternalMessageInfo

func (m *DeleteAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// CheckAccountRequest is the request envelope to verify an account's existence.
type CheckAccountRequest struct {
	// AccountID is the account unique identifier.
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckAccountRequest) Reset()         { *m = CheckAccountRequest{} }
func (m *CheckAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CheckAccountRequest) ProtoMessage()    {}
func (*CheckAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{13}
}

func (m *CheckAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAccountRequest.Unmarshal(m, b)
}
func (m *CheckAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAccountRequest.Marshal(b, m, deterministic)
}
func (m *CheckAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAccountRequest.Merge(m, src)
}
func (m *CheckAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CheckAccountRequest.Size(m)
}
func (m *CheckAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAccountRequest proto.InternalMessageInfo

func (m *CheckAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// CheckAccountResponse is the response envelope for verifying an account's existence.
type CheckAccountResponse struct {
	// AccountID is the account unique identifier.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// BankCode is the code that is related to bank.
	BankCode string `protobuf:"bytes,2,opt,name=BankCode,json=bank_code,proto3" json:"BankCode,omitempty"`
	// AccountName is the owner name of the account.
	AccountName          string   `protobuf:"bytes,3,opt,name=AccountName,json=account_name,proto3" json:"AccountName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckAccountResponse) Reset()         { *m = CheckAccountResponse{} }
func (m *CheckAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CheckAccountResponse) ProtoMessage()    {}
func (*CheckAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34218eaebb846841, []int{14}
}

func (m *CheckAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckAccountResponse.Unmarshal(m, b)
}
func (m *CheckAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckAccountResponse.Marshal(b, m, deterministic)
}
func (m *CheckAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckAccountResponse.Merge(m, src)
}
func (m *CheckAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CheckAccountResponse.Size(m)
}
func (m *CheckAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckAccountResponse proto.InternalMessageInfo

func (m *CheckAccountResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CheckAccountResponse) GetBankCode() string {
	if m != nil {
		return m.BankCode
	}
	return ""
}

func (m *CheckAccountResponse) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func init() {
	proto.RegisterEnum("accounts.EntityType", EntityType_name, EntityType_value)
	proto.RegisterType((*Account)(nil), "accounts.Account")
	proto.RegisterType((*GetAccountRequest)(nil), "accounts.GetAccountRequest")
	proto.RegisterType((*GetAccountsRequest)(nil), "accounts.GetAccountsRequest")
	proto.RegisterType((*GetAccountsResponse)(nil), "accounts.GetAccountsResponse")
	proto.RegisterType((*AccountRole)(nil), "accounts.AccountRole")
	proto.RegisterType((*DebitTransaction)(nil), "accounts.DebitTransaction")
	proto.RegisterType((*CreateAccountRequest)(nil), "accounts.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "accounts.CreateAccountResponse")
	proto.RegisterType((*UpdateAccountRequest)(nil), "accounts.UpdateAccountRequest")
	proto.RegisterType((*UpdateAccountStatusRequest)(nil), "accounts.UpdateAccountStatusRequest")
	proto.RegisterType((*GetAccountStatusRequest)(nil), "accounts.GetAccountStatusRequest")
	proto.RegisterType((*GetAccountStatusResponse)(nil), "accounts.GetAccountStatusResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "accounts.DeleteAccountRequest")
	proto.RegisterType((*CheckAccountRequest)(nil), "accounts.CheckAccountRequest")
	proto.RegisterType((*CheckAccountResponse)(nil), "accounts.CheckAccountResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/accounts/all.proto", fileDescriptor_34218eaebb846841)
}

var fileDescriptor_34218eaebb846841 = []byte{
	// 2476 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xcd, 0x6f, 0x24, 0x47,
	0x15, 0x9f, 0xee, 0xb1, 0xbd, 0xe3, 0xb2, 0xbd, 0xb1, 0xcb, 0xde, 0xcd, 0xa4, 0xb3, 0x1f, 0xbd,
	0xce, 0x97, 0xe3, 0xec, 0xf6, 0xcc, 0x4e, 0x12, 0x09, 0x8c, 0x10, 0x8c, 0xed, 0xf5, 0xc6, 0xcb,
	0x6e, 0xd6, 0x72, 0x36, 0x21, 0x04, 0x89, 0x49, 0x4d, 0xf7, 0x1b, 0x4f, 0x67, 0x7b, 0xba, 0x86,
	0xaa, 0x6a, 0xdb, 0x43, 0x84, 0x84, 0x22, 0x84, 0x82, 0xb8, 0x04, 0x23, 0x40, 0x1c, 0x83, 0x90,
	0x10, 0xe2, 0x0f, 0x20, 0x97, 0x1c, 0xe0, 0xc2, 0x15, 0xc1, 0x01, 0xc4, 0x99, 0x88, 0x5c, 0xe0,
	0xc0, 0x09, 0xe5, 0x84, 0xaa, 0xba, 0xa7, 0x3f, 0xa6, 0x7b, 0xf0, 0xce, 0x2e, 0xe2, 0x64, 0x77,
	0xbd, 0x57, 0xbf, 0x7a, 0xf5, 0x7b, 0x9f, 0xdd, 0x83, 0x1a, 0x07, 0xae, 0xe8, 0x06, 0x6d, 0xcb,
	0xa6, 0xbd, 0x1a, 0xed, 0x83, 0xdf, 0x26, 0xfe, 0xfd, 0xe4, 0x9f, 0xc3, 0xeb, 0x35, 0x62, 0xdb,
	0x34, 0xf0, 0x05, 0xaf, 0x11, 0xcf, 0xb3, 0xfa, 0x8c, 0x0a, 0x8a, 0x2b, 0xc3, 0x35, 0xe3, 0xf2,
	0x01, 0xa5, 0x07, 0x1e, 0xd4, 0xd4, 0x7a, 0x3b, 0xe8, 0xd4, 0x84, 0xdb, 0x03, 0x2e, 0x48, 0xaf,
	0x1f, 0xaa, 0x1a, 0x17, 0x22, 0x05, 0xd2, 0x77, 0x6b, 0xc4, 0xf7, 0xa9, 0x20, 0xc2, 0xa5, 0x3e,
	0x8f, 0xa4, 0x57, 0xd5, 0x1f, 0xfb, 0xda, 0x01, 0xf8, 0xd7, 0xf8, 0x11, 0x39, 0x38, 0x00, 0x56,
	0xa3, 0x7d, 0xa5, 0x51, 0xa0, 0xfd, 0xe4, 0xe8, 0x61, 0xd0, 0xeb, 0x8b, 0x41, 0x24, 0xac, 0x9d,
	0x76, 0x0f, 0x31, 0xe8, 0x43, 0xea, 0x12, 0xab, 0xff, 0x42, 0xe8, 0x4c, 0x33, 0xbc, 0x07, 0x7e,
	0x1e, 0xcd, 0x46, 0xff, 0xee, 0x6e, 0x57, 0x35, 0x53, 0x5b, 0x9b, 0xdd, 0x44, 0x95, 0x52, 0xb5,
	0xb4, 0x56, 0xaa, 0x97, 0xf6, 0x4a, 0xfb, 0x28, 0xba, 0x6f, 0xcb, 0x75, 0xf0, 0x2a, 0x9a, 0xd9,
	0x64, 0xc4, 0xb7, 0xbb, 0x55, 0x3d, 0xa7, 0x37, 0xd3, 0x56, 0x12, 0xfc, 0x02, 0x42, 0xa1, 0xce,
	0xab, 0xa4, 0x07, 0xd5, 0x72, 0x4e, 0x6f, 0x2e, 0xd4, 0x6b, 0xf9, 0xa4, 0x07, 0x12, 0xf0, 0x35,
	0x41, 0x44, 0xc0, 0xab, 0x53, 0x79, 0x40, 0xae, 0x24, 0xb8, 0x8f, 0x2e, 0x36, 0x6d, 0x9b, 0x05,
	0xe0, 0xec, 0xfa, 0x02, 0x18, 0x70, 0xd1, 0x14, 0x77, 0x88, 0x08, 0x98, 0x2b, 0x06, 0xdb, 0x44,
	0x40, 0x75, 0xda, 0xd4, 0xd6, 0xe6, 0x1a, 0x86, 0x15, 0x32, 0x64, 0x0d, 0x19, 0xb2, 0xee, 0x0d,
	0xdd, 0x91, 0x81, 0xbd, 0x42, 0x42, 0xb0, 0x96, 0x1b, 0xa1, 0xb5, 0x88, 0x68, 0xf5, 0x22, 0xbc,
	0x96, 0x43, 0x04, 0xe0, 0xcf, 0xa1, 0xd9, 0x66, 0x4f, 0xde, 0x79, 0x3b, 0x80, 0xea, 0x8c, 0x42,
	0x5f, 0xb0, 0x14, 0x85, 0x56, 0xb8, 0x3e, 0x42, 0x90, 0x5a, 0x6b, 0x39, 0x01, 0xe0, 0x1d, 0xb4,
	0xd8, 0x3c, 0x24, 0xae, 0x47, 0xda, 0x1e, 0x6c, 0x12, 0x8f, 0xf8, 0x36, 0x54, 0xcf, 0x9c, 0x06,
	0xb0, 0x44, 0x86, 0x5b, 0x5a, 0xed, 0x70, 0x0f, 0xfe, 0x32, 0x5a, 0x89, 0x71, 0xb6, 0x18, 0x38,
	0xae, 0xb8, 0xed, 0xf6, 0x5c, 0x51, 0xad, 0xe4, 0x58, 0x3a, 0x9f, 0x6c, 0xb6, 0x95, 0x62, 0xcb,
	0x93, 0x9a, 0x12, 0x61, 0xab, 0x0b, 0xf6, 0x7d, 0xd7, 0x3f, 0x18, 0xd2, 0xb6, 0x2f, 0xc9, 0x9a,
	0xcd, 0x23, 0xd8, 0x91, 0x5e, 0xc2, 0x08, 0x93, 0x2c, 0x7c, 0x05, 0xcd, 0x6f, 0x51, 0x5f, 0x30,
	0x62, 0x0b, 0x45, 0x33, 0x9a, 0x88, 0xe6, 0x05, 0x3b, 0xda, 0x1b, 0x52, 0x7a, 0x0d, 0xcd, 0xa5,
	0xef, 0x31, 0x97, 0xb3, 0x62, 0x3e, 0x63, 0xfd, 0x36, 0x3a, 0xbf, 0x15, 0x30, 0x06, 0xbe, 0x18,
	0x71, 0x7d, 0x75, 0x3e, 0xb7, 0xb3, 0x6a, 0x87, 0x9a, 0xad, 0x51, 0xc7, 0xe2, 0x4d, 0x74, 0x36,
	0x42, 0x19, 0xfa, 0x62, 0xe1, 0x34, 0x5f, 0x3c, 0x36, 0x04, 0x1b, 0x7a, 0x42, 0x1a, 0x1e, 0x2e,
	0xdd, 0x03, 0xd6, 0xab, 0x9e, 0x2d, 0x30, 0x3c, 0xda, 0x21, 0x80, 0xf5, 0x70, 0x13, 0x9d, 0xd9,
	0x0e, 0x40, 0xf1, 0xf5, 0xd8, 0x44, 0x7c, 0x55, 0x9c, 0x00, 0x42, 0xaa, 0x6a, 0x68, 0x3e, 0xe3,
	0xb1, 0xc5, 0xdc, 0x91, 0x0b, 0x59, 0x47, 0x7d, 0x01, 0xcd, 0xde, 0x21, 0xef, 0x50, 0x76, 0x6f,
	0xd0, 0x87, 0xea, 0x92, 0xa9, 0xad, 0x9d, 0x6d, 0x2c, 0x46, 0x37, 0x8c, 0xd7, 0xb3, 0x11, 0xdb,
	0x93, 0xcb, 0x2d, 0xa9, 0x82, 0x6f, 0xa2, 0x05, 0xa5, 0xb4, 0x45, 0x04, 0x1c, 0x50, 0x36, 0xa8,
	0x62, 0x05, 0xb0, 0x92, 0x06, 0x18, 0xca, 0x32, 0x20, 0x67, 0x43, 0x10, 0x3b, 0x92, 0xc9, 0x70,
	0xc9, 0x64, 0xe5, 0xf2, 0x64, 0xe1, 0x92, 0xcd, 0xc0, 0xaf, 0x21, 0xfc, 0x2a, 0x1c, 0x8b, 0x3d,
	0x32, 0xe8, 0x81, 0x4a, 0x43, 0x05, 0xb9, 0x32, 0x11, 0xe4, 0x39, 0x1f, 0x8e, 0x45, 0xab, 0x1f,
	0x42, 0xb4, 0x62, 0x7a, 0x9f, 0x47, 0xb3, 0x77, 0x8f, 0x7c, 0x60, 0xaa, 0x3c, 0x9d, 0xcb, 0x97,
	0x3b, 0x2a, 0x85, 0x61, 0x75, 0xba, 0x81, 0x66, 0x5f, 0x13, 0x84, 0x85, 0xe1, 0x7f, 0x7e, 0xa2,
	0xc3, 0x11, 0x97, 0x1b, 0xd5, 0x89, 0x1b, 0x33, 0x95, 0xd2, 0x62, 0xa9, 0x5a, 0x5a, 0xdd, 0x41,
	0x4b, 0x37, 0x41, 0x44, 0xb5, 0x76, 0x1f, 0xbe, 0x19, 0xc8, 0x18, 0x7d, 0xf0, 0xea, 0x1b, 0xe3,
	0xbc, 0x89, 0x70, 0x82, 0xc3, 0x87, 0x40, 0x1b, 0x68, 0x49, 0x52, 0xa6, 0x0c, 0x56, 0x49, 0xef,
	0xc0, 0x71, 0x01, 0xe0, 0xb2, 0x62, 0x85, 0x47, 0x5a, 0x2d, 0x57, 0xaa, 0xc5, 0xc8, 0xef, 0xa2,
	0xe5, 0x0c, 0x32, 0xef, 0x53, 0x9f, 0x03, 0x7e, 0x19, 0xcd, 0xec, 0x03, 0x0f, 0x3c, 0x51, 0xd5,
	0xcc, 0xf2, 0xda, 0x5c, 0x63, 0xc9, 0x1a, 0xf6, 0x40, 0x2b, 0xd2, 0xcd, 0x16, 0x6e, 0xa6, 0x94,
	0xf1, 0x33, 0xe8, 0xcc, 0x2b, 0x84, 0xdf, 0xa1, 0x0c, 0x54, 0xbb, 0xa8, 0x64, 0xe3, 0xbd, 0x4b,
	0x78, 0xab, 0x47, 0x59, 0x42, 0xcf, 0xaf, 0x34, 0x34, 0x37, 0x24, 0x87, 0x7a, 0x2a, 0x0f, 0x6e,
	0xf8, 0xc2, 0x15, 0x83, 0x57, 0x83, 0x5e, 0x1b, 0x58, 0xc1, 0x5d, 0x16, 0x40, 0xc9, 0x5b, 0xbe,
	0x52, 0xc0, 0x4d, 0x84, 0xc2, 0x0d, 0x2a, 0x11, 0xf4, 0x28, 0x8e, 0x63, 0x53, 0x13, 0x59, 0xb6,
	0x1f, 0x45, 0x20, 0x2a, 0x1b, 0x2e, 0xa1, 0x29, 0x79, 0x76, 0x41, 0xdb, 0x9a, 0x62, 0xd4, 0x4b,
	0x6c, 0xfd, 0xad, 0x86, 0x16, 0xb7, 0xa1, 0xed, 0x8a, 0x7b, 0x8c, 0xf8, 0x9c, 0xd8, 0xb2, 0x53,
	0xcb, 0x66, 0x16, 0x56, 0x94, 0x02, 0x53, 0x67, 0xc2, 0x26, 0x21, 0x2f, 0xa5, 0xf6, 0x45, 0x17,
	0x2d, 0xe8, 0xa3, 0x0b, 0x8e, 0x94, 0xb7, 0x22, 0xb3, 0x15, 0x0b, 0xc7, 0x76, 0x97, 0xf8, 0x07,
	0xa0, 0xaa, 0x41, 0xb9, 0x80, 0x85, 0x48, 0x1e, 0x56, 0x83, 0xcb, 0x68, 0x6a, 0x97, 0xef, 0x1c,
	0xab, 0x86, 0x9a, 0xa5, 0x7c, 0xda, 0xe5, 0xad, 0x4e, 0xe2, 0xec, 0x8f, 0xa7, 0xd0, 0xca, 0x16,
	0x03, 0x22, 0xe0, 0xa1, 0x43, 0x12, 0x5f, 0x45, 0x73, 0xdb, 0xc0, 0x6d, 0xe6, 0xaa, 0xb9, 0xa5,
	0xe0, 0x36, 0x73, 0x4e, 0x22, 0xc6, 0x3b, 0x68, 0x3e, 0xe5, 0x60, 0x5e, 0x2d, 0xab, 0x68, 0x3a,
	0x97, 0x8b, 0x26, 0x29, 0xcd, 0x5e, 0x71, 0x78, 0xa4, 0x74, 0x02, 0x4f, 0x8d, 0x21, 0x53, 0x63,
	0xc7, 0x90, 0x67, 0x51, 0x65, 0x2b, 0xe0, 0x82, 0xf6, 0x80, 0xa9, 0x01, 0x21, 0xab, 0x55, 0xb1,
	0x23, 0x19, 0x7e, 0x2d, 0xef, 0xc8, 0xa8, 0xe5, 0x1b, 0x89, 0x5d, 0xa3, 0x1a, 0xd9, 0xf6, 0x1d,
	0x3a, 0x4c, 0xa4, 0x22, 0x61, 0xb4, 0x84, 0x9f, 0x99, 0xa8, 0x84, 0x57, 0x26, 0x2c, 0xe1, 0xa3,
	0x95, 0x77, 0xf6, 0x51, 0x2a, 0xaf, 0x89, 0xa6, 0xef, 0xb8, 0x3e, 0x65, 0xaa, 0xdd, 0x67, 0x6d,
	0x9e, 0xee, 0x49, 0x41, 0x1c, 0x3f, 0xbf, 0xd1, 0xd1, 0xb9, 0x91, 0xf8, 0x89, 0xea, 0xc5, 0x04,
	0x01, 0xb4, 0x83, 0x1e, 0x0f, 0xe7, 0x82, 0x14, 0xbb, 0x51, 0xbe, 0xe7, 0x83, 0xe9, 0x89, 0x68,
	0x46, 0x48, 0x51, 0x3d, 0xcc, 0xfd, 0x6d, 0x74, 0x7e, 0xd4, 0x49, 0x11, 0x4c, 0x3e, 0x61, 0xaa,
	0x39, 0x87, 0x0d, 0x51, 0x32, 0x6e, 0x98, 0x9a, 0xd0, 0x0d, 0x31, 0x73, 0xd3, 0xa7, 0x31, 0x77,
	0x84, 0x56, 0x5e, 0xef, 0x3b, 0xff, 0xbf, 0xc4, 0x8b, 0x0f, 0xe6, 0xc8, 0xc8, 0x1c, 0x1c, 0xce,
	0xde, 0x0f, 0x71, 0x7c, 0x32, 0xb7, 0xeb, 0xe3, 0xe6, 0xf6, 0xf8, 0xd0, 0xdb, 0xe8, 0xf1, 0xa4,
	0xa9, 0x3c, 0xec, 0x89, 0x31, 0xda, 0x67, 0x1a, 0xaa, 0xe6, 0xe1, 0x26, 0x0f, 0xbc, 0xdb, 0x68,
	0xe1, 0x46, 0xa7, 0x03, 0xb6, 0x70, 0x0f, 0xc3, 0xe1, 0x42, 0x9f, 0x2c, 0x6b, 0xa0, 0xd3, 0x01,
	0xb9, 0x37, 0xcc, 0x9a, 0x84, 0x8f, 0xf2, 0xd8, 0xf7, 0x98, 0xcf, 0xa3, 0xa5, 0x50, 0x27, 0xed,
	0xb8, 0x7c, 0x01, 0xc3, 0xa1, 0x7a, 0xab, 0xc8, 0x7f, 0xbb, 0x68, 0x65, 0x1b, 0x3c, 0x78, 0x84,
	0xc0, 0x89, 0xa1, 0x5e, 0x41, 0xcb, 0xea, 0xfd, 0xe0, 0xd1, 0x91, 0x3e, 0xd4, 0xa2, 0x57, 0x8d,
	0x47, 0x28, 0x03, 0xcf, 0xa1, 0xca, 0x26, 0xf1, 0xef, 0x6f, 0x51, 0x07, 0x0a, 0x22, 0x6a, 0x56,
	0xbe, 0xc6, 0xb6, 0x6c, 0xea, 0xa8, 0x71, 0x3c, 0xc2, 0x1c, 0xf3, 0x7a, 0x39, 0x3f, 0x44, 0x95,
	0x13, 0xdc, 0xd0, 0xc6, 0xf5, 0x9d, 0xf4, 0x68, 0x80, 0x9f, 0x40, 0x4b, 0xaf, 0xfb, 0xf7, 0x7d,
	0x7a, 0xe4, 0x27, 0x8b, 0x8b, 0x25, 0x43, 0xaf, 0x94, 0xf0, 0x3c, 0x9a, 0xda, 0x03, 0xc6, 0x17,
	0x35, 0xf5, 0x34, 0x87, 0xca, 0x77, 0xd9, 0xc1, 0xa2, 0x2e, 0x1f, 0x0c, 0xbd, 0x5a, 0x6a, 0xfc,
	0x74, 0x05, 0x9d, 0x1d, 0x86, 0x1e, 0xb0, 0x43, 0xd7, 0x06, 0xfc, 0x77, 0x1d, 0xa1, 0x24, 0x20,
	0xf1, 0x93, 0x49, 0xd7, 0xc8, 0x0d, 0x7b, 0x46, 0x7e, 0x70, 0x5a, 0xfd, 0x85, 0x7e, 0xd2, 0xfc,
	0x4c, 0x4b, 0xde, 0xc6, 0x97, 0xf7, 0x41, 0x30, 0x17, 0x0e, 0xc1, 0x24, 0xbe, 0x19, 0x69, 0x1b,
	0x37, 0x87, 0x8b, 0xdc, 0x24, 0x9e, 0x67, 0x3a, 0x44, 0x10, 0xb3, 0xc3, 0x68, 0x2f, 0xa5, 0x63,
	0x72, 0xf0, 0xc0, 0x16, 0xe0, 0x98, 0xed, 0x81, 0x29, 0xba, 0x60, 0xf2, 0xa0, 0xdf, 0xf7, 0x5c,
	0x70, 0xcc, 0x84, 0x66, 0xeb, 0xd6, 0x2d, 0x54, 0x6e, 0xd4, 0xeb, 0x78, 0x0b, 0x5d, 0x8a, 0x4c,
	0x32, 0xe1, 0x18, 0xec, 0x40, 0x6e, 0xe3, 0x81, 0x6d, 0x03, 0xe7, 0x9d, 0xc0, 0xf3, 0x06, 0x16,
	0xbe, 0x82, 0x2e, 0x1b, 0x17, 0x9f, 0xaa, 0x39, 0xd0, 0x71, 0x7d, 0x37, 0xfa, 0x26, 0x11, 0x99,
	0x1e, 0x59, 0x7a, 0xeb, 0x3a, 0x2a, 0xbf, 0x54, 0x7f, 0x09, 0xaf, 0xa3, 0xb5, 0x7d, 0x10, 0x01,
	0xf3, 0xc1, 0x31, 0x8f, 0xba, 0xe0, 0xab, 0xc3, 0x19, 0x70, 0x1a, 0x30, 0x1b, 0x4c, 0x97, 0x9b,
	0x3e, 0x15, 0x66, 0x87, 0x06, 0xbe, 0x63, 0xb5, 0x31, 0x5a, 0x44, 0x33, 0x77, 0x9b, 0x81, 0xe8,
	0x36, 0xf0, 0x0c, 0x9a, 0x62, 0x40, 0x9c, 0xf7, 0xfe, 0xf4, 0xb7, 0x1f, 0xe9, 0x06, 0xae, 0x66,
	0xbe, 0xb6, 0xbc, 0x1b, 0xc7, 0xcd, 0xb7, 0xdf, 0xd7, 0x4b, 0x1f, 0xe8, 0xca, 0xb9, 0xf8, 0xcf,
	0x3a, 0x9a, 0x4b, 0x8d, 0xa7, 0xf8, 0x42, 0x11, 0xd5, 0xc3, 0xda, 0x62, 0x5c, 0x1c, 0x23, 0x0d,
	0x83, 0x73, 0xf5, 0x7b, 0xfa, 0x49, 0xf3, 0xd3, 0x14, 0xef, 0x4b, 0xb7, 0x5d, 0x2e, 0x14, 0xbb,
	0xf1, 0xf7, 0x9d, 0x6f, 0x84, 0xf7, 0xe2, 0x26, 0x31, 0x3d, 0x29, 0x94, 0x6f, 0xb4, 0xc4, 0xf5,
	0x5d, 0xff, 0xc0, 0x0c, 0xfa, 0xa6, 0xa0, 0x66, 0xa3, 0x1e, 0x2b, 0x5b, 0xe6, 0xdb, 0x05, 0x83,
	0xf5, 0xdb, 0xa6, 0x4d, 0x7c, 0xb3, 0x0d, 0x66, 0xc0, 0xc1, 0x31, 0x3b, 0x94, 0x99, 0x7d, 0x72,
	0xe0, 0xfa, 0xea, 0xc3, 0x8e, 0x75, 0xeb, 0x8d, 0xd0, 0x19, 0x77, 0x4f, 0x75, 0xc6, 0x35, 0xf4,
	0x82, 0xf1, 0x7c, 0xb1, 0x33, 0x0a, 0xae, 0x36, 0x96, 0xe5, 0xb3, 0x78, 0x3e, 0xcd, 0x72, 0x8a,
	0xd9, 0x9f, 0xe9, 0x68, 0x21, 0xd3, 0xca, 0xf1, 0xa5, 0x84, 0xbd, 0xa2, 0x19, 0xd1, 0xb8, 0x3c,
	0x56, 0x1e, 0xf1, 0xfb, 0x3b, 0xed, 0xa4, 0xf9, 0x61, 0x9a, 0xdf, 0x50, 0x2d, 0x1d, 0xd5, 0xd1,
	0xf4, 0x20, 0xf9, 0xf5, 0xe1, 0x68, 0xb8, 0x7c, 0xeb, 0xab, 0x92, 0x96, 0xeb, 0x78, 0x4f, 0x7d,
	0xf6, 0x51, 0xa1, 0x6d, 0x2b, 0xbd, 0x51, 0x56, 0x6a, 0xe8, 0x9a, 0xf1, 0x42, 0x31, 0x2b, 0x85,
	0x26, 0xb5, 0x97, 0xd1, 0x52, 0xcc, 0xcb, 0x19, 0x34, 0x7d, 0xc4, 0x5c, 0x01, 0x8a, 0x98, 0xa5,
	0x0d, 0x6d, 0x7d, 0x75, 0x1c, 0x37, 0xdf, 0xd5, 0xd1, 0x42, 0xa6, 0x69, 0xa6, 0xb9, 0x29, 0x6a,
	0xe3, 0xc6, 0xf9, 0x5c, 0x0f, 0xb9, 0xd1, 0xeb, 0x8b, 0xc1, 0xea, 0x47, 0xda, 0x49, 0xf3, 0x07,
	0x69, 0x4a, 0xc2, 0xdd, 0x69, 0x4a, 0xea, 0xe1, 0x12, 0x4f, 0x27, 0xf6, 0x91, 0x2b, 0xba, 0x2a,
	0x30, 0x65, 0x62, 0x75, 0x5c, 0xf0, 0x1c, 0x1e, 0x27, 0xb7, 0x75, 0xeb, 0x59, 0xc9, 0xd6, 0x4b,
	0xf8, 0x72, 0xc2, 0x56, 0xa0, 0x20, 0x46, 0xd8, 0x1a, 0x7f, 0xf9, 0x8b, 0x1b, 0xda, 0xba, 0x71,
	0x6a, 0xfa, 0xe1, 0x7f, 0x6a, 0x68, 0x21, 0xd3, 0x7b, 0xd2, 0x34, 0x14, 0x35, 0xa5, 0xb1, 0x34,
	0xfc, 0x5c, 0x3b, 0x69, 0x0e, 0x52, 0x2c, 0x84, 0x9b, 0xd3, 0x2c, 0x5c, 0xda, 0x03, 0xd6, 0x23,
	0x3e, 0xf8, 0xc2, 0x1b, 0x98, 0xce, 0xa8, 0xb8, 0xe8, 0xce, 0xa1, 0xd2, 0x03, 0xdf, 0xd9, 0x58,
	0x3f, 0xfd, 0xc2, 0xbf, 0x2c, 0xa3, 0xc5, 0xd1, 0x41, 0x03, 0x5f, 0x29, 0x2a, 0x2a, 0x99, 0x99,
	0xc6, 0x58, 0xfd, 0x6f, 0x2a, 0x51, 0x72, 0xfc, 0x5e, 0x3f, 0x69, 0xfe, 0x44, 0x4f, 0x38, 0xb8,
	0x50, 0x50, 0xf4, 0x9f, 0xe3, 0x66, 0x38, 0x09, 0x18, 0xbb, 0x49, 0xf5, 0x0f, 0x57, 0x4c, 0xda,
	0x51, 0xc1, 0x10, 0x69, 0x5e, 0xcd, 0xd5, 0xfe, 0xa4, 0xe4, 0x9b, 0x03, 0x1a, 0xa4, 0xa2, 0xe5,
	0xeb, 0x61, 0xc9, 0xb9, 0x77, 0x6a, 0xc9, 0x69, 0xa0, 0xba, 0x61, 0x9d, 0x56, 0x72, 0xb2, 0xb7,
	0xfa, 0x5f, 0x36, 0x84, 0x2b, 0xf8, 0xf2, 0x38, 0x07, 0xd5, 0x42, 0x0e, 0x52, 0x19, 0xfa, 0x63,
	0x1d, 0x2d, 0x17, 0x8c, 0xb5, 0xf8, 0xe9, 0x31, 0x79, 0x9a, 0xf5, 0xd7, 0xb8, 0x30, 0xfd, 0x58,
	0x3b, 0x69, 0x7e, 0x3f, 0x95, 0xad, 0xd5, 0x5c, 0xb6, 0x0e, 0xfd, 0x73, 0x65, 0x98, 0xb4, 0xaa,
	0xed, 0xc6, 0x1e, 0x4a, 0x47, 0xec, 0xd5, 0x30, 0x62, 0x9f, 0x41, 0x4f, 0x65, 0x6c, 0x98, 0x34,
	0x57, 0x9f, 0x96, 0xb9, 0xfa, 0xa0, 0xcc, 0xe0, 0x4f, 0x74, 0x34, 0x9f, 0x1e, 0xcc, 0x70, 0xaa,
	0x25, 0x16, 0xcc, 0x7e, 0xc6, 0xa5, 0x71, 0xe2, 0x28, 0x6a, 0x7f, 0xa8, 0x9f, 0x34, 0xff, 0x91,
	0x66, 0xe4, 0x0d, 0x60, 0x6e, 0x67, 0x10, 0xd3, 0x01, 0xc7, 0x2e, 0x17, 0xe0, 0xdb, 0x60, 0xac,
	0x45, 0x92, 0xa3, 0x2e, 0x88, 0x2e, 0x30, 0x93, 0x32, 0xe5, 0xf4, 0x14, 0x75, 0x4a, 0x97, 0x5b,
	0x0f, 0x11, 0x33, 0x61, 0x7f, 0xa8, 0xe3, 0xbd, 0x53, 0x63, 0xd8, 0x42, 0x57, 0x8d, 0xf5, 0x31,
	0x0d, 0xa2, 0xe0, 0x7e, 0x63, 0x83, 0x71, 0x65, 0x15, 0x67, 0x28, 0x57, 0xdf, 0xcb, 0x93, 0xf8,
	0x33, 0xca, 0xef, 0xeb, 0xa5, 0xcd, 0x3f, 0x4e, 0x9f, 0x34, 0x7f, 0x3d, 0x8d, 0xca, 0x0d, 0xab,
	0x8e, 0x77, 0xe3, 0xef, 0x1c, 0xdc, 0x6c, 0xee, 0xed, 0xe2, 0xc6, 0x1e, 0xa3, 0x87, 0xae, 0x03,
	0xdc, 0xdc, 0xda, 0x7f, 0x7d, 0xdb, 0xa4, 0x7d, 0x60, 0xe1, 0x6f, 0x3b, 0x26, 0xf5, 0xd3, 0xf9,
	0xca, 0xe3, 0x2b, 0x5b, 0x8d, 0xe9, 0xeb, 0x56, 0xdd, 0xaa, 0xaf, 0x6b, 0x7a, 0x63, 0x91, 0xc8,
	0xec, 0xb5, 0xd5, 0x8e, 0xda, 0x3b, 0x9c, 0xfa, 0x1b, 0xb9, 0x95, 0xfd, 0x3d, 0x49, 0xe3, 0x8b,
	0x78, 0x17, 0xdd, 0xcc, 0xd3, 0x18, 0x70, 0x60, 0xa6, 0x43, 0x21, 0x24, 0xb1, 0x4b, 0x0e, 0xc1,
	0xec, 0x03, 0xeb, 0xb9, 0x9c, 0xbb, 0xf2, 0x78, 0x2a, 0x4f, 0x07, 0xce, 0x33, 0x94, 0x5b, 0xfb,
	0x3b, 0xa8, 0xfc, 0x72, 0xbd, 0x8e, 0xbf, 0x84, 0xbe, 0x98, 0x45, 0x24, 0xbe, 0x19, 0xf8, 0x70,
	0xdc, 0x0f, 0xeb, 0x0d, 0x30, 0x46, 0x99, 0x49, 0x6d, 0x3b, 0x60, 0xe0, 0x0c, 0x6f, 0xc3, 0x81,
	0x1d, 0x02, 0x33, 0xb9, 0xeb, 0x80, 0xb5, 0xdf, 0x92, 0x96, 0xd5, 0xf1, 0x9b, 0xe8, 0x8d, 0x22,
	0x07, 0x87, 0xfe, 0x6b, 0x53, 0x67, 0x20, 0x9d, 0xdc, 0x23, 0x5e, 0x87, 0xb2, 0x1e, 0x11, 0x12,
	0x9a, 0xa6, 0x8c, 0xee, 0x11, 0x61, 0x77, 0xd5, 0x96, 0xf8, 0xe4, 0x68, 0xaf, 0xb5, 0x7f, 0x5b,
	0x1e, 0x70, 0x1d, 0xdf, 0x40, 0x5b, 0xe3, 0x0f, 0x88, 0x81, 0xa2, 0x11, 0x8e, 0xc7, 0xc4, 0x3c,
	0xc7, 0xe5, 0x74, 0xe1, 0x80, 0x2f, 0x5c, 0xe2, 0x71, 0xeb, 0xad, 0x4f, 0x35, 0xf4, 0x89, 0x16,
	0x47, 0xc1, 0x5f, 0xb5, 0x4a, 0x19, 0xbf, 0xa7, 0x35, 0x23, 0x82, 0x68, 0xde, 0x51, 0x5c, 0xda,
	0xcd, 0x80, 0x0b, 0xe6, 0x2a, 0xb3, 0xa4, 0x4e, 0x20, 0xba, 0x12, 0xcf, 0x56, 0x99, 0x2d, 0x0f,
	0xe1, 0x96, 0x79, 0x4f, 0x7a, 0x39, 0x11, 0x48, 0xe6, 0xfb, 0x8c, 0x2a, 0xd8, 0x0e, 0xf5, 0x3c,
	0x7a, 0x14, 0x9a, 0x24, 0x8f, 0xa5, 0xcc, 0xfd, 0x56, 0xa8, 0x21, 0x5f, 0x87, 0xcc, 0x8e, 0x47,
	0x8f, 0xac, 0xb5, 0xa9, 0x46, 0x45, 0xc5, 0x60, 0x20, 0xba, 0x1b, 0xb3, 0xea, 0x17, 0x3d, 0x7a,
	0x1f, 0xfc, 0xcd, 0x0d, 0x74, 0x21, 0xaa, 0x0f, 0x78, 0xf9, 0x26, 0x23, 0xd2, 0x32, 0xf5, 0x14,
	0xf9, 0x14, 0x19, 0x61, 0x18, 0x63, 0x1c, 0x09, 0xe5, 0x43, 0x24, 0x7b, 0x45, 0xdb, 0x2b, 0xbd,
	0x15, 0xff, 0x98, 0xf9, 0x1d, 0xad, 0xf4, 0xbe, 0x56, 0xfa, 0x40, 0x2b, 0x7d, 0xa4, 0x95, 0xfe,
	0xa2, 0x95, 0xfe, 0xad, 0x95, 0xfe, 0xa0, 0x97, 0xda, 0x33, 0xaa, 0x26, 0xbe, 0xf8, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe0, 0xf6, 0xf0, 0x73, 0x28, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	// GetAccount retrieves the detail of an account, selected by its id.
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error)
	// GetAccounts returns a list containing up to 20 accounts.
	GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error)
	// CreateAccount creates a new account and return its id.
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	// UpdateAccount updates an account.
	UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteAccount deletes an account.
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetAccountStatus retrieves the status of an account, selected by its id.
	GetAccountStatus(ctx context.Context, in *GetAccountStatusRequest, opts ...grpc.CallOption) (*GetAccountStatusResponse, error)
	// UpdateAccountStatus updates an account status.
	UpdateAccountStatus(ctx context.Context, in *UpdateAccountStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// CheckAccount checks if an account with the specific ID exists, returning the account owner's name if it does.
	CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountResponse, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error) {
	out := new(GetAccountsResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountStatus(ctx context.Context, in *GetAccountStatusRequest, opts ...grpc.CallOption) (*GetAccountStatusResponse, error) {
	out := new(GetAccountStatusResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/GetAccountStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateAccountStatus(ctx context.Context, in *UpdateAccountStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/UpdateAccountStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CheckAccount(ctx context.Context, in *CheckAccountRequest, opts ...grpc.CallOption) (*CheckAccountResponse, error) {
	out := new(CheckAccountResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/CheckAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	// GetAccount retrieves the detail of an account, selected by its id.
	GetAccount(context.Context, *GetAccountRequest) (*Account, error)
	// GetAccounts returns a list containing up to 20 accounts.
	GetAccounts(context.Context, *GetAccountsRequest) (*GetAccountsResponse, error)
	// CreateAccount creates a new account and return its id.
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	// UpdateAccount updates an account.
	UpdateAccount(context.Context, *UpdateAccountRequest) (*empty.Empty, error)
	// DeleteAccount deletes an account.
	DeleteAccount(context.Context, *DeleteAccountRequest) (*empty.Empty, error)
	// GetAccountStatus retrieves the status of an account, selected by its id.
	GetAccountStatus(context.Context, *GetAccountStatusRequest) (*GetAccountStatusResponse, error)
	// UpdateAccountStatus updates an account status.
	UpdateAccountStatus(context.Context, *UpdateAccountStatusRequest) (*empty.Empty, error)
	// CheckAccount checks if an account with the specific ID exists, returning the account owner's name if it does.
	CheckAccount(context.Context, *CheckAccountRequest) (*CheckAccountResponse, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) GetAccount(ctx context.Context, req *GetAccountRequest) (*Account, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedAccountServiceServer) GetAccounts(ctx context.Context, req *GetAccountsRequest) (*GetAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccounts not implemented")
}
func (*UnimplementedAccountServiceServer) CreateAccount(ctx context.Context, req *CreateAccountRequest) (*CreateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedAccountServiceServer) UpdateAccount(ctx context.Context, req *UpdateAccountRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccount not implemented")
}
func (*UnimplementedAccountServiceServer) DeleteAccount(ctx context.Context, req *DeleteAccountRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedAccountServiceServer) GetAccountStatus(ctx context.Context, req *GetAccountStatusRequest) (*GetAccountStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountStatus not implemented")
}
func (*UnimplementedAccountServiceServer) UpdateAccountStatus(ctx context.Context, req *UpdateAccountStatusRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountStatus not implemented")
}
func (*UnimplementedAccountServiceServer) CheckAccount(ctx context.Context, req *CheckAccountRequest) (*CheckAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAccount not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccounts(ctx, req.(*GetAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateAccount(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/GetAccountStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountStatus(ctx, req.(*GetAccountStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateAccountStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateAccountStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/UpdateAccountStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateAccountStatus(ctx, req.(*UpdateAccountStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CheckAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CheckAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/CheckAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CheckAccount(ctx, req.(*CheckAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _AccountService_GetAccount_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _AccountService_GetAccounts_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _AccountService_UpdateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _AccountService_DeleteAccount_Handler,
		},
		{
			MethodName: "GetAccountStatus",
			Handler:    _AccountService_GetAccountStatus_Handler,
		},
		{
			MethodName: "UpdateAccountStatus",
			Handler:    _AccountService_UpdateAccountStatus_Handler,
		},
		{
			MethodName: "CheckAccount",
			Handler:    _AccountService_CheckAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/accounts/all.proto",
}
