{
  "swagger": "2.0",
  "info": {
    "title": "Counterpart API",
    "description": "Provides CRUD operations on the counter part resource.",
    "version": "1.0.0"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/accounts/{accountID}/otheraccounts": {
      "get": {
        "summary": "Retrieve all other account with account id",
        "description": "Retrieves all other accounts (counter party) for an account id",
        "operationId": "GetOtherAccounts",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/counterpartyGetOtherAccountsResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/counterparty.read"
            ]
          }
        ]
      }
    },
    "/v1/accounts/{accountID}/otheraccounts/{otherAccountID}": {
      "get": {
        "summary": "Retrieve an account with other account id",
        "description": "Retrieves other account (counter party) by other account id",
        "operationId": "GetOtherAccountByID",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/counterpartyGetOtherAccountByIDResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "accountID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "otherAccountID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/counterparty.read"
            ]
          }
        ]
      }
    },
    "/v1/counterparties": {
      "get": {
        "summary": "List all accounts",
        "description": "Returns a list containing up to 20 accounts. `after_index` can be used for pagination.",
        "operationId": "GetCounterParties",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/counterpartyGetCounterPartiesResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "after_id",
            "description": "AfterID is a cursor for pagination.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Limit is maximum number of results to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Counterparty"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/counterparty.read"
            ]
          }
        ]
      }
    },
    "/v1/counterparty": {
      "post": {
        "summary": "Create an counter party",
        "description": "Creates a new counter party",
        "operationId": "CreateCounterParty",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/counterpartyCreateCounterPartyResponse"
            }
          },
          "201": {
            "description": "Counter Party created successfully.",
            "schema": {
              "$ref": "#/definitions/counterpartyCreateCounterPartyResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/counterpartyCreateCounterPartyRequest"
            }
          }
        ],
        "tags": [
          "Counterparty"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/counterparty.write"
            ]
          }
        ]
      }
    },
    "/v1/counterparty/{iD}": {
      "get": {
        "summary": "Retrieve an counter party",
        "description": "Retrieves all data from an counter party selected by the supplied counter_party_id.",
        "operationId": "GetCounterParty",
        "responses": {
          "200": {
            "description": "Request executed successfully.",
            "schema": {
              "$ref": "#/definitions/counterpartyCounterParty"
            }
          },
          "400": {
            "description": "Returned when the request body is malformatted or does not match the expected request.",
            "schema": {}
          },
          "401": {
            "description": "Returned when the request does not contains the user's credentials.",
            "schema": {}
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource is not found.",
            "schema": {}
          },
          "500": {
            "description": "Returned when an unexpected error occured on the server side.",
            "schema": {}
          }
        },
        "parameters": [
          {
            "name": "iD",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Counterparty"
        ],
        "security": [
          {
            "OAuth2": [
              "https://auth.bnk.to/counterparty.read"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "counterpartyAccountRoutings": {
      "type": "object",
      "properties": {
        "scheme": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "counterpartyBankRouting": {
      "type": "object",
      "properties": {
        "scheme": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "counterpartyBespoke": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "any info-key you want to add to this counerparty"
        },
        "value": {
          "type": "string",
          "title": "any info-value you want to add to this counerparty"
        }
      },
      "title": "Structure of Bespoke"
    },
    "counterpartyCounterParty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The human readable name (e.g. John Bravo)"
        },
        "description": {
          "type": "string",
          "title": "The description of the about counter party"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "title": "Account routing schme such as AccountId or AccountNumber or any   strings"
        },
        "other_account_routing_address": {
          "type": "string",
          "title": "Account routing address is a valid account identifier"
        },
        "other_account_secondary_routing_scheme": {
          "type": "string",
          "title": "Account secondary routing address such as IBan"
        },
        "other_account_secondary_routing_address": {
          "type": "string",
          "description": "IBan it should be unique for each counterparty."
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "title": "Bank routing scheme such as bankId or bankCode or any   strings"
        },
        "other_bank_routing_address": {
          "type": "string",
          "title": "Bank routing address such as eg: testsandbox, must be valid sandbox bankIds"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "title": "Branch routing scheme such as branchId or any other strings"
        },
        "other_branch_routing_address": {
          "type": "string",
          "title": "Branch routing address like branch-id-765 or you can leave it empty"
        },
        "is_beneficiary": {
          "type": "boolean",
          "format": "boolean",
          "title": "Must be set to true in order to send payments to this counterparty"
        },
        "bespoke": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/counterpartyBespoke"
          },
          "description": "It support list of key-value, you can add it to the counterarty."
        },
        "metadata": {
          "$ref": "#/definitions/counterpartyMetadata",
          "title": "Metadata about the counter party"
        }
      },
      "title": "Structure of counter part"
    },
    "counterpartyCreateCounterPartyRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "other_account_routing_scheme": {
          "type": "string"
        },
        "other_account_routing_address": {
          "type": "string"
        },
        "other_account_secondary_routing_scheme": {
          "type": "string"
        },
        "other_account_secondary_routing_address": {
          "type": "string"
        },
        "other_bank_routing_scheme": {
          "type": "string"
        },
        "other_bank_routing_address": {
          "type": "string"
        },
        "other_branch_routing_scheme": {
          "type": "string"
        },
        "other_branch_routing_address": {
          "type": "string"
        },
        "is_beneficiary": {
          "type": "boolean",
          "format": "boolean"
        },
        "bespoke": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/counterpartyBespoke"
          }
        }
      },
      "title": "CreateCounterPartyRequest is a request mesasge to create counterparty"
    },
    "counterpartyCreateCounterPartyResponse": {
      "type": "object",
      "properties": {
        "counter_party": {
          "$ref": "#/definitions/counterpartyCounterParty"
        },
        "metadata": {
          "$ref": "#/definitions/counterpartyMetadata"
        },
        "physical_location": {
          "$ref": "#/definitions/typesLocation"
        },
        "private_alias": {
          "type": "string"
        }
      },
      "title": "CreateCounterPartyResponse is a response message for create counter party request"
    },
    "counterpartyGetCounterPartiesResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/counterpartyCounterParty"
          },
          "description": "Result is the paginated query result."
        }
      },
      "description": "GetCounterPartiesResponse wraps the list of counter parties."
    },
    "counterpartyGetOtherAccountByIDResponse": {
      "type": "object",
      "properties": {
        "other_account": {
          "$ref": "#/definitions/counterpartyOtherAccount"
        }
      }
    },
    "counterpartyGetOtherAccountsResponse": {
      "type": "object",
      "properties": {
        "other_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/counterpartyOtherAccount"
          }
        }
      }
    },
    "counterpartyHolder": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "is_alias": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "counterpartyMetadata": {
      "type": "object",
      "properties": {
        "public_alias": {
          "type": "string"
        },
        "more_info": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "open_corporates_url": {
          "type": "string"
        },
        "corporate_location": {
          "$ref": "#/definitions/typesLocation"
        },
        "physical_location": {
          "$ref": "#/definitions/typesLocation"
        },
        "private_alias": {
          "type": "string"
        }
      },
      "title": "Structure of Metadata"
    },
    "counterpartyOtherAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "holder": {
          "$ref": "#/definitions/counterpartyHolder"
        },
        "bank_routing": {
          "$ref": "#/definitions/counterpartyBankRouting"
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/counterpartyAccountRoutings"
          }
        },
        "metadata": {
          "$ref": "#/definitions/counterpartyMetadata"
        }
      }
    },
    "typesLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0]."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "title": "The longitude in degrees. It must be in the range [-180.0, +180.0]"
        }
      },
      "description": "Location is An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude.\nValues must be within normalized ranges.\nRefer to https://godoc.org/google.golang.org/genproto/googleapis/type/latlng."
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "Access to counter party resources is restricted to authenticated users. The authentication process follows the Authorization Code flow.",
      "flow": "accessCode",
      "authorizationUrl": "/v1/auth",
      "tokenUrl": "/v1/token",
      "scopes": {
        "https://auth.bnk.to/counterparty.read": "View counterparty data",
        "https://auth.bnk.to/counterparty.write": "Manage counterparty data"
      }
    }
  }
}
