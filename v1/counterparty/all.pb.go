// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/counterparty/all.proto

package counterparty

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Entity type defines the type of counterparty
type TransactionRequestType int32

const (
	TransactionRequestType_UnknownTransactionRequestType TransactionRequestType = 0
	// Counter party type
	TransactionRequestType_COUNTERPARTY TransactionRequestType = 1
	// TransactionRequestType_SEPA transaction type
	TransactionRequestType_SEPA TransactionRequestType = 2
)

var TransactionRequestType_name = map[int32]string{
	0: "UnknownTransactionRequestType",
	1: "COUNTERPARTY",
	2: "SEPA",
}

var TransactionRequestType_value = map[string]int32{
	"UnknownTransactionRequestType": 0,
	"COUNTERPARTY":                  1,
	"SEPA":                          2,
}

func (x TransactionRequestType) String() string {
	return proto.EnumName(TransactionRequestType_name, int32(x))
}

func (TransactionRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{0}
}

// Structure of counter part
type CounterParty struct {
	// The human readable name (e.g. John Bravo)
	Name string `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	// The description of the about counter party
	Description string `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	// Account routing schme such as AccountId or AccountNumber or any   strings
	OtherAccountRoutingScheme string `protobuf:"bytes,3,opt,name=OtherAccountRoutingScheme,json=other_account_routing_scheme,proto3" json:"OtherAccountRoutingScheme,omitempty"`
	// Account routing address is a valid account identifier
	OtherAccountRoutingAddress string `protobuf:"bytes,4,opt,name=OtherAccountRoutingAddress,json=other_account_routing_address,proto3" json:"OtherAccountRoutingAddress,omitempty"`
	//  Account secondary routing address such as IBan
	OtherAccountSecondaryRoutingScheme string `protobuf:"bytes,5,opt,name=OtherAccountSecondaryRoutingScheme,json=other_account_secondary_routing_scheme,proto3" json:"OtherAccountSecondaryRoutingScheme,omitempty"`
	// IBan it should be unique for each counterparty.
	OtherAccountSecondaryRoutingAddress string `protobuf:"bytes,6,opt,name=OtherAccountSecondaryRoutingAddress,json=other_account_secondary_routing_address,proto3" json:"OtherAccountSecondaryRoutingAddress,omitempty"`
	// Bank routing scheme such as bankId or bankCode or any   strings
	OtherBankRoutingScheme string `protobuf:"bytes,7,opt,name=OtherBankRoutingScheme,json=other_bank_routing_scheme,proto3" json:"OtherBankRoutingScheme,omitempty"`
	// Bank routing address such as eg: testsandbox, must be valid sandbox bankIds
	OtherBankRoutingAddress string `protobuf:"bytes,8,opt,name=OtherBankRoutingAddress,json=other_bank_routing_address,proto3" json:"OtherBankRoutingAddress,omitempty"`
	// Branch routing scheme such as branchId or any other strings
	OtherBranchRoutingScheme string `protobuf:"bytes,9,opt,name=OtherBranchRoutingScheme,json=other_branch_routing_scheme,proto3" json:"OtherBranchRoutingScheme,omitempty"`
	// Branch routing address like branch-id-765 or you can leave it empty
	OtherBranchRoutingAddress string `protobuf:"bytes,10,opt,name=OtherBranchRoutingAddress,json=other_branch_routing_address,proto3" json:"OtherBranchRoutingAddress,omitempty"`
	// Must be set to true in order to send payments to this counterparty
	IsBeneficiary bool `protobuf:"varint,11,opt,name=IsBeneficiary,json=is_beneficiary,proto3" json:"IsBeneficiary,omitempty"`
	// It support list of key-value, you can add it to the counterarty.
	Bespoke []*Bespoke `protobuf:"bytes,12,rep,name=Bespoke,json=bespoke,proto3" json:"Bespoke,omitempty"`
	// Metadata about the counter party
	Metadata             *Metadata `protobuf:"bytes,13,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CounterParty) Reset()         { *m = CounterParty{} }
func (m *CounterParty) String() string { return proto.CompactTextString(m) }
func (*CounterParty) ProtoMessage()    {}
func (*CounterParty) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{0}
}

func (m *CounterParty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CounterParty.Unmarshal(m, b)
}
func (m *CounterParty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CounterParty.Marshal(b, m, deterministic)
}
func (m *CounterParty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CounterParty.Merge(m, src)
}
func (m *CounterParty) XXX_Size() int {
	return xxx_messageInfo_CounterParty.Size(m)
}
func (m *CounterParty) XXX_DiscardUnknown() {
	xxx_messageInfo_CounterParty.DiscardUnknown(m)
}

var xxx_messageInfo_CounterParty proto.InternalMessageInfo

func (m *CounterParty) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CounterParty) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CounterParty) GetOtherAccountRoutingScheme() string {
	if m != nil {
		return m.OtherAccountRoutingScheme
	}
	return ""
}

func (m *CounterParty) GetOtherAccountRoutingAddress() string {
	if m != nil {
		return m.OtherAccountRoutingAddress
	}
	return ""
}

func (m *CounterParty) GetOtherAccountSecondaryRoutingScheme() string {
	if m != nil {
		return m.OtherAccountSecondaryRoutingScheme
	}
	return ""
}

func (m *CounterParty) GetOtherAccountSecondaryRoutingAddress() string {
	if m != nil {
		return m.OtherAccountSecondaryRoutingAddress
	}
	return ""
}

func (m *CounterParty) GetOtherBankRoutingScheme() string {
	if m != nil {
		return m.OtherBankRoutingScheme
	}
	return ""
}

func (m *CounterParty) GetOtherBankRoutingAddress() string {
	if m != nil {
		return m.OtherBankRoutingAddress
	}
	return ""
}

func (m *CounterParty) GetOtherBranchRoutingScheme() string {
	if m != nil {
		return m.OtherBranchRoutingScheme
	}
	return ""
}

func (m *CounterParty) GetOtherBranchRoutingAddress() string {
	if m != nil {
		return m.OtherBranchRoutingAddress
	}
	return ""
}

func (m *CounterParty) GetIsBeneficiary() bool {
	if m != nil {
		return m.IsBeneficiary
	}
	return false
}

func (m *CounterParty) GetBespoke() []*Bespoke {
	if m != nil {
		return m.Bespoke
	}
	return nil
}

func (m *CounterParty) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Structure of Bespoke
type Bespoke struct {
	// any info-key you want to add to this counerparty
	Key string `protobuf:"bytes,1,opt,name=Key,json=key,proto3" json:"Key,omitempty"`
	// any info-value you want to add to this counerparty
	Value                string   `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bespoke) Reset()         { *m = Bespoke{} }
func (m *Bespoke) String() string { return proto.CompactTextString(m) }
func (*Bespoke) ProtoMessage()    {}
func (*Bespoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{1}
}

func (m *Bespoke) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bespoke.Unmarshal(m, b)
}
func (m *Bespoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bespoke.Marshal(b, m, deterministic)
}
func (m *Bespoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bespoke.Merge(m, src)
}
func (m *Bespoke) XXX_Size() int {
	return xxx_messageInfo_Bespoke.Size(m)
}
func (m *Bespoke) XXX_DiscardUnknown() {
	xxx_messageInfo_Bespoke.DiscardUnknown(m)
}

var xxx_messageInfo_Bespoke proto.InternalMessageInfo

func (m *Bespoke) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Bespoke) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Structure of Metadata
type Metadata struct {
	PublicAlias          string          `protobuf:"bytes,1,opt,name=PublicAlias,json=public_alias,proto3" json:"PublicAlias,omitempty"`
	MoreInfo             string          `protobuf:"bytes,2,opt,name=MoreInfo,json=more_info,proto3" json:"MoreInfo,omitempty"`
	URL                  string          `protobuf:"bytes,3,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	ImageURL             string          `protobuf:"bytes,4,opt,name=ImageURL,json=image_url,proto3" json:"ImageURL,omitempty"`
	OpenCorporatesURL    string          `protobuf:"bytes,5,opt,name=OpenCorporatesURL,json=open_corporates_url,proto3" json:"OpenCorporatesURL,omitempty"`
	CorporateLocation    *types.Location `protobuf:"bytes,6,opt,name=CorporateLocation,json=corporate_location,proto3" json:"CorporateLocation,omitempty"`
	PhysicalLocation     *types.Location `protobuf:"bytes,7,opt,name=PhysicalLocation,json=physical_location,proto3" json:"PhysicalLocation,omitempty"`
	PrivateAlias         string          `protobuf:"bytes,8,opt,name=PrivateAlias,json=private_alias,proto3" json:"PrivateAlias,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{2}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetPublicAlias() string {
	if m != nil {
		return m.PublicAlias
	}
	return ""
}

func (m *Metadata) GetMoreInfo() string {
	if m != nil {
		return m.MoreInfo
	}
	return ""
}

func (m *Metadata) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Metadata) GetImageURL() string {
	if m != nil {
		return m.ImageURL
	}
	return ""
}

func (m *Metadata) GetOpenCorporatesURL() string {
	if m != nil {
		return m.OpenCorporatesURL
	}
	return ""
}

func (m *Metadata) GetCorporateLocation() *types.Location {
	if m != nil {
		return m.CorporateLocation
	}
	return nil
}

func (m *Metadata) GetPhysicalLocation() *types.Location {
	if m != nil {
		return m.PhysicalLocation
	}
	return nil
}

func (m *Metadata) GetPrivateAlias() string {
	if m != nil {
		return m.PrivateAlias
	}
	return ""
}

// CreateCounterPartyRequest is a request mesasge to create counterparty
type CreateCounterPartyRequest struct {
	Name                                string     `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Description                         string     `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	OtherAccountRoutingScheme           string     `protobuf:"bytes,3,opt,name=OtherAccountRoutingScheme,json=other_account_routing_scheme,proto3" json:"OtherAccountRoutingScheme,omitempty"`
	OtherAccountRoutingAddress          string     `protobuf:"bytes,4,opt,name=OtherAccountRoutingAddress,json=other_account_routing_address,proto3" json:"OtherAccountRoutingAddress,omitempty"`
	OtherAccountSecondaryRoutingScheme  string     `protobuf:"bytes,5,opt,name=OtherAccountSecondaryRoutingScheme,json=other_account_secondary_routing_scheme,proto3" json:"OtherAccountSecondaryRoutingScheme,omitempty"`
	OtherAccountSecondaryRoutingAddress string     `protobuf:"bytes,6,opt,name=OtherAccountSecondaryRoutingAddress,json=other_account_secondary_routing_address,proto3" json:"OtherAccountSecondaryRoutingAddress,omitempty"`
	OtherBankRoutingScheme              string     `protobuf:"bytes,7,opt,name=OtherBankRoutingScheme,json=other_bank_routing_scheme,proto3" json:"OtherBankRoutingScheme,omitempty"`
	OtherBankRoutingAddress             string     `protobuf:"bytes,8,opt,name=OtherBankRoutingAddress,json=other_bank_routing_address,proto3" json:"OtherBankRoutingAddress,omitempty"`
	OtherBranchRoutingScheme            string     `protobuf:"bytes,9,opt,name=OtherBranchRoutingScheme,json=other_branch_routing_scheme,proto3" json:"OtherBranchRoutingScheme,omitempty"`
	OtherBranchRoutingAddress           string     `protobuf:"bytes,10,opt,name=OtherBranchRoutingAddress,json=other_branch_routing_address,proto3" json:"OtherBranchRoutingAddress,omitempty"`
	IsBeneficiary                       bool       `protobuf:"varint,11,opt,name=IsBeneficiary,json=is_beneficiary,proto3" json:"IsBeneficiary,omitempty"`
	Bespoke                             []*Bespoke `protobuf:"bytes,12,rep,name=Bespoke,json=bespoke,proto3" json:"Bespoke,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}   `json:"-"`
	XXX_unrecognized                    []byte     `json:"-"`
	XXX_sizecache                       int32      `json:"-"`
}

func (m *CreateCounterPartyRequest) Reset()         { *m = CreateCounterPartyRequest{} }
func (m *CreateCounterPartyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCounterPartyRequest) ProtoMessage()    {}
func (*CreateCounterPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{3}
}

func (m *CreateCounterPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCounterPartyRequest.Unmarshal(m, b)
}
func (m *CreateCounterPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCounterPartyRequest.Marshal(b, m, deterministic)
}
func (m *CreateCounterPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCounterPartyRequest.Merge(m, src)
}
func (m *CreateCounterPartyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCounterPartyRequest.Size(m)
}
func (m *CreateCounterPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCounterPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCounterPartyRequest proto.InternalMessageInfo

func (m *CreateCounterPartyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherAccountRoutingScheme() string {
	if m != nil {
		return m.OtherAccountRoutingScheme
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherAccountRoutingAddress() string {
	if m != nil {
		return m.OtherAccountRoutingAddress
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherAccountSecondaryRoutingScheme() string {
	if m != nil {
		return m.OtherAccountSecondaryRoutingScheme
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherAccountSecondaryRoutingAddress() string {
	if m != nil {
		return m.OtherAccountSecondaryRoutingAddress
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherBankRoutingScheme() string {
	if m != nil {
		return m.OtherBankRoutingScheme
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherBankRoutingAddress() string {
	if m != nil {
		return m.OtherBankRoutingAddress
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherBranchRoutingScheme() string {
	if m != nil {
		return m.OtherBranchRoutingScheme
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetOtherBranchRoutingAddress() string {
	if m != nil {
		return m.OtherBranchRoutingAddress
	}
	return ""
}

func (m *CreateCounterPartyRequest) GetIsBeneficiary() bool {
	if m != nil {
		return m.IsBeneficiary
	}
	return false
}

func (m *CreateCounterPartyRequest) GetBespoke() []*Bespoke {
	if m != nil {
		return m.Bespoke
	}
	return nil
}

// CreateCounterPartyResponse is a response message for create counter party request
type CreateCounterPartyResponse struct {
	CounterParty         *CounterParty   `protobuf:"bytes,1,opt,name=CounterParty,json=counter_party,proto3" json:"CounterParty,omitempty"`
	Metadata             *Metadata       `protobuf:"bytes,2,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	PhysicalLocation     *types.Location `protobuf:"bytes,3,opt,name=PhysicalLocation,json=physical_location,proto3" json:"PhysicalLocation,omitempty"`
	PrivateAlias         string          `protobuf:"bytes,4,opt,name=PrivateAlias,json=private_alias,proto3" json:"PrivateAlias,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateCounterPartyResponse) Reset()         { *m = CreateCounterPartyResponse{} }
func (m *CreateCounterPartyResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCounterPartyResponse) ProtoMessage()    {}
func (*CreateCounterPartyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{4}
}

func (m *CreateCounterPartyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCounterPartyResponse.Unmarshal(m, b)
}
func (m *CreateCounterPartyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCounterPartyResponse.Marshal(b, m, deterministic)
}
func (m *CreateCounterPartyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCounterPartyResponse.Merge(m, src)
}
func (m *CreateCounterPartyResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCounterPartyResponse.Size(m)
}
func (m *CreateCounterPartyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCounterPartyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCounterPartyResponse proto.InternalMessageInfo

func (m *CreateCounterPartyResponse) GetCounterParty() *CounterParty {
	if m != nil {
		return m.CounterParty
	}
	return nil
}

func (m *CreateCounterPartyResponse) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CreateCounterPartyResponse) GetPhysicalLocation() *types.Location {
	if m != nil {
		return m.PhysicalLocation
	}
	return nil
}

func (m *CreateCounterPartyResponse) GetPrivateAlias() string {
	if m != nil {
		return m.PrivateAlias
	}
	return ""
}

// GetCounterPartyRequest is the request envelope to get an counter party by its identifier.
type GetCounterPartyRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCounterPartyRequest) Reset()         { *m = GetCounterPartyRequest{} }
func (m *GetCounterPartyRequest) String() string { return proto.CompactTextString(m) }
func (*GetCounterPartyRequest) ProtoMessage()    {}
func (*GetCounterPartyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{5}
}

func (m *GetCounterPartyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCounterPartyRequest.Unmarshal(m, b)
}
func (m *GetCounterPartyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCounterPartyRequest.Marshal(b, m, deterministic)
}
func (m *GetCounterPartyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCounterPartyRequest.Merge(m, src)
}
func (m *GetCounterPartyRequest) XXX_Size() int {
	return xxx_messageInfo_GetCounterPartyRequest.Size(m)
}
func (m *GetCounterPartyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCounterPartyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCounterPartyRequest proto.InternalMessageInfo

func (m *GetCounterPartyRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

// GetCounterPartiesRequest is the request envelope to get a list of filtered counter parties.
type GetCounterPartiesRequest struct {
	// NextStartingIndex is a cursor for pagination.
	NextStartingIndex    string   `protobuf:"bytes,1,opt,name=NextStartingIndex,json=next_starting_index,proto3" json:"NextStartingIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCounterPartiesRequest) Reset()         { *m = GetCounterPartiesRequest{} }
func (m *GetCounterPartiesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCounterPartiesRequest) ProtoMessage()    {}
func (*GetCounterPartiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{6}
}

func (m *GetCounterPartiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCounterPartiesRequest.Unmarshal(m, b)
}
func (m *GetCounterPartiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCounterPartiesRequest.Marshal(b, m, deterministic)
}
func (m *GetCounterPartiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCounterPartiesRequest.Merge(m, src)
}
func (m *GetCounterPartiesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCounterPartiesRequest.Size(m)
}
func (m *GetCounterPartiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCounterPartiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCounterPartiesRequest proto.InternalMessageInfo

func (m *GetCounterPartiesRequest) GetNextStartingIndex() string {
	if m != nil {
		return m.NextStartingIndex
	}
	return ""
}

// GetCounterPartiesResponse wraps the list of counter parties.
type GetCounterPartiesResponse struct {
	// Result is a list containing up to 20 Counter parties.
	Result []*CounterParty `protobuf:"bytes,1,rep,name=Result,json=result,proto3" json:"Result,omitempty"`
	// HasMore indicates if there are more accounts available.
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,json=has_more,proto3" json:"HasMore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCounterPartiesResponse) Reset()         { *m = GetCounterPartiesResponse{} }
func (m *GetCounterPartiesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCounterPartiesResponse) ProtoMessage()    {}
func (*GetCounterPartiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{7}
}

func (m *GetCounterPartiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCounterPartiesResponse.Unmarshal(m, b)
}
func (m *GetCounterPartiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCounterPartiesResponse.Marshal(b, m, deterministic)
}
func (m *GetCounterPartiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCounterPartiesResponse.Merge(m, src)
}
func (m *GetCounterPartiesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCounterPartiesResponse.Size(m)
}
func (m *GetCounterPartiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCounterPartiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCounterPartiesResponse proto.InternalMessageInfo

func (m *GetCounterPartiesResponse) GetResult() []*CounterParty {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetCounterPartiesResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type GetOtherAccountByIDRequest struct {
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	OtherAccountID       string   `protobuf:"bytes,2,opt,name=OtherAccountID,json=other_account_id,proto3" json:"OtherAccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOtherAccountByIDRequest) Reset()         { *m = GetOtherAccountByIDRequest{} }
func (m *GetOtherAccountByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountByIDRequest) ProtoMessage()    {}
func (*GetOtherAccountByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{8}
}

func (m *GetOtherAccountByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountByIDRequest.Unmarshal(m, b)
}
func (m *GetOtherAccountByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountByIDRequest.Merge(m, src)
}
func (m *GetOtherAccountByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountByIDRequest.Size(m)
}
func (m *GetOtherAccountByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountByIDRequest proto.InternalMessageInfo

func (m *GetOtherAccountByIDRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *GetOtherAccountByIDRequest) GetOtherAccountID() string {
	if m != nil {
		return m.OtherAccountID
	}
	return ""
}

type GetOtherAccountByIDResponse struct {
	OtherAccount         *OtherAccount `protobuf:"bytes,1,opt,name=OtherAccount,json=other_account,proto3" json:"OtherAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetOtherAccountByIDResponse) Reset()         { *m = GetOtherAccountByIDResponse{} }
func (m *GetOtherAccountByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountByIDResponse) ProtoMessage()    {}
func (*GetOtherAccountByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{9}
}

func (m *GetOtherAccountByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountByIDResponse.Unmarshal(m, b)
}
func (m *GetOtherAccountByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountByIDResponse.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountByIDResponse.Merge(m, src)
}
func (m *GetOtherAccountByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountByIDResponse.Size(m)
}
func (m *GetOtherAccountByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountByIDResponse proto.InternalMessageInfo

func (m *GetOtherAccountByIDResponse) GetOtherAccount() *OtherAccount {
	if m != nil {
		return m.OtherAccount
	}
	return nil
}

type OtherAccount struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	Holder               *Holder            `protobuf:"bytes,2,opt,name=Holder,json=holder,proto3" json:"Holder,omitempty"`
	BankRouting          *BankRouting       `protobuf:"bytes,3,opt,name=BankRouting,json=bank_routing,proto3" json:"BankRouting,omitempty"`
	AccountRoutings      []*AccountRoutings `protobuf:"bytes,4,rep,name=AccountRoutings,json=account_routings,proto3" json:"AccountRoutings,omitempty"`
	Metadata             *Metadata          `protobuf:"bytes,5,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OtherAccount) Reset()         { *m = OtherAccount{} }
func (m *OtherAccount) String() string { return proto.CompactTextString(m) }
func (*OtherAccount) ProtoMessage()    {}
func (*OtherAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{10}
}

func (m *OtherAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OtherAccount.Unmarshal(m, b)
}
func (m *OtherAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OtherAccount.Marshal(b, m, deterministic)
}
func (m *OtherAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OtherAccount.Merge(m, src)
}
func (m *OtherAccount) XXX_Size() int {
	return xxx_messageInfo_OtherAccount.Size(m)
}
func (m *OtherAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_OtherAccount.DiscardUnknown(m)
}

var xxx_messageInfo_OtherAccount proto.InternalMessageInfo

func (m *OtherAccount) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *OtherAccount) GetHolder() *Holder {
	if m != nil {
		return m.Holder
	}
	return nil
}

func (m *OtherAccount) GetBankRouting() *BankRouting {
	if m != nil {
		return m.BankRouting
	}
	return nil
}

func (m *OtherAccount) GetAccountRoutings() []*AccountRoutings {
	if m != nil {
		return m.AccountRoutings
	}
	return nil
}

func (m *OtherAccount) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type GetOtherAccountsRequest struct {
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOtherAccountsRequest) Reset()         { *m = GetOtherAccountsRequest{} }
func (m *GetOtherAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountsRequest) ProtoMessage()    {}
func (*GetOtherAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{11}
}

func (m *GetOtherAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountsRequest.Unmarshal(m, b)
}
func (m *GetOtherAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountsRequest.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountsRequest.Merge(m, src)
}
func (m *GetOtherAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountsRequest.Size(m)
}
func (m *GetOtherAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountsRequest proto.InternalMessageInfo

func (m *GetOtherAccountsRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type GetOtherAccountsResponse struct {
	OtherAccounts        []*OtherAccount `protobuf:"bytes,1,rep,name=OtherAccounts,json=other_accounts,proto3" json:"OtherAccounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetOtherAccountsResponse) Reset()         { *m = GetOtherAccountsResponse{} }
func (m *GetOtherAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*GetOtherAccountsResponse) ProtoMessage()    {}
func (*GetOtherAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{12}
}

func (m *GetOtherAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOtherAccountsResponse.Unmarshal(m, b)
}
func (m *GetOtherAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOtherAccountsResponse.Marshal(b, m, deterministic)
}
func (m *GetOtherAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOtherAccountsResponse.Merge(m, src)
}
func (m *GetOtherAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_GetOtherAccountsResponse.Size(m)
}
func (m *GetOtherAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOtherAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOtherAccountsResponse proto.InternalMessageInfo

func (m *GetOtherAccountsResponse) GetOtherAccounts() []*OtherAccount {
	if m != nil {
		return m.OtherAccounts
	}
	return nil
}

type Holder struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	IsAlias              bool     `protobuf:"varint,2,opt,name=IsAlias,json=is_alias,proto3" json:"IsAlias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Holder) Reset()         { *m = Holder{} }
func (m *Holder) String() string { return proto.CompactTextString(m) }
func (*Holder) ProtoMessage()    {}
func (*Holder) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{13}
}

func (m *Holder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Holder.Unmarshal(m, b)
}
func (m *Holder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Holder.Marshal(b, m, deterministic)
}
func (m *Holder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Holder.Merge(m, src)
}
func (m *Holder) XXX_Size() int {
	return xxx_messageInfo_Holder.Size(m)
}
func (m *Holder) XXX_DiscardUnknown() {
	xxx_messageInfo_Holder.DiscardUnknown(m)
}

var xxx_messageInfo_Holder proto.InternalMessageInfo

func (m *Holder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Holder) GetIsAlias() bool {
	if m != nil {
		return m.IsAlias
	}
	return false
}

type BankRouting struct {
	Scheme               string   `protobuf:"bytes,1,opt,name=Scheme,json=scheme,proto3" json:"Scheme,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankRouting) Reset()         { *m = BankRouting{} }
func (m *BankRouting) String() string { return proto.CompactTextString(m) }
func (*BankRouting) ProtoMessage()    {}
func (*BankRouting) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{14}
}

func (m *BankRouting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankRouting.Unmarshal(m, b)
}
func (m *BankRouting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankRouting.Marshal(b, m, deterministic)
}
func (m *BankRouting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankRouting.Merge(m, src)
}
func (m *BankRouting) XXX_Size() int {
	return xxx_messageInfo_BankRouting.Size(m)
}
func (m *BankRouting) XXX_DiscardUnknown() {
	xxx_messageInfo_BankRouting.DiscardUnknown(m)
}

var xxx_messageInfo_BankRouting proto.InternalMessageInfo

func (m *BankRouting) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *BankRouting) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AccountRoutings struct {
	Scheme               string   `protobuf:"bytes,1,opt,name=Scheme,json=scheme,proto3" json:"Scheme,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRoutings) Reset()         { *m = AccountRoutings{} }
func (m *AccountRoutings) String() string { return proto.CompactTextString(m) }
func (*AccountRoutings) ProtoMessage()    {}
func (*AccountRoutings) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{15}
}

func (m *AccountRoutings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRoutings.Unmarshal(m, b)
}
func (m *AccountRoutings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRoutings.Marshal(b, m, deterministic)
}
func (m *AccountRoutings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRoutings.Merge(m, src)
}
func (m *AccountRoutings) XXX_Size() int {
	return xxx_messageInfo_AccountRoutings.Size(m)
}
func (m *AccountRoutings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRoutings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRoutings proto.InternalMessageInfo

func (m *AccountRoutings) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

func (m *AccountRoutings) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type User struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=DisplayName,json=display_name,proto3" json:"DisplayName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_01531cfc5c40089a, []int{16}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func init() {
	proto.RegisterEnum("counterparty.TransactionRequestType", TransactionRequestType_name, TransactionRequestType_value)
	proto.RegisterType((*CounterParty)(nil), "counterparty.CounterParty")
	proto.RegisterType((*Bespoke)(nil), "counterparty.Bespoke")
	proto.RegisterType((*Metadata)(nil), "counterparty.Metadata")
	proto.RegisterType((*CreateCounterPartyRequest)(nil), "counterparty.CreateCounterPartyRequest")
	proto.RegisterType((*CreateCounterPartyResponse)(nil), "counterparty.CreateCounterPartyResponse")
	proto.RegisterType((*GetCounterPartyRequest)(nil), "counterparty.GetCounterPartyRequest")
	proto.RegisterType((*GetCounterPartiesRequest)(nil), "counterparty.GetCounterPartiesRequest")
	proto.RegisterType((*GetCounterPartiesResponse)(nil), "counterparty.GetCounterPartiesResponse")
	proto.RegisterType((*GetOtherAccountByIDRequest)(nil), "counterparty.GetOtherAccountByIDRequest")
	proto.RegisterType((*GetOtherAccountByIDResponse)(nil), "counterparty.GetOtherAccountByIDResponse")
	proto.RegisterType((*OtherAccount)(nil), "counterparty.OtherAccount")
	proto.RegisterType((*GetOtherAccountsRequest)(nil), "counterparty.GetOtherAccountsRequest")
	proto.RegisterType((*GetOtherAccountsResponse)(nil), "counterparty.GetOtherAccountsResponse")
	proto.RegisterType((*Holder)(nil), "counterparty.Holder")
	proto.RegisterType((*BankRouting)(nil), "counterparty.BankRouting")
	proto.RegisterType((*AccountRoutings)(nil), "counterparty.AccountRoutings")
	proto.RegisterType((*User)(nil), "counterparty.User")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/counterparty/all.proto", fileDescriptor_01531cfc5c40089a)
}

var fileDescriptor_01531cfc5c40089a = []byte{
	// 2199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0xcb, 0x6f, 0x1b, 0xd7,
	0xd5, 0xe7, 0x0c, 0x25, 0x92, 0xba, 0x92, 0x63, 0xea, 0x2a, 0xb6, 0xa9, 0xb1, 0x1d, 0x5c, 0xc8,
	0xb1, 0x4d, 0x0b, 0x31, 0x29, 0xd1, 0xaf, 0x44, 0xf9, 0x3e, 0x17, 0x94, 0xe4, 0xda, 0x54, 0x64,
	0x9b, 0xa5, 0xe4, 0xb4, 0x4e, 0x01, 0xd3, 0x97, 0x33, 0x97, 0xe4, 0x54, 0xc3, 0xb9, 0x93, 0x7b,
	0x67, 0x24, 0xb3, 0x41, 0x80, 0xa2, 0x40, 0x5b, 0xa3, 0xab, 0x40, 0x45, 0x37, 0x49, 0xfb, 0x1f,
	0x74, 0x53, 0xa0, 0x8b, 0x6e, 0xba, 0xc8, 0xbe, 0x8b, 0x02, 0x7d, 0xa0, 0xbb, 0x6e, 0xfa, 0x00,
	0x02, 0x74, 0xdd, 0x2e, 0x8b, 0x3b, 0x2f, 0xce, 0x70, 0x86, 0x92, 0xdd, 0x34, 0x3b, 0xaf, 0x6c,
	0xce, 0x39, 0xe7, 0x77, 0xce, 0x9c, 0xdf, 0x79, 0x89, 0x04, 0x37, 0x7b, 0xba, 0xdd, 0x77, 0x3a,
	0x15, 0x95, 0x0e, 0xaa, 0xd4, 0x22, 0x66, 0x07, 0x9b, 0x7b, 0xa3, 0xff, 0xec, 0xaf, 0x56, 0x55,
	0xea, 0x98, 0x36, 0x61, 0x16, 0x66, 0xf6, 0xb0, 0x8a, 0x0d, 0xa3, 0x62, 0x31, 0x6a, 0x53, 0x38,
	0x17, 0x7d, 0xae, 0x9c, 0xeb, 0x51, 0xda, 0x33, 0x48, 0x15, 0x5b, 0x7a, 0x15, 0x9b, 0x26, 0xb5,
	0xb1, 0xad, 0x53, 0x93, 0x7b, 0xba, 0xca, 0x5b, 0xee, 0x3f, 0xea, 0xd5, 0x1e, 0x31, 0xaf, 0xf2,
	0x03, 0xdc, 0xeb, 0x11, 0x56, 0xa5, 0x96, 0xab, 0x91, 0xa2, 0x5d, 0x3d, 0x2e, 0x22, 0x7b, 0x68,
	0x11, 0x3e, 0x0a, 0x65, 0xe9, 0xd3, 0x3c, 0x98, 0xdb, 0xf0, 0xa2, 0x69, 0x8a, 0x68, 0xe0, 0x1b,
	0x60, 0xea, 0x01, 0x1e, 0x90, 0x92, 0x84, 0xa4, 0xf2, 0xcc, 0x3a, 0x28, 0x64, 0x4a, 0x99, 0x72,
	0x66, 0x25, 0xd3, 0xcc, 0xb4, 0xa6, 0x4c, 0x3c, 0x20, 0xf0, 0x2d, 0x30, 0xbb, 0x49, 0xb8, 0xca,
	0x74, 0x37, 0x86, 0x92, 0x9c, 0x50, 0x9b, 0xd5, 0x46, 0x62, 0xf8, 0x1e, 0x58, 0x7c, 0x68, 0xf7,
	0x09, 0xab, 0xab, 0xee, 0x2b, 0xb7, 0xa8, 0x63, 0xeb, 0x66, 0x6f, 0x47, 0xed, 0x93, 0x01, 0x29,
	0x65, 0x13, 0xb6, 0xe7, 0xa8, 0x50, 0x6e, 0x63, 0x4f, 0xbb, 0xcd, 0x3c, 0xf5, 0x36, 0x77, 0xf5,
	0xe1, 0x7d, 0xa0, 0xa4, 0x80, 0xd5, 0x35, 0x8d, 0x11, 0xce, 0x4b, 0x53, 0x09, 0xb4, 0xf3, 0xe9,
	0x68, 0xd8, 0x33, 0x80, 0x4f, 0xc0, 0x52, 0x14, 0x6e, 0x87, 0xa8, 0xd4, 0xd4, 0x30, 0x1b, 0xc6,
	0x83, 0x9c, 0x4e, 0xc0, 0x5e, 0x8a, 0xc3, 0xf2, 0xc0, 0x6e, 0x3c, 0xdc, 0xa7, 0xe0, 0xc2, 0x51,
	0xf8, 0x41, 0xdc, 0xb9, 0x84, 0x83, 0xcb, 0xc7, 0x39, 0x08, 0xde, 0xe0, 0x0e, 0x38, 0xed, 0x7a,
	0x58, 0xc7, 0xe6, 0x5e, 0x3c, 0xea, 0x7c, 0x02, 0x74, 0xd1, 0x03, 0x15, 0x75, 0x30, 0x1e, 0xe8,
	0x5d, 0x70, 0x66, 0x1c, 0x26, 0x08, 0xae, 0x90, 0xc0, 0x51, 0x52, 0x70, 0x82, 0x78, 0x1a, 0xa0,
	0xe4, 0x01, 0x31, 0x6c, 0xaa, 0xfd, 0x78, 0x44, 0x33, 0x09, 0xa4, 0xb3, 0x3e, 0x92, 0xab, 0x3c,
	0x1e, 0x53, 0x50, 0x38, 0x31, 0xa8, 0x20, 0x2a, 0x30, 0xa9, 0x70, 0xc6, 0xb0, 0x82, 0xb8, 0x56,
	0xc1, 0x89, 0x06, 0x5f, 0x27, 0x26, 0xe9, 0xea, 0xaa, 0x8e, 0xd9, 0xb0, 0x34, 0x8b, 0xa4, 0x72,
	0x21, 0x06, 0xf0, 0x9a, 0xce, 0xdb, 0x9d, 0x91, 0x06, 0x7c, 0x17, 0xe4, 0xd7, 0x09, 0xb7, 0xe8,
	0x1e, 0x29, 0xcd, 0xa1, 0x6c, 0x79, 0xb6, 0x76, 0xaa, 0x12, 0x6d, 0xda, 0x8a, 0x2f, 0x8c, 0x61,
	0xe4, 0x3b, 0xde, 0x43, 0x78, 0x1b, 0x14, 0xee, 0x13, 0x1b, 0x6b, 0xd8, 0xc6, 0xa5, 0x13, 0x48,
	0x2a, 0xcf, 0xd6, 0x4e, 0xc7, 0xad, 0x03, 0x69, 0xcc, 0xbc, 0x30, 0xf0, 0x9f, 0xae, 0xe5, 0x0a,
	0x99, 0x62, 0xa6, 0x94, 0x59, 0xfa, 0x46, 0x18, 0x04, 0x3c, 0x07, 0xb2, 0xef, 0x91, 0x61, 0x4a,
	0x57, 0x66, 0xf7, 0xc8, 0x10, 0x22, 0x30, 0xfd, 0x3e, 0x36, 0x1c, 0x92, 0xd2, 0x8e, 0xd3, 0xfb,
	0x42, 0x10, 0x42, 0xfe, 0x2a, 0x3b, 0x8a, 0x0d, 0x5e, 0x05, 0xb3, 0x4d, 0xa7, 0x63, 0xe8, 0x6a,
	0xdd, 0xd0, 0x31, 0x4f, 0x01, 0x9f, 0xb3, 0x5c, 0x71, 0x1b, 0x0b, 0x39, 0xbc, 0x0c, 0x0a, 0xf7,
	0x29, 0x23, 0x0d, 0xb3, 0x4b, 0x53, 0x1c, 0xcd, 0x0c, 0x28, 0x23, 0x6d, 0xdd, 0xec, 0x52, 0x11,
	0xec, 0xa3, 0xd6, 0x76, 0x4a, 0x7f, 0x67, 0x1d, 0x66, 0x08, 0x98, 0xc6, 0x00, 0xf7, 0x88, 0x50,
	0x49, 0x36, 0xed, 0x8c, 0x2e, 0x64, 0x6d, 0xa1, 0xb8, 0x06, 0xe6, 0x1f, 0x5a, 0xc4, 0xdc, 0xa0,
	0xcc, 0xa2, 0x0c, 0xdb, 0x84, 0x0b, 0x8b, 0x64, 0x3f, 0x2e, 0x88, 0xf9, 0xd6, 0x56, 0x43, 0x2d,
	0xd7, 0x76, 0x0b, 0xcc, 0x87, 0x76, 0xdb, 0x54, 0x75, 0x87, 0xa4, 0xdb, 0x6a, 0xb3, 0xb5, 0x93,
	0x15, 0x77, 0x08, 0x56, 0x82, 0xc7, 0x31, 0x30, 0x18, 0xe2, 0xb4, 0x0d, 0x5f, 0x0e, 0xef, 0x81,
	0x62, 0xb3, 0x3f, 0xe4, 0xba, 0x8a, 0x8d, 0x10, 0x2a, 0x7f, 0x3c, 0xd4, 0xbc, 0xe5, 0x1b, 0x8d,
	0x90, 0xaa, 0x60, 0xae, 0xc9, 0xf4, 0x7d, 0x6c, 0x13, 0x2f, 0xe3, 0xc9, 0xf6, 0x3a, 0x61, 0x79,
	0x72, 0x2f, 0xe5, 0x21, 0x6d, 0xff, 0xc8, 0x81, 0xc5, 0x0d, 0x46, 0xb0, 0x4d, 0xa2, 0xc3, 0xba,
	0x45, 0x3e, 0x74, 0x08, 0xb7, 0x5f, 0xcd, 0xec, 0x57, 0x33, 0xfb, 0xd5, 0xcc, 0xfe, 0x72, 0x33,
	0x3b, 0xec, 0xb4, 0x5f, 0xc8, 0x40, 0x49, 0xeb, 0x34, 0x6e, 0x51, 0x93, 0x8b, 0x77, 0x8c, 0x9d,
	0x4b, 0x6e, 0xcb, 0xcd, 0xd6, 0x94, 0xb8, 0xa3, 0xa8, 0x46, 0xbc, 0xbb, 0x7d, 0xb5, 0xb6, 0xab,
	0x17, 0xdb, 0x13, 0xf2, 0xcb, 0xef, 0x89, 0xd4, 0xc1, 0x94, 0xfd, 0x9f, 0x0c, 0xa6, 0xa9, 0x17,
	0x1d, 0x4c, 0xff, 0x07, 0x4e, 0xdf, 0x25, 0x76, 0xda, 0x50, 0x52, 0x80, 0xdc, 0xd8, 0x4c, 0x19,
	0x49, 0xb2, 0xae, 0x85, 0xd6, 0x4f, 0x40, 0x29, 0x6e, 0xad, 0x13, 0x1e, 0xd8, 0xaf, 0x81, 0xf9,
	0x07, 0xe4, 0x99, 0xbd, 0x63, 0x8b, 0xc7, 0x66, 0xaf, 0x61, 0x6a, 0xe4, 0x59, 0x0a, 0xdc, 0x82,
	0x49, 0x9e, 0xd9, 0x6d, 0xee, 0x6b, 0xb5, 0x75, 0xa1, 0x16, 0xe2, 0xff, 0x58, 0x02, 0x8b, 0x29,
	0x0e, 0x7c, 0x2e, 0x6f, 0x83, 0x5c, 0x8b, 0x70, 0xc7, 0xb0, 0x4b, 0x92, 0x5b, 0x2e, 0x2f, 0xca,
	0x62, 0x8e, 0xb9, 0x56, 0xf0, 0x22, 0xc8, 0xdf, 0xc3, 0x5c, 0xac, 0x44, 0x97, 0xbd, 0x78, 0x71,
	0x16, 0xfa, 0x98, 0xb7, 0xc5, 0x4a, 0x0c, 0x83, 0xf9, 0x81, 0x04, 0x94, 0xbb, 0xc4, 0x8e, 0xce,
	0x97, 0xf5, 0x61, 0x63, 0x33, 0x78, 0xdf, 0x2b, 0x60, 0xc6, 0x7f, 0x9a, 0x9a, 0x36, 0x10, 0x8c,
	0x16, 0x5d, 0x83, 0xd7, 0xc1, 0x6b, 0x51, 0x94, 0xc6, 0x66, 0xca, 0x48, 0x2f, 0xc6, 0x07, 0x52,
	0x24, 0xe9, 0x0c, 0x9c, 0x4d, 0x0d, 0x63, 0x54, 0xe1, 0x51, 0x59, 0x7a, 0x85, 0xc7, 0xac, 0x63,
	0x65, 0x12, 0x73, 0x1b, 0xfa, 0xfc, 0xad, 0x1c, 0x47, 0x3d, 0xaa, 0x3a, 0xe0, 0xdb, 0x20, 0x77,
	0x8f, 0x1a, 0x1a, 0x61, 0x7e, 0x53, 0xbc, 0x1e, 0xf7, 0xed, 0xc9, 0xe2, 0x8c, 0xf4, 0xdd, 0x67,
	0xf0, 0x1e, 0x98, 0x8d, 0x0c, 0x44, 0xbf, 0x17, 0x16, 0xc7, 0xa6, 0xc0, 0x48, 0x21, 0x7e, 0xeb,
	0x44, 0xc7, 0x23, 0xdc, 0x05, 0x27, 0xe3, 0x2b, 0x4b, 0xf4, 0x84, 0x28, 0x92, 0xf3, 0x71, 0xb4,
	0x31, 0xa5, 0x38, 0x05, 0x63, 0x5b, 0x8c, 0xc7, 0x1a, 0x7e, 0xfa, 0x4b, 0x1c, 0x86, 0xdb, 0xe0,
	0xcc, 0x18, 0x85, 0xfc, 0xe5, 0xcb, 0x28, 0x44, 0xfb, 0xd0, 0xed, 0xc2, 0x31, 0x34, 0xbf, 0x1a,
	0xee, 0x83, 0x13, 0x31, 0x41, 0x7a, 0xab, 0x4c, 0x2c, 0x87, 0xd7, 0x62, 0xe5, 0x30, 0x1a, 0x1b,
	0xdf, 0x0c, 0x28, 0x3e, 0xf6, 0x76, 0xb9, 0x08, 0xf2, 0x0d, 0xee, 0x0d, 0xa5, 0x94, 0x26, 0xd3,
	0xf9, 0xd8, 0x3c, 0x6a, 0xc7, 0x2a, 0x00, 0x2e, 0x81, 0x9c, 0xbf, 0xcb, 0x92, 0xf8, 0x39, 0x7f,
	0x6d, 0xbd, 0x09, 0xf2, 0xc1, 0x92, 0x4a, 0xb6, 0x51, 0xde, 0xdf, 0x47, 0xa1, 0x03, 0x35, 0x51,
	0x18, 0x5f, 0x81, 0x93, 0xc7, 0x60, 0xea, 0x11, 0x27, 0xec, 0xc8, 0x2e, 0xb9, 0x0a, 0x66, 0x37,
	0x75, 0x6e, 0x19, 0x78, 0xe8, 0xe6, 0x2f, 0x89, 0x3a, 0xa7, 0x79, 0xe2, 0xb6, 0xc8, 0x63, 0x00,
	0xbd, 0xdc, 0x03, 0xa7, 0x77, 0x19, 0x36, 0x39, 0x56, 0xc5, 0xe0, 0xf7, 0xab, 0x66, 0x77, 0x68,
	0x89, 0x4c, 0x9f, 0x7f, 0x64, 0xee, 0x99, 0xf4, 0xc0, 0x4c, 0x57, 0x28, 0x66, 0x14, 0xb9, 0x90,
	0x81, 0xaf, 0x83, 0xb9, 0x8d, 0x87, 0x8f, 0x1e, 0xec, 0xde, 0x69, 0x35, 0xeb, 0xad, 0xdd, 0xc7,
	0x45, 0xc9, 0x7d, 0x3a, 0x07, 0xa6, 0x76, 0xee, 0x34, 0xeb, 0x45, 0x59, 0x7c, 0x52, 0xe4, 0x52,
	0xa6, 0xf6, 0xcb, 0x22, 0x58, 0x88, 0x8e, 0xd0, 0x1d, 0xc2, 0xf6, 0x75, 0x95, 0xc0, 0x3f, 0xc8,
	0x00, 0x26, 0x17, 0x2c, 0xbc, 0x3c, 0x36, 0x7c, 0x27, 0x1d, 0xbb, 0x4a, 0xf9, 0x78, 0x45, 0xaf,
	0x76, 0x97, 0xfe, 0x2e, 0x1d, 0xd6, 0x3f, 0x97, 0xc2, 0x85, 0xed, 0xed, 0xdc, 0x33, 0x9e, 0x01,
	0xc2, 0x26, 0xf2, 0x71, 0x90, 0xf7, 0x35, 0xcc, 0x59, 0x4f, 0xc0, 0x11, 0x46, 0x26, 0x39, 0x88,
	0x0b, 0xb7, 0xba, 0x20, 0x5b, 0x5b, 0x59, 0x85, 0x6d, 0x70, 0xc1, 0x07, 0x43, 0xae, 0x2b, 0xa4,
	0xba, 0x36, 0x1a, 0xe2, 0x8e, 0xaa, 0x12, 0xce, 0xbb, 0x8e, 0x61, 0x0c, 0x2b, 0xf0, 0x6d, 0x70,
	0x53, 0xb9, 0x7e, 0xa1, 0xaa, 0x91, 0xae, 0x6e, 0xea, 0xde, 0x57, 0x35, 0xd1, 0x98, 0x27, 0x87,
	0xdc, 0x59, 0x00, 0xf3, 0x20, 0xf7, 0xb0, 0xee, 0xd8, 0xfd, 0x1a, 0xcc, 0x83, 0xe9, 0x03, 0xa6,
	0xdb, 0xe4, 0xfb, 0xbf, 0xff, 0xeb, 0x4f, 0xe4, 0x53, 0x6b, 0xd2, 0xf2, 0x52, 0x71, 0xfc, 0x3b,
	0xa5, 0xe7, 0x72, 0xe6, 0x13, 0xd9, 0xe5, 0x1b, 0x7e, 0x96, 0x05, 0x27, 0xc7, 0x36, 0x31, 0x7c,
	0x33, 0x9e, 0xaa, 0xf4, 0x45, 0xad, 0x1c, 0xb1, 0xf6, 0x96, 0x3e, 0x97, 0x0f, 0xeb, 0x9f, 0xca,
	0x63, 0x29, 0x5c, 0x6c, 0x11, 0x9b, 0xe9, 0x64, 0x3f, 0x25, 0x89, 0x3b, 0x81, 0x88, 0x23, 0x6c,
	0x18, 0x48, 0x0c, 0x2d, 0xd4, 0x65, 0x74, 0x90, 0xd0, 0x44, 0x9c, 0x18, 0x44, 0x15, 0xa9, 0xeb,
	0x0c, 0x91, 0xdd, 0x27, 0x88, 0x3b, 0x96, 0x65, 0xe8, 0x44, 0x43, 0xb1, 0x13, 0xa9, 0xad, 0x6b,
	0x95, 0xad, 0x55, 0x90, 0xbd, 0xbe, 0x72, 0x1d, 0x2e, 0x83, 0x72, 0x8b, 0xd8, 0x0e, 0x33, 0x89,
	0x86, 0x0e, 0xfa, 0xc4, 0x74, 0xcd, 0x18, 0xe1, 0xd4, 0x61, 0x2a, 0x41, 0x3a, 0x47, 0x26, 0xb5,
	0x51, 0x97, 0x3a, 0xa6, 0x56, 0xd9, 0xda, 0x11, 0x7c, 0xad, 0xc0, 0x6d, 0xf0, 0x86, 0xff, 0x96,
	0x88, 0x3c, 0x23, 0xaa, 0x93, 0xa4, 0x6a, 0x19, 0x94, 0x95, 0x4b, 0x47, 0x50, 0x15, 0x49, 0x46,
	0x07, 0x82, 0x62, 0x48, 0x4e, 0x0e, 0x4c, 0x31, 0x82, 0x35, 0x97, 0x9b, 0x33, 0xf0, 0x54, 0xe2,
	0xcb, 0xbe, 0x8f, 0x1a, 0x9b, 0x1f, 0x47, 0xd8, 0xf9, 0x61, 0x16, 0xcc, 0x27, 0x0e, 0x11, 0x78,
	0xe9, 0x28, 0x7e, 0x46, 0xa7, 0x90, 0x72, 0xf9, 0x58, 0x3d, 0xbf, 0xe2, 0x3f, 0x93, 0x0f, 0xeb,
	0xff, 0x1a, 0xaf, 0xf8, 0xf9, 0x6d, 0x9d, 0xdb, 0x2e, 0x1d, 0xc1, 0x18, 0x56, 0x9e, 0x78, 0x89,
	0x14, 0xb5, 0x6e, 0x08, 0xa1, 0x4a, 0x4d, 0x1b, 0xeb, 0xa6, 0x6e, 0xf6, 0x90, 0x63, 0x21, 0x9b,
	0xa2, 0xda, 0x4a, 0xa8, 0x5c, 0x41, 0x4f, 0x53, 0x4e, 0xac, 0xa7, 0x48, 0xc5, 0x26, 0xea, 0x10,
	0xe4, 0x70, 0xa2, 0xa1, 0x2e, 0x15, 0xb4, 0xf6, 0x74, 0xd3, 0xbd, 0x26, 0x2b, 0x5b, 0x4f, 0xbd,
	0xf4, 0x3f, 0x3e, 0x36, 0xfd, 0xb7, 0xc0, 0x0d, 0xe5, 0xda, 0xe4, 0xf4, 0x4f, 0x7c, 0xd3, 0x89,
	0x5c, 0xbc, 0x0e, 0xe1, 0x18, 0x17, 0x3a, 0xe1, 0x11, 0x22, 0xfe, 0x94, 0x05, 0x0b, 0x29, 0xd7,
	0x0f, 0x2c, 0x27, 0x52, 0x3c, 0xe1, 0x4e, 0x53, 0xae, 0xbc, 0x80, 0xa6, 0x4f, 0xc7, 0xdf, 0xe4,
	0xc3, 0xfa, 0xcf, 0x64, 0x90, 0x0f, 0x8e, 0x9e, 0x2b, 0xd1, 0xc6, 0xf1, 0xf3, 0x8b, 0x0e, 0x74,
	0xbb, 0x8f, 0xdc, 0x35, 0x19, 0x3e, 0xd2, 0x35, 0xe5, 0xdd, 0x51, 0x23, 0xc5, 0x65, 0xe5, 0x58,
	0x1b, 0x5d, 0x11, 0xed, 0x33, 0x6e, 0xbc, 0xd5, 0xf1, 0xd2, 0xff, 0xed, 0x63, 0xd3, 0xff, 0x0e,
	0xb8, 0xa5, 0xdc, 0x38, 0x32, 0xfd, 0x93, 0xde, 0xed, 0xbf, 0x68, 0xca, 0x89, 0x9c, 0xbd, 0x03,
	0x6f, 0x09, 0xce, 0x82, 0x82, 0xab, 0x7e, 0x14, 0x1e, 0x30, 0x1f, 0x57, 0xdd, 0x77, 0x1b, 0x49,
	0xe2, 0x67, 0x6f, 0xb4, 0xc3, 0x7e, 0x93, 0x05, 0xc5, 0xf1, 0x2b, 0x06, 0x5e, 0x3c, 0x92, 0xab,
	0xb0, 0xbf, 0x2e, 0x1d, 0xa7, 0xe6, 0xf3, 0xf9, 0x47, 0xf9, 0xb0, 0xfe, 0xf3, 0x08, 0x9f, 0xcb,
	0x23, 0x3e, 0x0d, 0x63, 0x8c, 0x06, 0x97, 0xd6, 0x08, 0xa1, 0xb7, 0xe3, 0x93, 0x31, 0xa6, 0xcc,
	0x13, 0xac, 0x8a, 0x86, 0x8a, 0xd4, 0x88, 0xae, 0x6d, 0xb5, 0x3d, 0x4e, 0xbf, 0x75, 0x2c, 0xa7,
	0x37, 0xc1, 0x75, 0xa5, 0xf6, 0xc2, 0x9c, 0xf2, 0xaf, 0x82, 0xd0, 0x32, 0xbc, 0xf4, 0x62, 0x84,
	0x8e, 0xf8, 0x53, 0xb2, 0xcf, 0xe5, 0xcc, 0xfa, 0x4f, 0x73, 0x87, 0xf5, 0x2f, 0xa6, 0x41, 0xb6,
	0x56, 0x59, 0x81, 0x4d, 0x70, 0x32, 0x32, 0xc6, 0x50, 0xbd, 0xd9, 0x80, 0x37, 0x9b, 0x8c, 0xee,
	0xeb, 0x1a, 0xe1, 0x68, 0xa3, 0xf5, 0x68, 0x13, 0x51, 0x8b, 0x30, 0xef, 0xd7, 0x0f, 0x44, 0xbd,
	0x38, 0xa3, 0x59, 0x0c, 0x83, 0xae, 0xd4, 0xa6, 0x57, 0x2b, 0x2b, 0x95, 0x95, 0x65, 0x49, 0xae,
	0x15, 0xb1, 0xd8, 0x32, 0xde, 0x1f, 0xbd, 0xd5, 0xef, 0x70, 0x6a, 0xae, 0x25, 0x9e, 0xb4, 0x9a,
	0x22, 0x11, 0xd7, 0x60, 0x03, 0xdc, 0x4d, 0x26, 0xc2, 0xe1, 0x84, 0x21, 0x8d, 0x12, 0x2f, 0x0d,
	0x7d, 0xbc, 0x4f, 0x90, 0x45, 0xd8, 0x40, 0xe7, 0x5c, 0x17, 0x21, 0x50, 0xc1, 0x18, 0xe1, 0x3c,
	0x96, 0xb4, 0x4a, 0xeb, 0xe5, 0x53, 0xdb, 0xfa, 0x3a, 0xc8, 0xde, 0x58, 0x59, 0x81, 0x5f, 0x03,
	0xff, 0x1f, 0x37, 0xc1, 0x26, 0x72, 0x4c, 0xf2, 0xcc, 0xf2, 0x76, 0x27, 0x61, 0x8c, 0x32, 0x44,
	0x55, 0xd5, 0x61, 0x44, 0x0b, 0x92, 0xc0, 0x09, 0xdb, 0x27, 0x0c, 0x71, 0x5d, 0x23, 0x95, 0x56,
	0x5b, 0xb8, 0x16, 0x65, 0xf3, 0x7e, 0x9a, 0x6b, 0xaf, 0x90, 0x3a, 0x54, 0x1b, 0x0a, 0xf7, 0x03,
	0x6c, 0x74, 0x29, 0x1b, 0x60, 0x5b, 0x40, 0xd3, 0xc8, 0x7b, 0x0e, 0xb0, 0xad, 0xf6, 0x5d, 0x93,
	0xd0, 0xb3, 0x6f, 0x5b, 0x69, 0x6d, 0x0b, 0x07, 0xab, 0xf0, 0x0e, 0xd8, 0x98, 0xec, 0x20, 0x04,
	0xf2, 0xf7, 0x0c, 0x0f, 0x73, 0x79, 0x99, 0x8b, 0x13, 0x4a, 0x23, 0xa6, 0xad, 0x63, 0x83, 0x57,
	0x3e, 0xf8, 0xa7, 0x04, 0xbe, 0x90, 0xc2, 0x9a, 0xfa, 0x8b, 0x54, 0xc8, 0xc2, 0x1f, 0x49, 0x75,
	0x3f, 0xa7, 0x74, 0xec, 0x84, 0x08, 0x52, 0xc7, 0x45, 0xf0, 0x8c, 0x70, 0x9b, 0xe9, 0x6e, 0x6c,
	0x82, 0x06, 0xc7, 0xee, 0x0b, 0x50, 0xd5, 0xbd, 0xce, 0x84, 0x27, 0x5e, 0x41, 0xbb, 0x7d, 0x12,
	0x15, 0x08, 0xc6, 0x2c, 0x46, 0x5d, 0xec, 0x2e, 0x35, 0x0c, 0x7a, 0xe0, 0xc5, 0x25, 0x7c, 0x53,
	0xa6, 0x7f, 0xd7, 0xd3, 0xd8, 0xa0, 0x1a, 0x41, 0x5d, 0x83, 0x1e, 0x54, 0xca, 0x53, 0xb5, 0x82,
	0x5b, 0xd6, 0x8e, 0xdd, 0x5f, 0x9b, 0x71, 0x7f, 0x4c, 0xa3, 0x7b, 0xc4, 0x5c, 0x5f, 0x03, 0x8a,
	0x57, 0xfb, 0x10, 0xde, 0x65, 0x58, 0x74, 0xb3, 0xf8, 0xe0, 0x57, 0x02, 0x38, 0xe7, 0x5f, 0x71,
	0x70, 0xc1, 0x17, 0xba, 0x9f, 0x7c, 0xe9, 0x3d, 0xa9, 0x99, 0xf9, 0x20, 0xf6, 0x6b, 0xe0, 0xf7,
	0xa4, 0xcc, 0x73, 0x29, 0xf3, 0x89, 0x94, 0xf9, 0xb5, 0x94, 0xf9, 0xb3, 0x94, 0xf9, 0xb7, 0x94,
	0xf9, 0x9d, 0x9c, 0xe9, 0xe4, 0xdc, 0x1f, 0xeb, 0xae, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0xb7,
	0x12, 0xe0, 0x16, 0x71, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CounterPartyServiceClient is the client API for CounterPartyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CounterPartyServiceClient interface {
	// CreateCounterParty creates a new counter party
	CreateCounterParty(ctx context.Context, in *CreateCounterPartyRequest, opts ...grpc.CallOption) (*CreateCounterPartyResponse, error)
	// GetCounterPart retrieves the details of an counter party, selected by its id.
	GetCounterParty(ctx context.Context, in *GetCounterPartyRequest, opts ...grpc.CallOption) (*CounterParty, error)
	// GetCounterParties returns a list containing up to 20 counter parties.
	GetCounterParties(ctx context.Context, in *GetCounterPartiesRequest, opts ...grpc.CallOption) (*GetCounterPartiesResponse, error)
	// GetOtherAccountByID returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID
	GetOtherAccountByID(ctx context.Context, in *GetOtherAccountByIDRequest, opts ...grpc.CallOption) (*GetOtherAccountByIDResponse, error)
	// GetOtherAccounts returns data about all the other Account that has shared at least one transaction with ACCOUNT_ID
	GetOtherAccounts(ctx context.Context, in *GetOtherAccountsRequest, opts ...grpc.CallOption) (*GetOtherAccountsResponse, error)
}

type counterPartyServiceClient struct {
	cc *grpc.ClientConn
}

func NewCounterPartyServiceClient(cc *grpc.ClientConn) CounterPartyServiceClient {
	return &counterPartyServiceClient{cc}
}

func (c *counterPartyServiceClient) CreateCounterParty(ctx context.Context, in *CreateCounterPartyRequest, opts ...grpc.CallOption) (*CreateCounterPartyResponse, error) {
	out := new(CreateCounterPartyResponse)
	err := c.cc.Invoke(ctx, "/counterparty.CounterPartyService/CreateCounterParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterPartyServiceClient) GetCounterParty(ctx context.Context, in *GetCounterPartyRequest, opts ...grpc.CallOption) (*CounterParty, error) {
	out := new(CounterParty)
	err := c.cc.Invoke(ctx, "/counterparty.CounterPartyService/GetCounterParty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterPartyServiceClient) GetCounterParties(ctx context.Context, in *GetCounterPartiesRequest, opts ...grpc.CallOption) (*GetCounterPartiesResponse, error) {
	out := new(GetCounterPartiesResponse)
	err := c.cc.Invoke(ctx, "/counterparty.CounterPartyService/GetCounterParties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterPartyServiceClient) GetOtherAccountByID(ctx context.Context, in *GetOtherAccountByIDRequest, opts ...grpc.CallOption) (*GetOtherAccountByIDResponse, error) {
	out := new(GetOtherAccountByIDResponse)
	err := c.cc.Invoke(ctx, "/counterparty.CounterPartyService/GetOtherAccountByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *counterPartyServiceClient) GetOtherAccounts(ctx context.Context, in *GetOtherAccountsRequest, opts ...grpc.CallOption) (*GetOtherAccountsResponse, error) {
	out := new(GetOtherAccountsResponse)
	err := c.cc.Invoke(ctx, "/counterparty.CounterPartyService/GetOtherAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CounterPartyServiceServer is the server API for CounterPartyService service.
type CounterPartyServiceServer interface {
	// CreateCounterParty creates a new counter party
	CreateCounterParty(context.Context, *CreateCounterPartyRequest) (*CreateCounterPartyResponse, error)
	// GetCounterPart retrieves the details of an counter party, selected by its id.
	GetCounterParty(context.Context, *GetCounterPartyRequest) (*CounterParty, error)
	// GetCounterParties returns a list containing up to 20 counter parties.
	GetCounterParties(context.Context, *GetCounterPartiesRequest) (*GetCounterPartiesResponse, error)
	// GetOtherAccountByID returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID
	GetOtherAccountByID(context.Context, *GetOtherAccountByIDRequest) (*GetOtherAccountByIDResponse, error)
	// GetOtherAccounts returns data about all the other Account that has shared at least one transaction with ACCOUNT_ID
	GetOtherAccounts(context.Context, *GetOtherAccountsRequest) (*GetOtherAccountsResponse, error)
}

// UnimplementedCounterPartyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCounterPartyServiceServer struct {
}

func (*UnimplementedCounterPartyServiceServer) CreateCounterParty(ctx context.Context, req *CreateCounterPartyRequest) (*CreateCounterPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCounterParty not implemented")
}
func (*UnimplementedCounterPartyServiceServer) GetCounterParty(ctx context.Context, req *GetCounterPartyRequest) (*CounterParty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCounterParty not implemented")
}
func (*UnimplementedCounterPartyServiceServer) GetCounterParties(ctx context.Context, req *GetCounterPartiesRequest) (*GetCounterPartiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCounterParties not implemented")
}
func (*UnimplementedCounterPartyServiceServer) GetOtherAccountByID(ctx context.Context, req *GetOtherAccountByIDRequest) (*GetOtherAccountByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOtherAccountByID not implemented")
}
func (*UnimplementedCounterPartyServiceServer) GetOtherAccounts(ctx context.Context, req *GetOtherAccountsRequest) (*GetOtherAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOtherAccounts not implemented")
}

func RegisterCounterPartyServiceServer(s *grpc.Server, srv CounterPartyServiceServer) {
	s.RegisterService(&_CounterPartyService_serviceDesc, srv)
}

func _CounterPartyService_CreateCounterParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCounterPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterPartyServiceServer).CreateCounterParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterparty.CounterPartyService/CreateCounterParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterPartyServiceServer).CreateCounterParty(ctx, req.(*CreateCounterPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterPartyService_GetCounterParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCounterPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterPartyServiceServer).GetCounterParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterparty.CounterPartyService/GetCounterParty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterPartyServiceServer).GetCounterParty(ctx, req.(*GetCounterPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterPartyService_GetCounterParties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCounterPartiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterPartyServiceServer).GetCounterParties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterparty.CounterPartyService/GetCounterParties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterPartyServiceServer).GetCounterParties(ctx, req.(*GetCounterPartiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterPartyService_GetOtherAccountByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOtherAccountByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterPartyServiceServer).GetOtherAccountByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterparty.CounterPartyService/GetOtherAccountByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterPartyServiceServer).GetOtherAccountByID(ctx, req.(*GetOtherAccountByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CounterPartyService_GetOtherAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOtherAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CounterPartyServiceServer).GetOtherAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/counterparty.CounterPartyService/GetOtherAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CounterPartyServiceServer).GetOtherAccounts(ctx, req.(*GetOtherAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CounterPartyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "counterparty.CounterPartyService",
	HandlerType: (*CounterPartyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCounterParty",
			Handler:    _CounterPartyService_CreateCounterParty_Handler,
		},
		{
			MethodName: "GetCounterParty",
			Handler:    _CounterPartyService_GetCounterParty_Handler,
		},
		{
			MethodName: "GetCounterParties",
			Handler:    _CounterPartyService_GetCounterParties_Handler,
		},
		{
			MethodName: "GetOtherAccountByID",
			Handler:    _CounterPartyService_GetOtherAccountByID_Handler,
		},
		{
			MethodName: "GetOtherAccounts",
			Handler:    _CounterPartyService_GetOtherAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/counterparty/all.proto",
}
