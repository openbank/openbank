// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command-line-arguments/all.proto

package accounts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import types "github.com/openbank/gunk/gunk/v1/types"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// EntityType describes the type of the entity.
type EntityType int32

const (
	EntityType__ EntityType = 0
	// EntityType_Pers is an individual customer.
	EntityType_Pers EntityType = 1
	// EntityType_Org is an organisation customer.
	EntityType_Org EntityType = 2
)

var EntityType_name = map[int32]string{
	0: "_",
	1: "Pers",
	2: "Org",
}
var EntityType_value = map[string]int32{
	"_":    0,
	"Pers": 1,
	"Org":  2,
}

func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{0}
}

// Account holds all details about a bank account.
type Account struct {
	// AccountID is the unique identifier of an account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TODO: add comment.
	Branch string `protobuf:"bytes,2,opt,name=Branch,json=branch,proto3" json:"Branch,omitempty"`
	// TODO: add comment.
	BranchName string `protobuf:"bytes,3,opt,name=BranchName,json=branch_name,proto3" json:"BranchName,omitempty"`
	// Status is the status of the account.
	Status string `protobuf:"bytes,4,opt,name=Status,json=status,proto3" json:"Status,omitempty"`
	// TODO: add comment.
	AccruedInterestAtMaturityDate string `protobuf:"bytes,5,opt,name=AccruedInterestAtMaturityDate,json=accrued_interest_at_maturity_date,proto3" json:"AccruedInterestAtMaturityDate,omitempty"`
	// TODO: add comment.
	AmountDue *types.Amount `protobuf:"bytes,6,opt,name=AmountDue,json=amount_due,proto3" json:"AmountDue,omitempty"`
	// TODO: add comment.
	AvailableBalance *types.Amount `protobuf:"bytes,7,opt,name=AvailableBalance,json=available_balance,proto3" json:"AvailableBalance,omitempty"`
	// TODO: add comment.
	AvailableCreditLimit string `protobuf:"bytes,8,opt,name=AvailableCreditLimit,json=available_credit_limit,proto3" json:"AvailableCreditLimit,omitempty"`
	// TODO: add comment.
	CheckingInterestRate string `protobuf:"bytes,9,opt,name=CheckingInterestRate,json=checking_interest_rate,proto3" json:"CheckingInterestRate,omitempty"`
	// ContractDate is the date of the contract initialization.
	ContractDate string `protobuf:"bytes,10,opt,name=ContractDate,json=contract_date,proto3" json:"ContractDate,omitempty"`
	// CreditLimit is the allowed credit limit.
	CreditLimit string `protobuf:"bytes,11,opt,name=CreditLimit,json=credit_limit,proto3" json:"CreditLimit,omitempty"`
	// TODO: add comment.
	CurrentAccruedInterest string `protobuf:"bytes,12,opt,name=CurrentAccruedInterest,json=current_accrued_interest,proto3" json:"CurrentAccruedInterest,omitempty"`
	// TODO: add comment.
	CurrentBalance *types.Amount `protobuf:"bytes,13,opt,name=CurrentBalance,json=current_balance,proto3" json:"CurrentBalance,omitempty"`
	// CurrentTerm is the account validity period.
	CurrentTerm string `protobuf:"bytes,14,opt,name=CurrentTerm,json=current_term,proto3" json:"CurrentTerm,omitempty"`
	// DueDate is the loan maturity date.
	DueDate string `protobuf:"bytes,15,opt,name=DueDate,json=due_date,proto3" json:"DueDate,omitempty"`
	// TODO: add comment.
	InterestRate string `protobuf:"bytes,16,opt,name=InterestRate,json=interest_rate,proto3" json:"InterestRate,omitempty"`
	// MajorType is the account type.
	MajorType types.MajorType `protobuf:"varint,17,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// MajorCategory is the account category.
	MajorCategory types.MajorCategory `protobuf:"varint,18,opt,name=MajorCategory,json=major_category,proto3,enum=types.MajorCategory" json:"MajorCategory,omitempty"`
	// MaturityDate is the maturity date, format is ISO 8601
	MaturityDate string `protobuf:"bytes,19,opt,name=MaturityDate,json=maturity_date,proto3" json:"MaturityDate,omitempty"`
	// TODO: add comment.
	NextPaymentDueDate string `protobuf:"bytes,20,opt,name=NextPaymentDueDate,json=next_payment_due_date,proto3" json:"NextPaymentDueDate,omitempty"`
	// OwnerName is the name of the account's owner.
	OwnerName string `protobuf:"bytes,21,opt,name=OwnerName,json=owner_name,proto3" json:"OwnerName,omitempty"`
	// TODO: add comment.
	StartDate            string   `protobuf:"bytes,22,opt,name=StartDate,json=start_date,proto3" json:"StartDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{0}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (dst *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(dst, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Account) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Account) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Account) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Account) GetAccruedInterestAtMaturityDate() string {
	if m != nil {
		return m.AccruedInterestAtMaturityDate
	}
	return ""
}

func (m *Account) GetAmountDue() *types.Amount {
	if m != nil {
		return m.AmountDue
	}
	return nil
}

func (m *Account) GetAvailableBalance() *types.Amount {
	if m != nil {
		return m.AvailableBalance
	}
	return nil
}

func (m *Account) GetAvailableCreditLimit() string {
	if m != nil {
		return m.AvailableCreditLimit
	}
	return ""
}

func (m *Account) GetCheckingInterestRate() string {
	if m != nil {
		return m.CheckingInterestRate
	}
	return ""
}

func (m *Account) GetContractDate() string {
	if m != nil {
		return m.ContractDate
	}
	return ""
}

func (m *Account) GetCreditLimit() string {
	if m != nil {
		return m.CreditLimit
	}
	return ""
}

func (m *Account) GetCurrentAccruedInterest() string {
	if m != nil {
		return m.CurrentAccruedInterest
	}
	return ""
}

func (m *Account) GetCurrentBalance() *types.Amount {
	if m != nil {
		return m.CurrentBalance
	}
	return nil
}

func (m *Account) GetCurrentTerm() string {
	if m != nil {
		return m.CurrentTerm
	}
	return ""
}

func (m *Account) GetDueDate() string {
	if m != nil {
		return m.DueDate
	}
	return ""
}

func (m *Account) GetInterestRate() string {
	if m != nil {
		return m.InterestRate
	}
	return ""
}

func (m *Account) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType__
}

func (m *Account) GetMajorCategory() types.MajorCategory {
	if m != nil {
		return m.MajorCategory
	}
	return types.MajorCategory__
}

func (m *Account) GetMaturityDate() string {
	if m != nil {
		return m.MaturityDate
	}
	return ""
}

func (m *Account) GetNextPaymentDueDate() string {
	if m != nil {
		return m.NextPaymentDueDate
	}
	return ""
}

func (m *Account) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *Account) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

// GetAccountRequest is the request envelope to get an account by its identifier.
type GetAccountRequest struct {
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{1}
}
func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(dst, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// GetAccountsRequest is the request envelope to get a list of filtered accounts.
type GetAccountsRequest struct {
	// NextStartingIndex is a cursor for pagination. It's an AccountID that defines
	// the current place in the total list of Accounts.
	NextStartingIndex    string   `protobuf:"bytes,1,opt,name=NextStartingIndex,json=next_starting_index,proto3" json:"NextStartingIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountsRequest) Reset()         { *m = GetAccountsRequest{} }
func (m *GetAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountsRequest) ProtoMessage()    {}
func (*GetAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{2}
}
func (m *GetAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountsRequest.Unmarshal(m, b)
}
func (m *GetAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountsRequest.Marshal(b, m, deterministic)
}
func (dst *GetAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountsRequest.Merge(dst, src)
}
func (m *GetAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountsRequest.Size(m)
}
func (m *GetAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountsRequest proto.InternalMessageInfo

func (m *GetAccountsRequest) GetNextStartingIndex() string {
	if m != nil {
		return m.NextStartingIndex
	}
	return ""
}

// GetAccountsResponse wraps the list of accounts.
type GetAccountsResponse struct {
	// Result is a list containing up to 20 Accounts.
	Result []*Account `protobuf:"bytes,1,rep,name=Result,json=result,proto3" json:"Result,omitempty"`
	// HasMore indicates if there are more accounts available.
	HasMore              bool     `protobuf:"varint,2,opt,name=HasMore,json=has_more,proto3" json:"HasMore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountsResponse) Reset()         { *m = GetAccountsResponse{} }
func (m *GetAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountsResponse) ProtoMessage()    {}
func (*GetAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{3}
}
func (m *GetAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountsResponse.Unmarshal(m, b)
}
func (m *GetAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountsResponse.Merge(dst, src)
}
func (m *GetAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccountsResponse.Size(m)
}
func (m *GetAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountsResponse proto.InternalMessageInfo

func (m *GetAccountsResponse) GetResult() []*Account {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GetAccountsResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

// TODO: add comment.
type AccountRole struct {
	// TODO: add comment.
	EntityNumber string `protobuf:"bytes,1,opt,name=EntityNumber,json=entity_number,proto3" json:"EntityNumber,omitempty"`
	// TODO: add comment.
	EntityType EntityType `protobuf:"varint,2,opt,name=EntityType,json=entity_type,proto3,enum=accounts.EntityType" json:"EntityType,omitempty"`
	// TODO: add comment.
	Role                 string   `protobuf:"bytes,3,opt,name=Role,json=role,proto3" json:"Role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountRole) Reset()         { *m = AccountRole{} }
func (m *AccountRole) String() string { return proto.CompactTextString(m) }
func (*AccountRole) ProtoMessage()    {}
func (*AccountRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{4}
}
func (m *AccountRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRole.Unmarshal(m, b)
}
func (m *AccountRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRole.Marshal(b, m, deterministic)
}
func (dst *AccountRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRole.Merge(dst, src)
}
func (m *AccountRole) XXX_Size() int {
	return xxx_messageInfo_AccountRole.Size(m)
}
func (m *AccountRole) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRole.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRole proto.InternalMessageInfo

func (m *AccountRole) GetEntityNumber() string {
	if m != nil {
		return m.EntityNumber
	}
	return ""
}

func (m *AccountRole) GetEntityType() EntityType {
	if m != nil {
		return m.EntityType
	}
	return EntityType__
}

func (m *AccountRole) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

// TODO: add comment.
type DebitTransaction struct {
	// TODO: add comment.
	Amount string `protobuf:"bytes,1,opt,name=Amount,json=amount,proto3" json:"Amount,omitempty"`
	// TODO: add comment.
	DebitAccount string `protobuf:"bytes,2,opt,name=DebitAccount,json=debit_account,proto3" json:"DebitAccount,omitempty"`
	// TODO: add comment.
	ExchangeRate string `protobuf:"bytes,3,opt,name=ExchangeRate,json=exchange_rate,proto3" json:"ExchangeRate,omitempty"`
	// TODO: add comment.
	IsFx                 bool     `protobuf:"varint,4,opt,name=IsFx,json=is_fx,proto3" json:"IsFx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebitTransaction) Reset()         { *m = DebitTransaction{} }
func (m *DebitTransaction) String() string { return proto.CompactTextString(m) }
func (*DebitTransaction) ProtoMessage()    {}
func (*DebitTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{5}
}
func (m *DebitTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebitTransaction.Unmarshal(m, b)
}
func (m *DebitTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebitTransaction.Marshal(b, m, deterministic)
}
func (dst *DebitTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebitTransaction.Merge(dst, src)
}
func (m *DebitTransaction) XXX_Size() int {
	return xxx_messageInfo_DebitTransaction.Size(m)
}
func (m *DebitTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_DebitTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_DebitTransaction proto.InternalMessageInfo

func (m *DebitTransaction) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *DebitTransaction) GetDebitAccount() string {
	if m != nil {
		return m.DebitAccount
	}
	return ""
}

func (m *DebitTransaction) GetExchangeRate() string {
	if m != nil {
		return m.ExchangeRate
	}
	return ""
}

func (m *DebitTransaction) GetIsFx() bool {
	if m != nil {
		return m.IsFx
	}
	return false
}

// CreateAccountRequest wraps all required fields for an account creation.
type CreateAccountRequest struct {
	// AccountID is the identifier of the account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TODO: add comment.
	Description string `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	// TODO: add comment.
	AccountRoles []*AccountRole `protobuf:"bytes,3,rep,name=AccountRoles,json=account_roles,proto3" json:"AccountRoles,omitempty"`
	// TODO: add comment.
	Branch string `protobuf:"bytes,4,opt,name=Branch,json=branch,proto3" json:"Branch,omitempty"`
	// TODO: add comment.
	Customer string `protobuf:"bytes,5,opt,name=Customer,json=customer,proto3" json:"Customer,omitempty"`
	// TODO: add comment.
	DebitTransaction *DebitTransaction `protobuf:"bytes,6,opt,name=DebitTransaction,json=debit_transaction,proto3" json:"DebitTransaction,omitempty"`
	// TODO: add comment.
	InterestRate string `protobuf:"bytes,7,opt,name=InterestRate,json=interest_rate,proto3" json:"InterestRate,omitempty"`
	// MajorType is the type of the account.
	MajorType types.MajorType `protobuf:"varint,8,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// TODO: add comment.
	MaturityDate string `protobuf:"bytes,9,opt,name=MaturityDate,json=maturity_date,proto3" json:"MaturityDate,omitempty"`
	// TODO: add comment.
	Minor                string   `protobuf:"bytes,10,opt,name=Minor,json=minor,proto3" json:"Minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{6}
}
func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(dst, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateAccountRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateAccountRequest) GetAccountRoles() []*AccountRole {
	if m != nil {
		return m.AccountRoles
	}
	return nil
}

func (m *CreateAccountRequest) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *CreateAccountRequest) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *CreateAccountRequest) GetDebitTransaction() *DebitTransaction {
	if m != nil {
		return m.DebitTransaction
	}
	return nil
}

func (m *CreateAccountRequest) GetInterestRate() string {
	if m != nil {
		return m.InterestRate
	}
	return ""
}

func (m *CreateAccountRequest) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType__
}

func (m *CreateAccountRequest) GetMaturityDate() string {
	if m != nil {
		return m.MaturityDate
	}
	return ""
}

func (m *CreateAccountRequest) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

// CreateAccountResponse is the response envelope for an account creation.
type CreateAccountResponse struct {
	// AccountID is the unique identifier of the newly created account.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// CreditTransactionNumber is the transaction number of the credited account.
	CreditTransactionNumber string `protobuf:"bytes,2,opt,name=CreditTransactionNumber,json=credit_transaction_number,proto3" json:"CreditTransactionNumber,omitempty"`
	// DebitTransactionNumber is the transaction number of the debited account.
	DebitTransactionNumber string `protobuf:"bytes,3,opt,name=DebitTransactionNumber,json=debit_transaction_number,proto3" json:"DebitTransactionNumber,omitempty"`
	// MajorType is the type of the account.
	MajorType types.MajorType `protobuf:"varint,4,opt,name=MajorType,json=major_type,proto3,enum=types.MajorType" json:"MajorType,omitempty"`
	// TODO: add comment.
	Minor                string   `protobuf:"bytes,5,opt,name=Minor,json=minor,proto3" json:"Minor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccountResponse) Reset()         { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()    {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{7}
}
func (m *CreateAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountResponse.Unmarshal(m, b)
}
func (m *CreateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountResponse.Marshal(b, m, deterministic)
}
func (dst *CreateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountResponse.Merge(dst, src)
}
func (m *CreateAccountResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccountResponse.Size(m)
}
func (m *CreateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountResponse proto.InternalMessageInfo

func (m *CreateAccountResponse) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *CreateAccountResponse) GetCreditTransactionNumber() string {
	if m != nil {
		return m.CreditTransactionNumber
	}
	return ""
}

func (m *CreateAccountResponse) GetDebitTransactionNumber() string {
	if m != nil {
		return m.DebitTransactionNumber
	}
	return ""
}

func (m *CreateAccountResponse) GetMajorType() types.MajorType {
	if m != nil {
		return m.MajorType
	}
	return types.MajorType__
}

func (m *CreateAccountResponse) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

// UpdateAccountRequest wraps all fields available for update.
type UpdateAccountRequest struct {
	// AccountID is the unique identifier of the account to update.
	AccountID string `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	// TODO: add comment.
	Description          string   `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountRequest) Reset()         { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()    {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{8}
}
func (m *UpdateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountRequest.Unmarshal(m, b)
}
func (m *UpdateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountRequest.Merge(dst, src)
}
func (m *UpdateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountRequest.Size(m)
}
func (m *UpdateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountRequest proto.InternalMessageInfo

func (m *UpdateAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *UpdateAccountRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// DeleteAccountRequest is the request envelope to delete an account.
type DeleteAccountRequest struct {
	// AccountID is the unique identifier of the account to delete.
	AccountID            string   `protobuf:"bytes,1,opt,name=AccountID,json=account_id,proto3" json:"AccountID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAccountRequest) Reset()         { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()    {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_all_3ea06231d383b1ee, []int{9}
}
func (m *DeleteAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAccountRequest.Unmarshal(m, b)
}
func (m *DeleteAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAccountRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAccountRequest.Merge(dst, src)
}
func (m *DeleteAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAccountRequest.Size(m)
}
func (m *DeleteAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAccountRequest proto.InternalMessageInfo

func (m *DeleteAccountRequest) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "accounts.Account")
	proto.RegisterType((*GetAccountRequest)(nil), "accounts.GetAccountRequest")
	proto.RegisterType((*GetAccountsRequest)(nil), "accounts.GetAccountsRequest")
	proto.RegisterType((*GetAccountsResponse)(nil), "accounts.GetAccountsResponse")
	proto.RegisterType((*AccountRole)(nil), "accounts.AccountRole")
	proto.RegisterType((*DebitTransaction)(nil), "accounts.DebitTransaction")
	proto.RegisterType((*CreateAccountRequest)(nil), "accounts.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "accounts.CreateAccountResponse")
	proto.RegisterType((*UpdateAccountRequest)(nil), "accounts.UpdateAccountRequest")
	proto.RegisterType((*DeleteAccountRequest)(nil), "accounts.DeleteAccountRequest")
	proto.RegisterEnum("accounts.EntityType", EntityType_name, EntityType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	// GetAccount retrieves the detail of an account, selected by its id.
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error)
	// GetAccounts returns a list containing up to 20 accounts.
	GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error)
	// CreateAccount creates a new account and return its id.
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	// UpdateAccount updates an account.
	UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteAccount deletes an account.
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccounts(ctx context.Context, in *GetAccountsRequest, opts ...grpc.CallOption) (*GetAccountsResponse, error) {
	out := new(GetAccountsResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/accounts.AccountService/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	// GetAccount retrieves the detail of an account, selected by its id.
	GetAccount(context.Context, *GetAccountRequest) (*Account, error)
	// GetAccounts returns a list containing up to 20 accounts.
	GetAccounts(context.Context, *GetAccountsRequest) (*GetAccountsResponse, error)
	// CreateAccount creates a new account and return its id.
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	// UpdateAccount updates an account.
	UpdateAccount(context.Context, *UpdateAccountRequest) (*empty.Empty, error)
	// DeleteAccount deletes an account.
	DeleteAccount(context.Context, *DeleteAccountRequest) (*empty.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccounts(ctx, req.(*GetAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateAccount(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/accounts.AccountService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "accounts.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _AccountService_GetAccount_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _AccountService_GetAccounts_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _AccountService_UpdateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _AccountService_DeleteAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "command-line-arguments/all.proto",
}

func init() {
	proto.RegisterFile("command-line-arguments/all.proto", fileDescriptor_all_3ea06231d383b1ee)
}

var fileDescriptor_all_3ea06231d383b1ee = []byte{
	// 1601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x4d, 0x6c, 0xe3, 0x4e,
	0x15, 0xb7, 0xd3, 0xb4, 0x4d, 0x26, 0x4d, 0xff, 0xa9, 0xfb, 0x81, 0xc9, 0x7e, 0x99, 0x22, 0x50,
	0xb7, 0x6c, 0x93, 0xd2, 0x15, 0x08, 0x15, 0x90, 0x48, 0x9b, 0xed, 0x6e, 0xa5, 0x6d, 0xb7, 0x6a,
	0x8b, 0x04, 0x5c, 0xac, 0x89, 0xfd, 0x9a, 0x98, 0xb5, 0xc7, 0x61, 0x66, 0xdc, 0x36, 0xac, 0x90,
	0x56, 0x9c, 0x96, 0xdb, 0xaa, 0x88, 0x2b, 0x12, 0xc7, 0xbd, 0x71, 0x83, 0x2b, 0x07, 0x2e, 0x9c,
	0x90, 0xb8, 0xec, 0x15, 0x89, 0x3b, 0x57, 0x8e, 0x68, 0xc6, 0xe3, 0xc4, 0x8e, 0x5d, 0x95, 0x82,
	0xc4, 0x65, 0x77, 0x33, 0xef, 0xf7, 0x7e, 0x7e, 0xef, 0x37, 0xef, 0xc3, 0x5e, 0x64, 0x39, 0x61,
	0x10, 0x60, 0xe2, 0x6e, 0xf9, 0x1e, 0x81, 0x2d, 0x4c, 0xfb, 0x51, 0x00, 0x84, 0xb3, 0x36, 0xf6,
	0xfd, 0xd6, 0x90, 0x86, 0x3c, 0x34, 0x2a, 0xd8, 0x71, 0xc2, 0x88, 0x70, 0xd6, 0x7c, 0xd8, 0x0f,
	0xc3, 0xbe, 0x0f, 0x6d, 0x3c, 0xf4, 0xda, 0x98, 0x90, 0x90, 0x63, 0xee, 0x85, 0x84, 0xc5, 0xb8,
	0xe6, 0x33, 0xf9, 0x97, 0xb3, 0xd5, 0x07, 0xb2, 0xc5, 0xae, 0x70, 0xbf, 0x0f, 0xb4, 0x1d, 0x0e,
	0x25, 0xa2, 0x00, 0xfd, 0x40, 0x71, 0xc9, 0x5f, 0xbd, 0xe8, 0xa2, 0x0d, 0xc1, 0x90, 0x8f, 0x94,
	0x71, 0xbb, 0xef, 0xf1, 0x41, 0xd4, 0x6b, 0x39, 0x61, 0xd0, 0x0e, 0x87, 0x40, 0x7a, 0x98, 0xbc,
	0x6d, 0xf7, 0xa3, 0xe4, 0x8f, 0xcb, 0x6f, 0xb6, 0xf9, 0x68, 0x08, 0xa9, 0x20, 0xd7, 0xff, 0x52,
	0x45, 0xf3, 0x9d, 0x38, 0x4e, 0xe3, 0x29, 0xaa, 0xaa, 0x7f, 0x1e, 0x76, 0x4d, 0xdd, 0xd2, 0x37,
	0xaa, 0x7b, 0xa8, 0xa2, 0x99, 0xda, 0x86, 0xb6, 0xad, 0x9d, 0x68, 0xa7, 0x48, 0xe5, 0x63, 0x7b,
	0xae, 0xb1, 0x8e, 0xe6, 0xf6, 0x28, 0x26, 0xce, 0xc0, 0x2c, 0xe5, 0x70, 0x73, 0x3d, 0x69, 0x31,
	0xbe, 0x81, 0x50, 0x8c, 0x39, 0xc6, 0x01, 0x98, 0x33, 0x39, 0x5c, 0x2d, 0xc6, 0xd9, 0x04, 0x07,
	0x20, 0x08, 0xcf, 0x38, 0xe6, 0x11, 0x33, 0xcb, 0x79, 0x42, 0x26, 0x2d, 0xc6, 0x39, 0x7a, 0xd4,
	0x71, 0x1c, 0x1a, 0x81, 0x7b, 0x48, 0x38, 0x50, 0x60, 0xbc, 0xc3, 0x8f, 0x30, 0x8f, 0xa8, 0xc7,
	0x47, 0x5d, 0xcc, 0xc1, 0x9c, 0xcd, 0xb9, 0x7e, 0x05, 0xc7, 0x0e, 0xb6, 0xa7, 0x3c, 0x6c, 0xcc,
	0xed, 0x40, 0xf9, 0xd8, 0x2e, 0xe6, 0x60, 0x7c, 0x07, 0x55, 0x3b, 0x81, 0xc8, 0xab, 0x1b, 0x81,
	0x39, 0x67, 0xe9, 0x1b, 0xb5, 0x9d, 0x7a, 0x4b, 0xca, 0xd4, 0x8a, 0xcf, 0xa7, 0x44, 0x90, 0x67,
	0xb6, 0x1b, 0x81, 0x71, 0x80, 0x1a, 0x9d, 0x4b, 0xec, 0xf9, 0xb8, 0xe7, 0xc3, 0x1e, 0xf6, 0x31,
	0x71, 0xc0, 0x9c, 0xbf, 0x8b, 0x60, 0x09, 0x27, 0x2e, 0x76, 0x2f, 0xf6, 0x31, 0x7e, 0x80, 0x56,
	0xc6, 0x3c, 0xfb, 0x14, 0x5c, 0x8f, 0xbf, 0xf6, 0x02, 0x8f, 0x9b, 0x95, 0x5c, 0x3a, 0x6b, 0x13,
	0x67, 0x47, 0x02, 0x6d, 0x5f, 0x20, 0x05, 0xc3, 0xfe, 0x00, 0x9c, 0xb7, 0x1e, 0xe9, 0x27, 0xd2,
	0x9c, 0x0a, 0x41, 0xaa, 0x79, 0x06, 0x47, 0xe1, 0x26, 0x8a, 0x50, 0xa1, 0x42, 0x1b, 0x2d, 0xec,
	0x87, 0x84, 0x53, 0xec, 0x70, 0x29, 0x25, 0xca, 0x79, 0xd6, 0x1d, 0x65, 0x8f, 0x65, 0xdb, 0x42,
	0xb5, 0x74, 0xac, 0xb5, 0x1c, 0x7e, 0x21, 0x13, 0x61, 0x17, 0xad, 0xed, 0x47, 0x94, 0x02, 0xe1,
	0x53, 0x57, 0x68, 0x2e, 0xe4, 0x3c, 0x4d, 0x27, 0x46, 0xda, 0xd3, 0x97, 0x67, 0xec, 0xa1, 0x45,
	0xc5, 0x92, 0xe8, 0x5d, 0xbf, 0x4b, 0xef, 0x2f, 0x12, 0xb2, 0x44, 0x6d, 0x11, 0x78, 0x7c, 0x74,
	0x0e, 0x34, 0x30, 0x17, 0x0b, 0x02, 0x57, 0x1e, 0x1c, 0x68, 0x60, 0x7c, 0x0d, 0xcd, 0x77, 0x23,
	0x90, 0x9a, 0x7c, 0x91, 0x83, 0x56, 0xdc, 0x08, 0x62, 0x39, 0xda, 0x68, 0x21, 0xa3, 0x7c, 0x23,
	0xaf, 0x5f, 0x56, 0xf0, 0xef, 0xa2, 0xea, 0x11, 0xfe, 0x69, 0x48, 0xcf, 0x47, 0x43, 0x30, 0x97,
	0x2c, 0x7d, 0x63, 0x71, 0xa7, 0xa1, 0xb2, 0x18, 0x9f, 0x67, 0x2b, 0x2f, 0x10, 0xc7, 0xb6, 0x80,
	0x18, 0x2f, 0x51, 0x5d, 0x82, 0xf6, 0x31, 0x87, 0x7e, 0x48, 0x47, 0xa6, 0x21, 0x09, 0x56, 0xd2,
	0x04, 0x89, 0x2d, 0x43, 0xb2, 0x18, 0x93, 0x38, 0xca, 0x26, 0xc2, 0xce, 0x74, 0xd0, 0x72, 0x3e,
	0xec, 0x6c, 0xb7, 0x7c, 0x1f, 0x19, 0xc7, 0x70, 0xcd, 0x4f, 0xf0, 0x48, 0x8c, 0xbb, 0x44, 0x99,
	0x95, 0x9c, 0xdb, 0x2a, 0x81, 0x6b, 0x6e, 0x0f, 0x63, 0x98, 0x3d, 0x96, 0xe9, 0x29, 0xaa, 0xbe,
	0xb9, 0x22, 0x40, 0xe5, 0x48, 0x58, 0xcd, 0x8f, 0x98, 0x50, 0x18, 0xe3, 0x89, 0xf0, 0x14, 0x55,
	0xcf, 0x38, 0xa6, 0x71, 0x39, 0xae, 0xe5, 0xa1, 0x4c, 0x18, 0x25, 0xeb, 0xee, 0x5c, 0x45, 0x6b,
	0x68, 0xa6, 0xb6, 0x7e, 0x80, 0x96, 0x5e, 0x02, 0x57, 0x33, 0xec, 0x14, 0x7e, 0x16, 0x89, 0x9a,
	0xf9, 0xcf, 0xa7, 0xda, 0x98, 0xe7, 0x47, 0xc8, 0x98, 0xf0, 0xb0, 0x84, 0x68, 0x17, 0x2d, 0x89,
	0xd4, 0x65, 0x50, 0xb2, 0xd1, 0x5c, 0xb8, 0x2e, 0x20, 0x5c, 0x96, 0x99, 0x33, 0x85, 0xb2, 0x3d,
	0x01, 0x1b, 0x33, 0xbf, 0x43, 0xcb, 0x19, 0x66, 0x36, 0x0c, 0x09, 0x03, 0xe3, 0x5b, 0x68, 0xee,
	0x14, 0x58, 0xe4, 0x73, 0x53, 0xb7, 0x66, 0x36, 0x6a, 0x3b, 0x4b, 0xad, 0x64, 0x77, 0xb4, 0x14,
	0x36, 0x3b, 0x10, 0xa9, 0x04, 0x8b, 0xda, 0x7c, 0x85, 0xd9, 0x51, 0x48, 0x41, 0x8e, 0xe1, 0x4a,
	0xb6, 0x36, 0x07, 0x98, 0xd9, 0x41, 0x48, 0x27, 0xf2, 0x7c, 0xd2, 0x51, 0x2d, 0x11, 0x27, 0xf4,
	0x65, 0xcd, 0xbe, 0x20, 0xdc, 0xe3, 0xa3, 0xe3, 0x28, 0xe8, 0x01, 0x2d, 0xc8, 0xa5, 0x0e, 0xd2,
	0x6e, 0x13, 0x09, 0x30, 0x3a, 0x08, 0xc5, 0x0e, 0xb2, 0x68, 0x4b, 0xaa, 0xe6, 0xc6, 0xa1, 0x4e,
	0x6c, 0xd9, 0x39, 0xaf, 0x48, 0x64, 0xe5, 0x3e, 0x46, 0x65, 0xf1, 0xec, 0x82, 0x75, 0x50, 0xa6,
	0xa1, 0x3f, 0x89, 0xf5, 0x4f, 0x3a, 0x6a, 0x74, 0xa1, 0xe7, 0xf1, 0x73, 0x8a, 0x09, 0xc3, 0x8e,
	0x58, 0x81, 0x62, 0x49, 0xc4, 0x1d, 0x5e, 0x10, 0xea, 0x5c, 0x3c, 0x98, 0x45, 0x52, 0xd2, 0x4f,
	0x25, 0x5a, 0xb0, 0x9f, 0xea, 0xae, 0xb0, 0xdb, 0x2a, 0x6c, 0xa9, 0xc2, 0xb5, 0x33, 0xc0, 0xa4,
	0x0f, 0xb2, 0x73, 0x67, 0x0a, 0x54, 0x50, 0xf6, 0xb8, 0x73, 0x9f, 0xa0, 0xf2, 0x21, 0x3b, 0xb8,
	0x96, 0x8b, 0x2a, 0x2b, 0xf9, 0xac, 0xc7, 0xec, 0x8b, 0xc9, 0x65, 0xff, 0xae, 0x8c, 0x56, 0xf6,
	0x29, 0x60, 0x0e, 0xff, 0x75, 0x49, 0x1a, 0xcf, 0x50, 0xad, 0x0b, 0xcc, 0xa1, 0x9e, 0x7c, 0x21,
	0x28, 0xc8, 0xa6, 0xe6, 0x4e, 0xcc, 0xc6, 0x01, 0x5a, 0x48, 0x5d, 0x30, 0x33, 0x67, 0x64, 0x35,
	0xad, 0xe6, 0xaa, 0x49, 0x58, 0xb3, 0x29, 0x26, 0x8f, 0x14, 0x97, 0xc0, 0x52, 0xeb, 0xbd, 0x7c,
	0xeb, 0x7a, 0xff, 0x3a, 0xaa, 0xec, 0x47, 0x8c, 0x87, 0x01, 0xd0, 0x82, 0xc5, 0x5b, 0x71, 0x94,
	0xcd, 0x38, 0xcb, 0x5f, 0xa4, 0x5a, 0xb3, 0xcd, 0x49, 0x5c, 0xd3, 0x88, 0xec, 0xca, 0x8c, 0x2f,
	0x8c, 0xa7, 0x2a, 0x61, 0x7a, 0xdc, 0xce, 0xdf, 0x6b, 0xdc, 0x56, 0xee, 0x39, 0x6e, 0xa7, 0xa7,
	0x64, 0xf5, 0xae, 0x29, 0x69, 0xa1, 0xd9, 0x23, 0x8f, 0x84, 0xb4, 0x60, 0x8d, 0xce, 0x06, 0xc2,
	0x30, 0xae, 0x91, 0x3f, 0x94, 0xd0, 0xea, 0x54, 0x8d, 0xa8, 0x99, 0x70, 0x8f, 0x22, 0x39, 0x40,
	0x5f, 0x8a, 0x77, 0x71, 0x4a, 0x41, 0xd5, 0xd3, 0xf9, 0x82, 0xf9, 0xb2, 0xda, 0xcb, 0x29, 0x39,
	0x93, 0xfe, 0xee, 0xa2, 0xb5, 0xe9, 0x8b, 0x50, 0x34, 0xf9, 0xa6, 0x30, 0x73, 0x97, 0x92, 0xb0,
	0x64, 0xa4, 0x2e, 0xdf, 0x53, 0xea, 0xb1, 0x72, 0xb3, 0x77, 0x29, 0x77, 0x85, 0x56, 0x7e, 0x38,
	0x74, 0xff, 0x7f, 0xcd, 0x35, 0x7e, 0xf0, 0x21, 0x5a, 0xe9, 0x82, 0x0f, 0xff, 0xc3, 0x83, 0x13,
	0xaa, 0xcd, 0x6f, 0xa7, 0x07, 0xaa, 0x51, 0x45, 0xba, 0xdd, 0xd0, 0x9a, 0xa5, 0x8a, 0x66, 0x2c,
	0xa0, 0xf2, 0x09, 0x50, 0xd6, 0xd0, 0xe5, 0xaf, 0x1a, 0x9a, 0x79, 0x43, 0xfb, 0x8d, 0x92, 0xf8,
	0xd1, 0x2c, 0x99, 0xda, 0xce, 0xaf, 0xaa, 0x68, 0x51, 0x3d, 0xeb, 0x0c, 0xe8, 0xa5, 0xe7, 0x80,
	0xf1, 0x59, 0x47, 0x68, 0xb2, 0x5a, 0x8c, 0x07, 0x93, 0xde, 0xca, 0xad, 0xc4, 0x66, 0x7e, 0xbd,
	0xac, 0xff, 0x46, 0xbf, 0xe9, 0xf8, 0x93, 0x4f, 0x81, 0xe5, 0x53, 0xe0, 0xd4, 0x83, 0x4b, 0xb0,
	0x30, 0xb1, 0x14, 0xb8, 0xf9, 0x3a, 0x39, 0x64, 0x16, 0xf6, 0x7d, 0xcb, 0xc5, 0x1c, 0x5b, 0x17,
	0x34, 0x0c, 0x52, 0x98, 0x67, 0x16, 0x03, 0x1f, 0x1c, 0x0e, 0xae, 0xd5, 0x1b, 0x59, 0x7c, 0x00,
	0xd6, 0x24, 0x6b, 0x6b, 0x14, 0x46, 0x16, 0x8b, 0x86, 0x43, 0xdf, 0x03, 0xb7, 0xf5, 0xcb, 0xbf,
	0xfd, 0xe3, 0xd7, 0xa5, 0xa6, 0x61, 0x8a, 0x8f, 0x92, 0x24, 0x9a, 0xf6, 0xbb, 0xb1, 0x80, 0xbf,
	0xf8, 0x50, 0xd2, 0x3e, 0x96, 0xa4, 0x76, 0xc6, 0x3f, 0x4b, 0xa8, 0x96, 0xda, 0x9a, 0xc6, 0xc3,
	0xa2, 0xdc, 0x92, 0x35, 0xdd, 0x7c, 0x74, 0x8b, 0x35, 0x6e, 0xab, 0xf5, 0xdf, 0x96, 0x6e, 0x3a,
	0xef, 0x4b, 0x93, 0x4c, 0x97, 0x5e, 0x7b, 0x8c, 0xcb, 0x7c, 0xc6, 0x9f, 0x6b, 0x7f, 0xd7, 0x4f,
	0x81, 0x47, 0x94, 0x30, 0x0b, 0x5b, 0xbe, 0xb0, 0x8a, 0x37, 0x5f, 0xec, 0x11, 0x8f, 0xf4, 0xad,
	0x68, 0x68, 0xf1, 0xd0, 0xda, 0xd9, 0x1e, 0xa3, 0x5b, 0xd6, 0x8f, 0xc3, 0xc8, 0x72, 0x30, 0xb1,
	0x86, 0xb8, 0xef, 0x11, 0xcc, 0xc1, 0xe2, 0x03, 0x1a, 0x46, 0xfd, 0x41, 0x02, 0x11, 0x4a, 0xc8,
	0xb4, 0x47, 0x82, 0xa0, 0xe0, 0xed, 0xc0, 0xf2, 0x88, 0xd0, 0x86, 0x5a, 0x2c, 0xea, 0x31, 0x91,
	0x05, 0xe1, 0xcc, 0x72, 0xb0, 0xef, 0xb3, 0x56, 0x21, 0x5c, 0x85, 0xc3, 0xa6, 0xf5, 0x0d, 0x2f,
	0xe4, 0x89, 0x8f, 0x45, 0x42, 0xb9, 0x63, 0xf5, 0x56, 0x2b, 0xc2, 0x84, 0x58, 0xfd, 0x45, 0x63,
	0x21, 0xad, 0x7e, 0x4a, 0xf1, 0x4f, 0x3a, 0xaa, 0x67, 0xa6, 0x92, 0xf1, 0x78, 0xa2, 0x6a, 0xd1,
	0x4a, 0x6b, 0x3e, 0xb9, 0xd5, 0xae, 0x74, 0x3f, 0xbb, 0xe9, 0x3c, 0x4f, 0xa9, 0x1e, 0x83, 0xd2,
	0xd5, 0xa5, 0xc6, 0xa0, 0x10, 0x9d, 0xc0, 0x55, 0x72, 0x2c, 0x03, 0x5d, 0xda, 0xd5, 0x37, 0xd7,
	0x6f, 0x8b, 0xf5, 0xcf, 0x3a, 0xaa, 0x67, 0x06, 0x41, 0x3a, 0xd6, 0xa2, 0x09, 0xd1, 0x5c, 0x6b,
	0xc5, 0xdf, 0xd0, 0xad, 0xe4, 0x1b, 0xba, 0xf5, 0x42, 0x7c, 0x43, 0xaf, 0xff, 0xfc, 0xa6, 0x73,
	0x9c, 0x0a, 0x31, 0xf6, 0x4d, 0x87, 0xb8, 0x1d, 0x1f, 0xb1, 0xd4, 0x99, 0x75, 0xe5, 0xf1, 0x81,
	0x2c, 0x1f, 0xa1, 0xf1, 0x85, 0x07, 0xbe, 0xcb, 0xa6, 0x8a, 0xfc, 0xd1, 0xae, 0xbe, 0xd9, 0xbc,
	0xb3, 0xce, 0x8d, 0xdf, 0xeb, 0xa8, 0x9e, 0x99, 0x2b, 0xe9, 0x3c, 0x8a, 0x06, 0xce, 0xad, 0x79,
	0xc0, 0x4d, 0xe7, 0x7b, 0xa9, 0x3c, 0x62, 0xdf, 0x74, 0x1e, 0x8f, 0x4f, 0x80, 0x06, 0x98, 0x00,
	0xe1, 0xfe, 0xc8, 0x72, 0xa7, 0xcd, 0xaa, 0x35, 0x37, 0xef, 0x0c, 0xb9, 0x39, 0xf3, 0xa1, 0xa4,
	0xed, 0x7d, 0xf5, 0x95, 0x7e, 0xa2, 0xfd, 0x64, 0xfc, 0x9f, 0x1d, 0xef, 0x75, 0xed, 0x83, 0xae,
	0x7d, 0xd4, 0xb5, 0x3f, 0xea, 0xda, 0x67, 0x5d, 0xfb, 0x97, 0xae, 0xfd, 0xb5, 0xa4, 0xf5, 0xe6,
	0x64, 0x88, 0xcf, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x1d, 0xba, 0x2e, 0x36, 0x11, 0x00,
	0x00,
}
